{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x729A037C7A8334aBe404eC3122D1b8065aA99AEB",
    "txHash": "0x4f08626811c2f377f55da08d9668639d2a4de97599d4a988e8abdf92f6e98620",
    "deployTransaction": {
      "hash": "0x4f08626811c2f377f55da08d9668639d2a4de97599d4a988e8abdf92f6e98620",
      "type": 0,
      "accessList": null,
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0xE24f99419d788003c0D5212f05F47B1572cDC38a",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x104c533c00"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 163,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0xb66cb560ee12c7298860c86cc16103e2aaa7925d37914609ca4295108466fa36",
      "s": "0x0edc8345823328045c3293ec271718c1769357d044406a5dbfa62c86f9ae8d25",
      "v": 44,
      "creates": "0x729A037C7A8334aBe404eC3122D1b8065aA99AEB",
      "chainId": 4
    }
  },
  "proxies": [
    {
      "address": "0xB407928b64dA1ca56f51edd729566E448d31FDCc",
      "txHash": "0x84d86957a1fd31550d885666f8e4bf9f6d80cd7a1e979b284e2989ad786e84d1",
      "kind": "uups"
    },
    {
      "address": "0x87B11e862e372570C33f591F1Deb7f67Af56B319",
      "txHash": "0x1d6c8a4485ab719ae3aa1570ac075d066e4f9f6c9a2f7efafb10da9e05bcc777",
      "kind": "transparent"
    },
    {
      "address": "0x8423A10216488fe92cE79D7D58173fE2E91f0807",
      "txHash": "0x0293eeac2d23e180406d1642a37b97e472790656715ad485fdfa7d4e6182c909",
      "kind": "transparent"
    },
    {
      "address": "0x7C560b7B6F81918AebFb105d608428a79e637a25",
      "txHash": "0x55a6f1a65626af6f43d023e1814ba224e1c30ea2243733321cf3b91f9d76ba60",
      "kind": "uups"
    },
    {
      "address": "0x68c234FE46362d334da2e18d09e30Df9C79daacA",
      "txHash": "0x9746c8a2b0c519eb000af8391b3a19ba616d5fc3ea1e03b0530807640f72d491",
      "kind": "uups"
    },
    {
      "address": "0xc666c0501B4df07946CD7B96e5CF7964686f4f12",
      "txHash": "0x8c248efe4466edf5ff78f37c79b6dec9ec0cefa737c64c28021dc8d8033be7da",
      "kind": "uups"
    },
    {
      "address": "0xCDB21507c91615CbA869FE705FEC4991BEc9260A",
      "txHash": "0x3327d62e72b63608a77871f397c62f62f65a1e4f527c29e4d77b39e62a85ac22",
      "kind": "uups"
    },
    {
      "address": "0xdb7344e9C1aC2808b9d6d77b3B786d5fc8F8a198",
      "txHash": "0x48e1e729594a433599e7997dddf88e5566549c47849e29598b563b6d2b99d05d",
      "kind": "uups"
    },
    {
      "address": "0x72ad86B2753Ff00b1E947940305449258cc3AdC5",
      "txHash": "0x00c301c3a0e141ddb2da75c1799310fa4818d7fc9f3307026c87c75bbef2b22e",
      "kind": "uups"
    },
    {
      "address": "0x157516F311b0480F07D1de859942553a57fB87F7",
      "txHash": "0x44d367ab3cabfbffa3df8e61b9ebe4d59351cb6bf605e0c936e37e18586eae55",
      "kind": "uups"
    },
    {
      "address": "0x905D8bEA76FF7792A8cdbBdb760e89d153DfDaB8",
      "txHash": "0xd1096b04a75e46ea0b893eabd839bd441613bfd2aab21276d3d639d21c9f9d65",
      "kind": "uups"
    },
    {
      "address": "0x1aFfE27D132874EcF1E4C7F74B498Fdd1878d14E",
      "txHash": "0x47e9d59f43712d4d9a5cee7544fd5d2a6880f0d18ba17096b99069de0e099352",
      "kind": "uups"
    },
    {
      "address": "0xe21D8B17CF2550DE4bC80779486BDC68Cb3a379E",
      "txHash": "0x24abd18932c5531ff4cc3bbc64c279f57f7436743aa29689e5afb0cf3e540fb6",
      "kind": "uups"
    },
    {
      "address": "0x143d4f7cc6D4CfE63C405be49dE5C6654aD4aF90",
      "txHash": "0x5228d8c7ab8845afd2f5c5eb6c72a7466b443b1d1bf0a7140ea757b9ba47f39e",
      "kind": "uups"
    },
    {
      "address": "0xCd6bc294aA2B2dFB7af793fe308e0Ef1114F8738",
      "txHash": "0x6feb12731ea5523586a4ecdae0cf49bdac4d8abbc857c7ec7fb41fd7ae3e71ee",
      "kind": "uups"
    },
    {
      "address": "0xbF09428BDEdD21f8698C44e3B327Ec405B1Ba64d",
      "txHash": "0x7a938c6d279ac576041bf92581911bc1618bf8304130b9be3393f0252d9da12b",
      "kind": "uups"
    },
    {
      "address": "0xB262924268de99FA4fA8AD420490A31e997554CE",
      "txHash": "0x20cc2b22a2fd70dd35ff39a1c9a8638ce4f55ccfbbc26416c65a06effa5edc89",
      "kind": "uups"
    },
    {
      "address": "0x497AaD43Aa99b71900c0E604C3d33a43864f07f6",
      "txHash": "0x182d584c2ae8adeb10b090f20891ecd06b5f9bf11291a5bfbba2b60468e69c54",
      "kind": "uups"
    },
    {
      "address": "0x03883AE9F07D71a1b67b89fD4af83B9A81e3f8C4",
      "txHash": "0xc44e4bf5962f5c63ff572734980700f80bab3e15c426043c6aa926987bd913d3",
      "kind": "transparent"
    }
  ],
  "impls": {
    "72aa57fc503eb453bf811a310fbf5e0d587cee96f2999854061d810816b19520": {
      "address": "0xd0B50124710b042593319d1567FB9e35f821fCd0",
      "txHash": "0x7e619f6d5305b7955fb3466c5f05ec0c562b45b48ef26de9b42a170b60bacb07",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQLiquidityMining",
            "label": "stakes",
            "type": "t_mapping(t_address,t_struct(Staker)8398_storage)",
            "src": "contracts/WQLiquidityMining.sol:42"
          },
          {
            "contract": "WQLiquidityMining",
            "label": "stakeToken",
            "type": "t_contract(IERC20Upgradeable)1794",
            "src": "contracts/WQLiquidityMining.sol:45"
          },
          {
            "contract": "WQLiquidityMining",
            "label": "rewardToken",
            "type": "t_contract(IERC20Upgradeable)1794",
            "src": "contracts/WQLiquidityMining.sol:48"
          },
          {
            "contract": "WQLiquidityMining",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/WQLiquidityMining.sol:52"
          },
          {
            "contract": "WQLiquidityMining",
            "label": "rewardTotal",
            "type": "t_uint256",
            "src": "contracts/WQLiquidityMining.sol:54"
          },
          {
            "contract": "WQLiquidityMining",
            "label": "distributionTime",
            "type": "t_uint256",
            "src": "contracts/WQLiquidityMining.sol:56"
          },
          {
            "contract": "WQLiquidityMining",
            "label": "tokensPerStake",
            "type": "t_uint256",
            "src": "contracts/WQLiquidityMining.sol:58"
          },
          {
            "contract": "WQLiquidityMining",
            "label": "rewardProduced",
            "type": "t_uint256",
            "src": "contracts/WQLiquidityMining.sol:59"
          },
          {
            "contract": "WQLiquidityMining",
            "label": "allProduced",
            "type": "t_uint256",
            "src": "contracts/WQLiquidityMining.sol:60"
          },
          {
            "contract": "WQLiquidityMining",
            "label": "producedTime",
            "type": "t_uint256",
            "src": "contracts/WQLiquidityMining.sol:61"
          },
          {
            "contract": "WQLiquidityMining",
            "label": "totalStaked",
            "type": "t_uint256",
            "src": "contracts/WQLiquidityMining.sol:62"
          },
          {
            "contract": "WQLiquidityMining",
            "label": "totalDistributed",
            "type": "t_uint256",
            "src": "contracts/WQLiquidityMining.sol:63"
          },
          {
            "contract": "WQLiquidityMining",
            "label": "stakingPaused",
            "type": "t_bool",
            "src": "contracts/WQLiquidityMining.sol:65"
          },
          {
            "contract": "WQLiquidityMining",
            "label": "unstakingPaused",
            "type": "t_bool",
            "src": "contracts/WQLiquidityMining.sol:66"
          },
          {
            "contract": "WQLiquidityMining",
            "label": "claimingPaused",
            "type": "t_bool",
            "src": "contracts/WQLiquidityMining.sol:67"
          },
          {
            "contract": "WQLiquidityMining",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/WQLiquidityMining.sol:68"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(Staker)8398_storage)": {
            "label": "mapping(address => struct WQLiquidityMining.Staker)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Staker)8398_storage": {
            "label": "struct WQLiquidityMining.Staker",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "distributed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1794": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "a6ccc90f4601da1fa1b3ba8a42cfca06bdb0666f6df02dfcc67f5c56e293b1e5": {
      "address": "0xf7C545A6f717761Fa00f6076bC5F0776723f65e8",
      "txHash": "0x560ba26457fdf307c5b4ea85001175e694cc82ac23cb01df0ab278b96085e422",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQStaking",
            "label": "stakes",
            "type": "t_mapping(t_address,t_struct(Staker)10649_storage)",
            "src": "contracts/WQStaking.sol:43"
          },
          {
            "contract": "WQStaking",
            "label": "stakeToken",
            "type": "t_contract(IERC20Upgradeable)1794",
            "src": "contracts/WQStaking.sol:46"
          },
          {
            "contract": "WQStaking",
            "label": "rewardToken",
            "type": "t_contract(IERC20Upgradeable)1794",
            "src": "contracts/WQStaking.sol:49"
          },
          {
            "contract": "WQStaking",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:53"
          },
          {
            "contract": "WQStaking",
            "label": "rewardTotal",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:55"
          },
          {
            "contract": "WQStaking",
            "label": "distributionTime",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:57"
          },
          {
            "contract": "WQStaking",
            "label": "stakePeriod",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:59"
          },
          {
            "contract": "WQStaking",
            "label": "claimPeriod",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:61"
          },
          {
            "contract": "WQStaking",
            "label": "minStake",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:63"
          },
          {
            "contract": "WQStaking",
            "label": "maxStake",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:65"
          },
          {
            "contract": "WQStaking",
            "label": "tokensPerStake",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:67"
          },
          {
            "contract": "WQStaking",
            "label": "rewardProduced",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:68"
          },
          {
            "contract": "WQStaking",
            "label": "allProduced",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:69"
          },
          {
            "contract": "WQStaking",
            "label": "producedTime",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:70"
          },
          {
            "contract": "WQStaking",
            "label": "totalStaked",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:72"
          },
          {
            "contract": "WQStaking",
            "label": "totalDistributed",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:73"
          },
          {
            "contract": "WQStaking",
            "label": "_entered",
            "type": "t_bool",
            "src": "contracts/WQStaking.sol:75"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(Staker)10649_storage)": {
            "label": "mapping(address => struct WQStaking.Staker)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Staker)10649_storage": {
            "label": "struct WQStaking.Staker",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "distributed",
                "type": "t_uint256"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256"
              },
              {
                "label": "claimedAt",
                "type": "t_uint256"
              },
              {
                "label": "unstakeTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1794": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "5e8c96dff8aebf26bf81105790dd425deb7e72c088bec9366167d8833947edf1": {
      "address": "0xeF00CC4eb7F9d4Fdc0b34F1d7Ed0f12BFc6D0E5b",
      "txHash": "0x60c976d94ca53a6a402c8caa14f50f5cfb5ed20bcc8c40b41cd41b3827388e78",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "WQStakingNative",
            "label": "stakes",
            "type": "t_mapping(t_address,t_struct(Staker)1403_storage)",
            "src": "contracts/WQStakingNative.sol:45"
          },
          {
            "contract": "WQStakingNative",
            "label": "rewardToken",
            "type": "t_contract(IERC20Upgradeable)589",
            "src": "contracts/WQStakingNative.sol:48"
          },
          {
            "contract": "WQStakingNative",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:52"
          },
          {
            "contract": "WQStakingNative",
            "label": "rewardTotal",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:54"
          },
          {
            "contract": "WQStakingNative",
            "label": "distributionTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:56"
          },
          {
            "contract": "WQStakingNative",
            "label": "stakePeriod",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:58"
          },
          {
            "contract": "WQStakingNative",
            "label": "claimPeriod",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:60"
          },
          {
            "contract": "WQStakingNative",
            "label": "minStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:62"
          },
          {
            "contract": "WQStakingNative",
            "label": "maxStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:64"
          },
          {
            "contract": "WQStakingNative",
            "label": "tokensPerStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:66"
          },
          {
            "contract": "WQStakingNative",
            "label": "rewardProduced",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:67"
          },
          {
            "contract": "WQStakingNative",
            "label": "allProduced",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:68"
          },
          {
            "contract": "WQStakingNative",
            "label": "producedTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:69"
          },
          {
            "contract": "WQStakingNative",
            "label": "totalStaked",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:71"
          },
          {
            "contract": "WQStakingNative",
            "label": "totalDistributed",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:72"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(Staker)1403_storage)": {
            "label": "mapping(address => struct WQStakingNative.Staker)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Staker)1403_storage": {
            "label": "struct WQStakingNative.Staker",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "distributed",
                "type": "t_uint256"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256"
              },
              {
                "label": "claimedAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)589": {
            "label": "contract IERC20Upgradeable"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9a1d82e4a03bef2a2ee05d5827537bfe93bcc86b9c6a48e1c0435016fe0699bb": {
      "address": "0x5d5596E09Ef271e46f4155e615fC6f24daeE42E9",
      "txHash": "0x01db24eb8bbfe93df0f803049eb5768b7a0341448349b3f2e35165bcebeffaab",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQStaking",
            "label": "stakes",
            "type": "t_mapping(t_address,t_struct(Staker)10649_storage)",
            "src": "contracts/WQStaking.sol:43"
          },
          {
            "contract": "WQStaking",
            "label": "stakeToken",
            "type": "t_contract(IERC20Upgradeable)1794",
            "src": "contracts/WQStaking.sol:46"
          },
          {
            "contract": "WQStaking",
            "label": "rewardToken",
            "type": "t_contract(IERC20Upgradeable)1794",
            "src": "contracts/WQStaking.sol:49"
          },
          {
            "contract": "WQStaking",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:53"
          },
          {
            "contract": "WQStaking",
            "label": "rewardTotal",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:55"
          },
          {
            "contract": "WQStaking",
            "label": "distributionTime",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:57"
          },
          {
            "contract": "WQStaking",
            "label": "stakePeriod",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:59"
          },
          {
            "contract": "WQStaking",
            "label": "claimPeriod",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:61"
          },
          {
            "contract": "WQStaking",
            "label": "minStake",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:63"
          },
          {
            "contract": "WQStaking",
            "label": "maxStake",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:65"
          },
          {
            "contract": "WQStaking",
            "label": "tokensPerStake",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:67"
          },
          {
            "contract": "WQStaking",
            "label": "rewardProduced",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:68"
          },
          {
            "contract": "WQStaking",
            "label": "allProduced",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:69"
          },
          {
            "contract": "WQStaking",
            "label": "producedTime",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:70"
          },
          {
            "contract": "WQStaking",
            "label": "totalStaked",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:72"
          },
          {
            "contract": "WQStaking",
            "label": "totalDistributed",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:73"
          },
          {
            "contract": "WQStaking",
            "label": "_entered",
            "type": "t_bool",
            "src": "contracts/WQStaking.sol:75"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(Staker)10649_storage)": {
            "label": "mapping(address => struct WQStaking.Staker)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Staker)10649_storage": {
            "label": "struct WQStaking.Staker",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "distributed",
                "type": "t_uint256"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256"
              },
              {
                "label": "claimedAt",
                "type": "t_uint256"
              },
              {
                "label": "unstakeTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1794": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "9ba09abaa2dbc85a3f7d35aa0de9f02ea62dc1980ab78f059d41ab2312ec5cdf": {
      "address": "0x5aaCdFd09B2EeB818A28696977Bc8f160d205369",
      "txHash": "0xa3731b30997cc8cdd1053b63f342d45d9a81c927edc401ffdcc2a5b96c08c2bc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "WQStakingNative",
            "label": "stakes",
            "type": "t_mapping(t_address,t_struct(Staker)11625_storage)",
            "src": "contracts/WQStakingNative.sol:45"
          },
          {
            "contract": "WQStakingNative",
            "label": "rewardToken",
            "type": "t_contract(IERC20Upgradeable)1794",
            "src": "contracts/WQStakingNative.sol:48"
          },
          {
            "contract": "WQStakingNative",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:52"
          },
          {
            "contract": "WQStakingNative",
            "label": "rewardTotal",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:54"
          },
          {
            "contract": "WQStakingNative",
            "label": "distributionTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:56"
          },
          {
            "contract": "WQStakingNative",
            "label": "stakePeriod",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:58"
          },
          {
            "contract": "WQStakingNative",
            "label": "claimPeriod",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:60"
          },
          {
            "contract": "WQStakingNative",
            "label": "minStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:62"
          },
          {
            "contract": "WQStakingNative",
            "label": "maxStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:64"
          },
          {
            "contract": "WQStakingNative",
            "label": "tokensPerStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:66"
          },
          {
            "contract": "WQStakingNative",
            "label": "rewardProduced",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:67"
          },
          {
            "contract": "WQStakingNative",
            "label": "allProduced",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:68"
          },
          {
            "contract": "WQStakingNative",
            "label": "producedTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:69"
          },
          {
            "contract": "WQStakingNative",
            "label": "totalStaked",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:71"
          },
          {
            "contract": "WQStakingNative",
            "label": "totalDistributed",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:72"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(Staker)11625_storage)": {
            "label": "mapping(address => struct WQStakingNative.Staker)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Staker)11625_storage": {
            "label": "struct WQStakingNative.Staker",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "distributed",
                "type": "t_uint256"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256"
              },
              {
                "label": "claimedAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1794": {
            "label": "contract IERC20Upgradeable"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fa5724490eac43b0965fde3d4751d709fab3519edcf687909ff09261b22f7e1a": {
      "address": "0x7300101789978a098812A1BB8C2A97Ba6CBC0614",
      "txHash": "0x18e3a6020aee2d651c321f3457be10f81801879a3c2beeb0782664d61f77283a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "WQStakingNative",
            "label": "stakes",
            "type": "t_mapping(t_address,t_struct(Staker)11626_storage)",
            "src": "contracts/WQStakingNative.sol:46"
          },
          {
            "contract": "WQStakingNative",
            "label": "rewardToken",
            "type": "t_contract(IERC20Upgradeable)1794",
            "src": "contracts/WQStakingNative.sol:49"
          },
          {
            "contract": "WQStakingNative",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:53"
          },
          {
            "contract": "WQStakingNative",
            "label": "rewardTotal",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:55"
          },
          {
            "contract": "WQStakingNative",
            "label": "distributionTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:57"
          },
          {
            "contract": "WQStakingNative",
            "label": "stakePeriod",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:59"
          },
          {
            "contract": "WQStakingNative",
            "label": "claimPeriod",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:61"
          },
          {
            "contract": "WQStakingNative",
            "label": "minStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:63"
          },
          {
            "contract": "WQStakingNative",
            "label": "maxStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:65"
          },
          {
            "contract": "WQStakingNative",
            "label": "tokensPerStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:67"
          },
          {
            "contract": "WQStakingNative",
            "label": "rewardProduced",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:68"
          },
          {
            "contract": "WQStakingNative",
            "label": "allProduced",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:69"
          },
          {
            "contract": "WQStakingNative",
            "label": "producedTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:70"
          },
          {
            "contract": "WQStakingNative",
            "label": "totalStaked",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:72"
          },
          {
            "contract": "WQStakingNative",
            "label": "totalDistributed",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:73"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(Staker)11626_storage)": {
            "label": "mapping(address => struct WQStakingNative.Staker)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Staker)11626_storage": {
            "label": "struct WQStakingNative.Staker",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "distributed",
                "type": "t_uint256"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256"
              },
              {
                "label": "claimedAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1794": {
            "label": "contract IERC20Upgradeable"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ecdd6820c8abe8be6ea4c3b31263b037a09a9bb23d65b716d9852dffb8cc6d31": {
      "address": "0xf5047332270F04d314152C92f26aE393d4611dAa",
      "txHash": "0x55f2ebf94b598c77cce20d2a4a35db58d5f2c563b5205455a6b652a79c22e1e9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQStaking",
            "label": "stakes",
            "type": "t_mapping(t_address,t_struct(Staker)10649_storage)",
            "src": "contracts/WQStaking.sol:43"
          },
          {
            "contract": "WQStaking",
            "label": "stakeToken",
            "type": "t_contract(IERC20Upgradeable)1794",
            "src": "contracts/WQStaking.sol:46"
          },
          {
            "contract": "WQStaking",
            "label": "rewardToken",
            "type": "t_contract(IERC20Upgradeable)1794",
            "src": "contracts/WQStaking.sol:49"
          },
          {
            "contract": "WQStaking",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:53"
          },
          {
            "contract": "WQStaking",
            "label": "rewardTotal",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:55"
          },
          {
            "contract": "WQStaking",
            "label": "distributionTime",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:57"
          },
          {
            "contract": "WQStaking",
            "label": "stakePeriod",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:59"
          },
          {
            "contract": "WQStaking",
            "label": "claimPeriod",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:61"
          },
          {
            "contract": "WQStaking",
            "label": "minStake",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:63"
          },
          {
            "contract": "WQStaking",
            "label": "maxStake",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:65"
          },
          {
            "contract": "WQStaking",
            "label": "tokensPerStake",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:67"
          },
          {
            "contract": "WQStaking",
            "label": "rewardProduced",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:68"
          },
          {
            "contract": "WQStaking",
            "label": "allProduced",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:69"
          },
          {
            "contract": "WQStaking",
            "label": "producedTime",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:70"
          },
          {
            "contract": "WQStaking",
            "label": "totalStaked",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:72"
          },
          {
            "contract": "WQStaking",
            "label": "totalDistributed",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:73"
          },
          {
            "contract": "WQStaking",
            "label": "_entered",
            "type": "t_bool",
            "src": "contracts/WQStaking.sol:75"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(Staker)10649_storage)": {
            "label": "mapping(address => struct WQStaking.Staker)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Staker)10649_storage": {
            "label": "struct WQStaking.Staker",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "distributed",
                "type": "t_uint256"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256"
              },
              {
                "label": "claimedAt",
                "type": "t_uint256"
              },
              {
                "label": "unstakeTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1794": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "e23bb64000c51dcd2e0ce1bd024b9c90ccf3140300d9e76097212dcea6c883fb": {
      "address": "0xF3C2FEAadBC1afaCa5ABc71C42e15b5888E1a912",
      "txHash": "0x2b93c9ddceebc35e12ddfe250788db355d6fd8e165c4292ca9ecdfd85fb5eed3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQStakingNative",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:48"
          },
          {
            "contract": "WQStakingNative",
            "label": "rewardTotal",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:50"
          },
          {
            "contract": "WQStakingNative",
            "label": "distributionTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:52"
          },
          {
            "contract": "WQStakingNative",
            "label": "stakePeriod",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:54"
          },
          {
            "contract": "WQStakingNative",
            "label": "claimPeriod",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:56"
          },
          {
            "contract": "WQStakingNative",
            "label": "minStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:58"
          },
          {
            "contract": "WQStakingNative",
            "label": "maxStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:60"
          },
          {
            "contract": "WQStakingNative",
            "label": "tokensPerStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:62"
          },
          {
            "contract": "WQStakingNative",
            "label": "rewardProduced",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:63"
          },
          {
            "contract": "WQStakingNative",
            "label": "earlierProduced",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:64"
          },
          {
            "contract": "WQStakingNative",
            "label": "producedTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:65"
          },
          {
            "contract": "WQStakingNative",
            "label": "totalStaked",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:66"
          },
          {
            "contract": "WQStakingNative",
            "label": "totalDistributed",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:67"
          },
          {
            "contract": "WQStakingNative",
            "label": "stakes",
            "type": "t_mapping(t_address,t_struct(Staker)1985_storage)",
            "src": "contracts/WQStakingNative.sol:70"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Staker)1985_storage)": {
            "label": "mapping(address => struct WQStakingNative.Staker)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Staker)1985_storage": {
            "label": "struct WQStakingNative.Staker",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "distributed",
                "type": "t_uint256"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256"
              },
              {
                "label": "claimedAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "da5e5d545cd5c77c624e6b48ec7f5a6aab123e3c7cb24573a0f460b316af63d0": {
      "address": "0x95ed2359c8286f1Fb7A88A65613780cE753DbDA4",
      "txHash": "0xf1156daa01fa8d10e5b42680ed12df5d0e08726f7531d030083f05b87f78c84b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQStaking",
            "label": "stakes",
            "type": "t_mapping(t_address,t_struct(Staker)10665_storage)",
            "src": "contracts/WQStaking.sol:49"
          },
          {
            "contract": "WQStaking",
            "label": "stakeToken",
            "type": "t_contract(IERC20Upgradeable)1794",
            "src": "contracts/WQStaking.sol:52"
          },
          {
            "contract": "WQStaking",
            "label": "rewardToken",
            "type": "t_contract(IERC20Upgradeable)1794",
            "src": "contracts/WQStaking.sol:55"
          },
          {
            "contract": "WQStaking",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:59"
          },
          {
            "contract": "WQStaking",
            "label": "rewardTotal",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:61"
          },
          {
            "contract": "WQStaking",
            "label": "distributionTime",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:63"
          },
          {
            "contract": "WQStaking",
            "label": "stakePeriod",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:65"
          },
          {
            "contract": "WQStaking",
            "label": "claimPeriod",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:67"
          },
          {
            "contract": "WQStaking",
            "label": "minStake",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:69"
          },
          {
            "contract": "WQStaking",
            "label": "maxStake",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:71"
          },
          {
            "contract": "WQStaking",
            "label": "tokensPerStake",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:73"
          },
          {
            "contract": "WQStaking",
            "label": "rewardProduced",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:74"
          },
          {
            "contract": "WQStaking",
            "label": "earlierProduced",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:75"
          },
          {
            "contract": "WQStaking",
            "label": "producedTime",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:76"
          },
          {
            "contract": "WQStaking",
            "label": "totalStaked",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:77"
          },
          {
            "contract": "WQStaking",
            "label": "totalDistributed",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:78"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(Staker)10665_storage)": {
            "label": "mapping(address => struct WQStaking.Staker)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Staker)10665_storage": {
            "label": "struct WQStaking.Staker",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "distributed",
                "type": "t_uint256"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256"
              },
              {
                "label": "claimedAt",
                "type": "t_uint256"
              },
              {
                "label": "unstakeTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1794": {
            "label": "contract IERC20Upgradeable"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1e0fbc49a615e33efdd11ccb9b6a706218f1a9be77a644327e15ac8e107486e4": {
      "address": "0xa39C05194Ee5B43E422fcd48800E8dFc4780BD4C",
      "txHash": "0x7f972cb41d46bc688f0023845eb36115005305edd3877d8d54782cc03aa6af87",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQStakingNative",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:48"
          },
          {
            "contract": "WQStakingNative",
            "label": "rewardTotal",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:50"
          },
          {
            "contract": "WQStakingNative",
            "label": "distributionTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:52"
          },
          {
            "contract": "WQStakingNative",
            "label": "stakePeriod",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:54"
          },
          {
            "contract": "WQStakingNative",
            "label": "claimPeriod",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:56"
          },
          {
            "contract": "WQStakingNative",
            "label": "minStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:58"
          },
          {
            "contract": "WQStakingNative",
            "label": "maxStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:60"
          },
          {
            "contract": "WQStakingNative",
            "label": "tokensPerStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:62"
          },
          {
            "contract": "WQStakingNative",
            "label": "rewardProduced",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:63"
          },
          {
            "contract": "WQStakingNative",
            "label": "earlierProduced",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:64"
          },
          {
            "contract": "WQStakingNative",
            "label": "producedTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:65"
          },
          {
            "contract": "WQStakingNative",
            "label": "totalStaked",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:66"
          },
          {
            "contract": "WQStakingNative",
            "label": "totalDistributed",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:67"
          },
          {
            "contract": "WQStakingNative",
            "label": "stakes",
            "type": "t_mapping(t_address,t_struct(Staker)1985_storage)",
            "src": "contracts/WQStakingNative.sol:70"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Staker)1985_storage)": {
            "label": "mapping(address => struct WQStakingNative.Staker)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Staker)1985_storage": {
            "label": "struct WQStakingNative.Staker",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "distributed",
                "type": "t_uint256"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256"
              },
              {
                "label": "claimedAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8c02591b0c240d8d1622168f6fa394f313cd5d5fb23497fac2d34f12cd9d3ce0": {
      "address": "0xAB6EF411Ec38e4627936595661524105096e4D74",
      "txHash": "0x1ee620fd38290911b552ddbc01dfbec6d32cb417cdaf0ae0ce86d1aca5cef712",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQStakingNative",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:48"
          },
          {
            "contract": "WQStakingNative",
            "label": "rewardTotal",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:50"
          },
          {
            "contract": "WQStakingNative",
            "label": "distributionTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:52"
          },
          {
            "contract": "WQStakingNative",
            "label": "stakePeriod",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:54"
          },
          {
            "contract": "WQStakingNative",
            "label": "claimPeriod",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:56"
          },
          {
            "contract": "WQStakingNative",
            "label": "minStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:58"
          },
          {
            "contract": "WQStakingNative",
            "label": "maxStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:60"
          },
          {
            "contract": "WQStakingNative",
            "label": "tokensPerStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:62"
          },
          {
            "contract": "WQStakingNative",
            "label": "rewardProduced",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:63"
          },
          {
            "contract": "WQStakingNative",
            "label": "earlierProduced",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:64"
          },
          {
            "contract": "WQStakingNative",
            "label": "producedTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:65"
          },
          {
            "contract": "WQStakingNative",
            "label": "totalStaked",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:66"
          },
          {
            "contract": "WQStakingNative",
            "label": "totalDistributed",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:67"
          },
          {
            "contract": "WQStakingNative",
            "label": "stakes",
            "type": "t_mapping(t_address,t_struct(Staker)11697_storage)",
            "src": "contracts/WQStakingNative.sol:70"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Staker)11697_storage)": {
            "label": "mapping(address => struct WQStakingNative.Staker)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Staker)11697_storage": {
            "label": "struct WQStakingNative.Staker",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "distributed",
                "type": "t_uint256"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256"
              },
              {
                "label": "claimedAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "07d515bbdae2c6fbb11f469af531cce299da7f4668d47e4b683953cc82aa2472": {
      "address": "0x748E781B16B816c9e80b85A1cD6B9A03c5Ac6729",
      "txHash": "0x8bea8c89a85437cbde5bcd9c74d5c19ba2b0b23cdcfc7cdc122cbd96b4ab91e8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQStaking",
            "label": "stakes",
            "type": "t_mapping(t_address,t_struct(Staker)1987_storage)",
            "src": "contracts/WQStaking.sol:49"
          },
          {
            "contract": "WQStaking",
            "label": "stakeToken",
            "type": "t_contract(IERC20Upgradeable)1108",
            "src": "contracts/WQStaking.sol:52"
          },
          {
            "contract": "WQStaking",
            "label": "rewardToken",
            "type": "t_contract(IERC20Upgradeable)1108",
            "src": "contracts/WQStaking.sol:55"
          },
          {
            "contract": "WQStaking",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:59"
          },
          {
            "contract": "WQStaking",
            "label": "rewardTotal",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:61"
          },
          {
            "contract": "WQStaking",
            "label": "distributionTime",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:63"
          },
          {
            "contract": "WQStaking",
            "label": "stakePeriod",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:65"
          },
          {
            "contract": "WQStaking",
            "label": "claimPeriod",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:67"
          },
          {
            "contract": "WQStaking",
            "label": "minStake",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:69"
          },
          {
            "contract": "WQStaking",
            "label": "maxStake",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:71"
          },
          {
            "contract": "WQStaking",
            "label": "tokensPerStake",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:73"
          },
          {
            "contract": "WQStaking",
            "label": "rewardProduced",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:74"
          },
          {
            "contract": "WQStaking",
            "label": "earlierProduced",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:75"
          },
          {
            "contract": "WQStaking",
            "label": "producedTime",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:76"
          },
          {
            "contract": "WQStaking",
            "label": "totalStaked",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:77"
          },
          {
            "contract": "WQStaking",
            "label": "totalDistributed",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:78"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(Staker)1987_storage)": {
            "label": "mapping(address => struct WQStaking.Staker)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Staker)1987_storage": {
            "label": "struct WQStaking.Staker",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "distributed",
                "type": "t_uint256"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256"
              },
              {
                "label": "claimedAt",
                "type": "t_uint256"
              },
              {
                "label": "unstakeTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1108": {
            "label": "contract IERC20Upgradeable"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "289d79f47b1d7d8b2759c64d0e27b17aa80811b96f7d6cd71787d22fe7482e60": {
      "address": "0x4838Bb83b3934a8dBb5B3b307079288a9956683C",
      "txHash": "0xf5180da62afe6246d005ea8d5d3f78d70723907d227cdcfdc809dbd69d4d3f01",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQStakingNative",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:48"
          },
          {
            "contract": "WQStakingNative",
            "label": "rewardTotal",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:50"
          },
          {
            "contract": "WQStakingNative",
            "label": "distributionTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:52"
          },
          {
            "contract": "WQStakingNative",
            "label": "stakePeriod",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:54"
          },
          {
            "contract": "WQStakingNative",
            "label": "claimPeriod",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:56"
          },
          {
            "contract": "WQStakingNative",
            "label": "minStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:58"
          },
          {
            "contract": "WQStakingNative",
            "label": "maxStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:60"
          },
          {
            "contract": "WQStakingNative",
            "label": "tokensPerStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:62"
          },
          {
            "contract": "WQStakingNative",
            "label": "rewardProduced",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:63"
          },
          {
            "contract": "WQStakingNative",
            "label": "earlierProduced",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:64"
          },
          {
            "contract": "WQStakingNative",
            "label": "producedTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:65"
          },
          {
            "contract": "WQStakingNative",
            "label": "totalStaked",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:66"
          },
          {
            "contract": "WQStakingNative",
            "label": "totalDistributed",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:67"
          },
          {
            "contract": "WQStakingNative",
            "label": "stakes",
            "type": "t_mapping(t_address,t_struct(Staker)11810_storage)",
            "src": "contracts/WQStakingNative.sol:70"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Staker)11810_storage)": {
            "label": "mapping(address => struct WQStakingNative.Staker)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Staker)11810_storage": {
            "label": "struct WQStakingNative.Staker",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "distributed",
                "type": "t_uint256"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256"
              },
              {
                "label": "claimedAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b57f55e57decae50867cb0f7354b11bfdd21027e1bf21ce9e57268a028eb2812": {
      "address": "0xd24ae80b2b1d6338d141979C223Ef6EBDD46dF01",
      "txHash": "0x47a0e92ad25436bfb9cdf9d7f634d1d98abafe70ba519da0d69206c18d323432",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQStakingNative",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:48"
          },
          {
            "contract": "WQStakingNative",
            "label": "rewardTotal",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:50"
          },
          {
            "contract": "WQStakingNative",
            "label": "distributionTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:52"
          },
          {
            "contract": "WQStakingNative",
            "label": "stakePeriod",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:54"
          },
          {
            "contract": "WQStakingNative",
            "label": "claimPeriod",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:56"
          },
          {
            "contract": "WQStakingNative",
            "label": "minStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:58"
          },
          {
            "contract": "WQStakingNative",
            "label": "maxStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:60"
          },
          {
            "contract": "WQStakingNative",
            "label": "tokensPerStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:62"
          },
          {
            "contract": "WQStakingNative",
            "label": "rewardProduced",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:63"
          },
          {
            "contract": "WQStakingNative",
            "label": "earlierProduced",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:64"
          },
          {
            "contract": "WQStakingNative",
            "label": "producedTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:65"
          },
          {
            "contract": "WQStakingNative",
            "label": "totalStaked",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:66"
          },
          {
            "contract": "WQStakingNative",
            "label": "totalDistributed",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:67"
          },
          {
            "contract": "WQStakingNative",
            "label": "stakes",
            "type": "t_mapping(t_address,t_struct(Staker)1985_storage)",
            "src": "contracts/WQStakingNative.sol:70"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Staker)1985_storage)": {
            "label": "mapping(address => struct WQStakingNative.Staker)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Staker)1985_storage": {
            "label": "struct WQStakingNative.Staker",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "distributed",
                "type": "t_uint256"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256"
              },
              {
                "label": "claimedAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "44600d3884a1aec3f65dd3d32444c25625f459ebd892d3664d7040ce42d429b8": {
      "address": "0xe736559a3E00830D16C92A647Ff555f06072a41f",
      "txHash": "0x1c7e0302a412810de287a1f5d29b147d2180eca327de3ba7d1d3c470ae28fe02",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQStaking",
            "label": "stakes",
            "type": "t_mapping(t_address,t_struct(Staker)1987_storage)",
            "src": "contracts/WQStaking.sol:49"
          },
          {
            "contract": "WQStaking",
            "label": "stakeToken",
            "type": "t_contract(IERC20Upgradeable)1108",
            "src": "contracts/WQStaking.sol:52"
          },
          {
            "contract": "WQStaking",
            "label": "rewardToken",
            "type": "t_contract(IERC20Upgradeable)1108",
            "src": "contracts/WQStaking.sol:55"
          },
          {
            "contract": "WQStaking",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:59"
          },
          {
            "contract": "WQStaking",
            "label": "rewardTotal",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:61"
          },
          {
            "contract": "WQStaking",
            "label": "distributionTime",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:63"
          },
          {
            "contract": "WQStaking",
            "label": "stakePeriod",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:65"
          },
          {
            "contract": "WQStaking",
            "label": "claimPeriod",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:67"
          },
          {
            "contract": "WQStaking",
            "label": "minStake",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:69"
          },
          {
            "contract": "WQStaking",
            "label": "maxStake",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:71"
          },
          {
            "contract": "WQStaking",
            "label": "tokensPerStake",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:73"
          },
          {
            "contract": "WQStaking",
            "label": "rewardProduced",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:74"
          },
          {
            "contract": "WQStaking",
            "label": "earlierProduced",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:75"
          },
          {
            "contract": "WQStaking",
            "label": "producedTime",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:76"
          },
          {
            "contract": "WQStaking",
            "label": "totalStaked",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:77"
          },
          {
            "contract": "WQStaking",
            "label": "totalDistributed",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:78"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(Staker)1987_storage)": {
            "label": "mapping(address => struct WQStaking.Staker)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Staker)1987_storage": {
            "label": "struct WQStaking.Staker",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "distributed",
                "type": "t_uint256"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256"
              },
              {
                "label": "claimedAt",
                "type": "t_uint256"
              },
              {
                "label": "unstakeTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1108": {
            "label": "contract IERC20Upgradeable"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ddbcf7b5ba2c9e3ca66c9375ba2253d3e2ea27fae946042a0ede3b3eba2d2b2d": {
      "address": "0xc8fa0FAC39e578A6f5b11169926FFbCdF8948820",
      "txHash": "0x9d996a5b261c3f9092010374639ef9452c0b0d5208009caa011045c338b2ce3e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQStaking",
            "label": "stakes",
            "type": "t_mapping(t_address,t_struct(Staker)11317_storage)",
            "src": "contracts/WQStaking.sol:49"
          },
          {
            "contract": "WQStaking",
            "label": "stakeToken",
            "type": "t_contract(IERC20Upgradeable)1794",
            "src": "contracts/WQStaking.sol:52"
          },
          {
            "contract": "WQStaking",
            "label": "rewardToken",
            "type": "t_contract(IERC20Upgradeable)1794",
            "src": "contracts/WQStaking.sol:55"
          },
          {
            "contract": "WQStaking",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:59"
          },
          {
            "contract": "WQStaking",
            "label": "rewardTotal",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:61"
          },
          {
            "contract": "WQStaking",
            "label": "distributionTime",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:63"
          },
          {
            "contract": "WQStaking",
            "label": "stakePeriod",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:65"
          },
          {
            "contract": "WQStaking",
            "label": "claimPeriod",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:67"
          },
          {
            "contract": "WQStaking",
            "label": "minStake",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:69"
          },
          {
            "contract": "WQStaking",
            "label": "maxStake",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:71"
          },
          {
            "contract": "WQStaking",
            "label": "tokensPerStake",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:73"
          },
          {
            "contract": "WQStaking",
            "label": "rewardProduced",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:74"
          },
          {
            "contract": "WQStaking",
            "label": "earlierProduced",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:75"
          },
          {
            "contract": "WQStaking",
            "label": "producedTime",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:76"
          },
          {
            "contract": "WQStaking",
            "label": "totalStaked",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:77"
          },
          {
            "contract": "WQStaking",
            "label": "totalDistributed",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:78"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(Staker)11317_storage)": {
            "label": "mapping(address => struct WQStaking.Staker)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Staker)11317_storage": {
            "label": "struct WQStaking.Staker",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "distributed",
                "type": "t_uint256"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256"
              },
              {
                "label": "claimedAt",
                "type": "t_uint256"
              },
              {
                "label": "unstakeTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1794": {
            "label": "contract IERC20Upgradeable"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "43c23cd6c1ed8f1b138978f4b6c121fd8c1dfdcb0ce61053353547846c3a46d9": {
      "address": "0x74981fe96d847fA33eF6EE6a51fc58b767c5D3a0",
      "txHash": "0x97a58377aaf5cef3d3247a30899613dbf6a7cbe1dc90705ac9fd5b92bbc41e18",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQStakingNative",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:48"
          },
          {
            "contract": "WQStakingNative",
            "label": "rewardTotal",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:50"
          },
          {
            "contract": "WQStakingNative",
            "label": "distributionTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:52"
          },
          {
            "contract": "WQStakingNative",
            "label": "stakePeriod",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:54"
          },
          {
            "contract": "WQStakingNative",
            "label": "claimPeriod",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:56"
          },
          {
            "contract": "WQStakingNative",
            "label": "minStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:58"
          },
          {
            "contract": "WQStakingNative",
            "label": "maxStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:60"
          },
          {
            "contract": "WQStakingNative",
            "label": "tokensPerStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:62"
          },
          {
            "contract": "WQStakingNative",
            "label": "rewardProduced",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:63"
          },
          {
            "contract": "WQStakingNative",
            "label": "earlierProduced",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:64"
          },
          {
            "contract": "WQStakingNative",
            "label": "producedTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:65"
          },
          {
            "contract": "WQStakingNative",
            "label": "totalStaked",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:66"
          },
          {
            "contract": "WQStakingNative",
            "label": "totalDistributed",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:67"
          },
          {
            "contract": "WQStakingNative",
            "label": "stakes",
            "type": "t_mapping(t_address,t_struct(Staker)12201_storage)",
            "src": "contracts/WQStakingNative.sol:70"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Staker)12201_storage)": {
            "label": "mapping(address => struct WQStakingNative.Staker)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Staker)12201_storage": {
            "label": "struct WQStakingNative.Staker",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "distributed",
                "type": "t_uint256"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256"
              },
              {
                "label": "claimedAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3e6eca1343034e7a0a24b7821d8da4a849cfeb47fa3e1c129464cc38239e2d76": {
      "address": "0x5d05AB6eE39b59897BFd5fF5EBfcf3dfA7653E5f",
      "txHash": "0xd68079eac442f30a1eaafbc772d5c62a5cfc5ff1d62191bf62aefa688b3eb769",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQPensionFund",
            "label": "lockTime",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:33"
          },
          {
            "contract": "WQPensionFund",
            "label": "defaultFee",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:34"
          },
          {
            "contract": "WQPensionFund",
            "label": "contributed",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:35"
          },
          {
            "contract": "WQPensionFund",
            "label": "borrowed",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:36"
          },
          {
            "contract": "WQPensionFund",
            "label": "wallets",
            "type": "t_mapping(t_address,t_struct(PensionWallet)5265_storage)",
            "src": "contracts/WQPensionFund.sol:39"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(PensionWallet)5265_storage)": {
            "label": "mapping(address => struct WQPensionFund.PensionWallet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(PensionWallet)5265_storage": {
            "label": "struct WQPensionFund.PensionWallet",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "unlockDate",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b5c26586bdc5b48c46db887860f0a75bf9239f44de7683b936c9c121947a6e36": {
      "address": "0xA83d2aDedb99ccd6504f522e90A7F9Be96CED053",
      "txHash": "0x477208843756c29d7824a1af9bd64610d533cc0f3f59781ee5f443ea43740596",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQPensionFund",
            "label": "lockTime",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:34"
          },
          {
            "contract": "WQPensionFund",
            "label": "defaultFee",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:35"
          },
          {
            "contract": "WQPensionFund",
            "label": "contributed",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:36"
          },
          {
            "contract": "WQPensionFund",
            "label": "rewardsPerContributed",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:37"
          },
          {
            "contract": "WQPensionFund",
            "label": "rewardsProduced",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:38"
          },
          {
            "contract": "WQPensionFund",
            "label": "rewardsDistributed",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:39"
          },
          {
            "contract": "WQPensionFund",
            "label": "borrowed",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:40"
          },
          {
            "contract": "WQPensionFund",
            "label": "wallets",
            "type": "t_mapping(t_address,t_struct(PensionWallet)1709_storage)",
            "src": "contracts/WQPensionFund.sol:43"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(PensionWallet)1709_storage)": {
            "label": "mapping(address => struct WQPensionFund.PensionWallet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(PensionWallet)1709_storage": {
            "label": "struct WQPensionFund.PensionWallet",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "unlockDate",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "rewardDistributed",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "84f87135e5ff21457b1128adeca26575f4192c2accbc4b6a4e41a3617a28e544": {
      "address": "0xce41eD1A55e89de0d64B870400466572501aA67A",
      "txHash": "0xcee946ab49fcd00f8785a7fd224cab5798246232f2fdf6478a24a022dd293f27",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQPensionFund",
            "label": "lockTime",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:34"
          },
          {
            "contract": "WQPensionFund",
            "label": "defaultFee",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:35"
          },
          {
            "contract": "WQPensionFund",
            "label": "contributed",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:36"
          },
          {
            "contract": "WQPensionFund",
            "label": "rewardsPerContributed",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:37"
          },
          {
            "contract": "WQPensionFund",
            "label": "rewardsProduced",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:38"
          },
          {
            "contract": "WQPensionFund",
            "label": "rewardsDistributed",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:39"
          },
          {
            "contract": "WQPensionFund",
            "label": "borrowed",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:40"
          },
          {
            "contract": "WQPensionFund",
            "label": "wallets",
            "type": "t_mapping(t_address,t_struct(PensionWallet)6432_storage)",
            "src": "contracts/WQPensionFund.sol:43"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(PensionWallet)6432_storage)": {
            "label": "mapping(address => struct WQPensionFund.PensionWallet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(PensionWallet)6432_storage": {
            "label": "struct WQPensionFund.PensionWallet",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "unlockDate",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "rewardDistributed",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "611afc45ef0ce6bf723381c53598a8b48d6b584b019f4b57782b0bb843107357": {
      "address": "0xE8BCd0495757c72d85C36EC52EbB83F79936AB48",
      "txHash": "0x7c37193e2e0f98a5b258517dada79c59f25e97d84cb6f3ee28890f421f1dc65a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQReferral",
            "label": "token",
            "type": "t_contract(IERC20Upgradeable)1108",
            "src": "contracts/WQReferal.sol:51"
          },
          {
            "contract": "WQReferral",
            "label": "referralBonus",
            "type": "t_uint256",
            "src": "contracts/WQReferal.sol:53"
          },
          {
            "contract": "WQReferral",
            "label": "oracle",
            "type": "t_contract(WQPriceOracle)3778",
            "src": "contracts/WQReferal.sol:55"
          },
          {
            "contract": "WQReferral",
            "label": "factory",
            "type": "t_contract(WorkQuestFactory)5539",
            "src": "contracts/WQReferal.sol:57"
          },
          {
            "contract": "WQReferral",
            "label": "referrals",
            "type": "t_mapping(t_address,t_struct(Account)3829_storage)",
            "src": "contracts/WQReferal.sol:59"
          },
          {
            "contract": "WQReferral",
            "label": "affiliats",
            "type": "t_mapping(t_address,t_struct(AffiliatInfo)3834_storage)",
            "src": "contracts/WQReferal.sol:60"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)1108": {
            "label": "contract IERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(WQPriceOracle)3778": {
            "label": "contract WQPriceOracle"
          },
          "t_contract(WorkQuestFactory)5539": {
            "label": "contract WorkQuestFactory"
          },
          "t_mapping(t_address,t_struct(Account)3829_storage)": {
            "label": "mapping(address => struct WQReferral.Account)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Account)3829_storage": {
            "label": "struct WQReferral.Account",
            "members": [
              {
                "label": "affiliat",
                "type": "t_address"
              },
              {
                "label": "reward",
                "type": "t_uint256"
              },
              {
                "label": "referredCount",
                "type": "t_uint256"
              },
              {
                "label": "paid",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(AffiliatInfo)3834_storage)": {
            "label": "mapping(address => struct WQReferral.AffiliatInfo)"
          },
          "t_struct(AffiliatInfo)3834_storage": {
            "label": "struct WQReferral.AffiliatInfo",
            "members": [
              {
                "label": "rewardTotal",
                "type": "t_uint256"
              },
              {
                "label": "rewardPaid",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "0ce6a173632a0788d67766aeee98b6e2d5377e4d3e51b879004d1cfb89671a82": {
      "address": "0xC550BE58414BC3262BC04eC8d134d91A85C122aa",
      "txHash": "0x01a2ef2bebc543730a3a0497c0a7be9ed1d3c853df4825be99830df53e55b1eb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQReferral",
            "label": "token",
            "type": "t_contract(IERC20Upgradeable)1108",
            "src": "contracts/WQReferal.sol:51"
          },
          {
            "contract": "WQReferral",
            "label": "referralBonus",
            "type": "t_uint256",
            "src": "contracts/WQReferal.sol:53"
          },
          {
            "contract": "WQReferral",
            "label": "oracle",
            "type": "t_contract(WQPriceOracle)3778",
            "src": "contracts/WQReferal.sol:55"
          },
          {
            "contract": "WQReferral",
            "label": "factory",
            "type": "t_contract(WorkQuestFactory)5537",
            "src": "contracts/WQReferal.sol:57"
          },
          {
            "contract": "WQReferral",
            "label": "referrals",
            "type": "t_mapping(t_address,t_struct(Account)3829_storage)",
            "src": "contracts/WQReferal.sol:59"
          },
          {
            "contract": "WQReferral",
            "label": "affiliats",
            "type": "t_mapping(t_address,t_struct(AffiliatInfo)3834_storage)",
            "src": "contracts/WQReferal.sol:60"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)1108": {
            "label": "contract IERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(WQPriceOracle)3778": {
            "label": "contract WQPriceOracle"
          },
          "t_contract(WorkQuestFactory)5537": {
            "label": "contract WorkQuestFactory"
          },
          "t_mapping(t_address,t_struct(Account)3829_storage)": {
            "label": "mapping(address => struct WQReferral.Account)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Account)3829_storage": {
            "label": "struct WQReferral.Account",
            "members": [
              {
                "label": "affiliat",
                "type": "t_address"
              },
              {
                "label": "reward",
                "type": "t_uint256"
              },
              {
                "label": "referredCount",
                "type": "t_uint256"
              },
              {
                "label": "paid",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(AffiliatInfo)3834_storage)": {
            "label": "mapping(address => struct WQReferral.AffiliatInfo)"
          },
          "t_struct(AffiliatInfo)3834_storage": {
            "label": "struct WQReferral.AffiliatInfo",
            "members": [
              {
                "label": "rewardTotal",
                "type": "t_uint256"
              },
              {
                "label": "rewardPaid",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "c9f59fcf4dd790fa4ca63f68dc6b032540ef3e8d462a56385447d0fc5b4581c3": {
      "address": "0x833d71EF0b51Aa9Fb69b1f986381132628ED10F3",
      "txHash": "0x0957c298926679190f2fec586c1fa50c7a16b7a0111c165969974ca14c6aea8b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "lastArbiter",
            "type": "t_uint256",
            "src": "contracts/WorkQuestFactory.sol:23"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/WorkQuestFactory.sol:26"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "feeReceiver",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:29"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "pensionFund",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:32"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "referral",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:35"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "workquests",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/WorkQuestFactory.sol:38"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "arbiters",
            "type": "t_mapping(t_address,t_struct(ArbiterInfo)15323_storage)",
            "src": "contracts/WorkQuestFactory.sol:41"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "workquestValid",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/WorkQuestFactory.sol:44"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "arbiterList",
            "type": "t_array(t_address_payable)dyn_storage",
            "src": "contracts/WorkQuestFactory.sol:47"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(ArbiterInfo)15323_storage)": {
            "label": "mapping(address => struct WorkQuestFactory.ArbiterInfo)"
          },
          "t_struct(ArbiterInfo)15323_storage": {
            "label": "struct WorkQuestFactory.ArbiterInfo",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_address_payable)dyn_storage": {
            "label": "address payable[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "52725726eea1810e7fdacab7aca022ae7b6bd649d6f7ea8ad82005401203a975": {
      "address": "0xF854C60D7CEb96d5046b3069E0D906D80c0EF1ec",
      "txHash": "0xa97d5e7981e26c4a665e950bce3ecd9b2469682044b8e97877ecb6de0a647992",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "lastArbiter",
            "type": "t_uint256",
            "src": "contracts/WorkQuestFactory.sol:23"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/WorkQuestFactory.sol:26"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "feeReceiver",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:29"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "pensionFund",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:32"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "referral",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:35"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "workquests",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/WorkQuestFactory.sol:38"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "arbiters",
            "type": "t_mapping(t_address,t_struct(ArbiterInfo)15323_storage)",
            "src": "contracts/WorkQuestFactory.sol:41"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "workquestValid",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/WorkQuestFactory.sol:44"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "arbiterList",
            "type": "t_array(t_address_payable)dyn_storage",
            "src": "contracts/WorkQuestFactory.sol:47"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(ArbiterInfo)15323_storage)": {
            "label": "mapping(address => struct WorkQuestFactory.ArbiterInfo)"
          },
          "t_struct(ArbiterInfo)15323_storage": {
            "label": "struct WorkQuestFactory.ArbiterInfo",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_address_payable)dyn_storage": {
            "label": "address payable[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "d75af65e50170d9c68fcb14363e7f857f93266d57c656da0e4e45b08d756e0b1": {
      "address": "0x89Fb57d7B281E565d3B87f1d6e1a97d93F09EB90",
      "txHash": "0x4744967ddc28881a19f7f6427d2fc59591c6b4f9f024f4afa2d6441205dae012",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQPensionFund",
            "label": "lockTime",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:34"
          },
          {
            "contract": "WQPensionFund",
            "label": "defaultFee",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:35"
          },
          {
            "contract": "WQPensionFund",
            "label": "contributed",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:36"
          },
          {
            "contract": "WQPensionFund",
            "label": "rewardsPerContributed",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:37"
          },
          {
            "contract": "WQPensionFund",
            "label": "rewardsProduced",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:38"
          },
          {
            "contract": "WQPensionFund",
            "label": "rewardsDistributed",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:39"
          },
          {
            "contract": "WQPensionFund",
            "label": "borrowed",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:40"
          },
          {
            "contract": "WQPensionFund",
            "label": "wallets",
            "type": "t_mapping(t_address,t_struct(PensionWallet)6432_storage)",
            "src": "contracts/WQPensionFund.sol:43"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(PensionWallet)6432_storage)": {
            "label": "mapping(address => struct WQPensionFund.PensionWallet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(PensionWallet)6432_storage": {
            "label": "struct WQPensionFund.PensionWallet",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "unlockDate",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "rewardDistributed",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "6134349953668de04b0c1dec08d25b08588f20615bc066bcf60293e44f290ad2": {
      "address": "0xA0aB872993379EC51A2D0a6cdB3cB5B5bDE8FfBB",
      "txHash": "0x5fe81ded5b1169ebf7d12c1c4f03322d8184a22e82f97ffd689a8ec576b5674c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "lastArbiter",
            "type": "t_uint256",
            "src": "contracts/WorkQuestFactory.sol:23"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/WorkQuestFactory.sol:26"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "feeReceiver",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:29"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "pensionFund",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:32"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "referral",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:35"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "workquests",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/WorkQuestFactory.sol:38"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "arbiters",
            "type": "t_mapping(t_address,t_struct(ArbiterInfo)5286_storage)",
            "src": "contracts/WorkQuestFactory.sol:41"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "workquestValid",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/WorkQuestFactory.sol:44"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "arbiterList",
            "type": "t_array(t_address_payable)dyn_storage",
            "src": "contracts/WorkQuestFactory.sol:47"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(ArbiterInfo)5286_storage)": {
            "label": "mapping(address => struct WorkQuestFactory.ArbiterInfo)"
          },
          "t_struct(ArbiterInfo)5286_storage": {
            "label": "struct WorkQuestFactory.ArbiterInfo",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_address_payable)dyn_storage": {
            "label": "address payable[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "b727df9d5524493b7730ea2d79e10fa86489d550f8f14bffb70d94f541e4b1ec": {
      "address": "0xE0413f8EDd7edFe6147cE01fA19Fa128ec8A8Ce5",
      "txHash": "0xb9a1f1473b8d158877f9064eba7c227cfe25bb349ba390dd78d894f88e41a17e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "lastArbiter",
            "type": "t_uint256",
            "src": "contracts/WorkQuestFactory.sol:23"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/WorkQuestFactory.sol:26"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "feeReceiver",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:29"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "pensionFund",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:32"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "referral",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:35"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "workquests",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/WorkQuestFactory.sol:38"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "arbiters",
            "type": "t_mapping(t_address,t_struct(ArbiterInfo)15336_storage)",
            "src": "contracts/WorkQuestFactory.sol:41"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "workquestValid",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/WorkQuestFactory.sol:44"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "arbiterList",
            "type": "t_array(t_address_payable)dyn_storage",
            "src": "contracts/WorkQuestFactory.sol:47"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(ArbiterInfo)15336_storage)": {
            "label": "mapping(address => struct WorkQuestFactory.ArbiterInfo)"
          },
          "t_struct(ArbiterInfo)15336_storage": {
            "label": "struct WorkQuestFactory.ArbiterInfo",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_address_payable)dyn_storage": {
            "label": "address payable[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "94f29a7035d12e53e1482aaa39c8193eb91907ed0a77539f346d4fe1deb049cd": {
      "address": "0xd0391197ed3ed8419EF5520cfAfA2e09c92e209B",
      "txHash": "0xe0205d77204cb69bb01fb8cb0791f483c425d8d663cf76f489f7bb5f2f1a5695",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQToken",
            "label": "totalSupply",
            "type": "t_uint256",
            "src": "contracts/WQToken.sol:32"
          },
          {
            "contract": "WQToken",
            "label": "_locked",
            "type": "t_bool",
            "src": "contracts/WQToken.sol:35"
          },
          {
            "contract": "WQToken",
            "label": "_unlockFixed",
            "type": "t_bool",
            "src": "contracts/WQToken.sol:38"
          },
          {
            "contract": "WQToken",
            "label": "_saleContract",
            "type": "t_address",
            "src": "contracts/WQToken.sol:40"
          },
          {
            "contract": "WQToken",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/WQToken.sol:43"
          },
          {
            "contract": "WQToken",
            "label": "_delegates",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/WQToken.sol:45"
          },
          {
            "contract": "WQToken",
            "label": "_checkpoints",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)13215_storage)dyn_storage)",
            "src": "contracts/WQToken.sol:47"
          },
          {
            "contract": "WQToken",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/WQToken.sol:49"
          },
          {
            "contract": "WQToken",
            "label": "_voteLockedTokenBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/WQToken.sol:51"
          },
          {
            "contract": "WQToken",
            "label": "_freezings",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/WQToken.sol:53"
          },
          {
            "contract": "WQToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/WQToken.sol:55"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)13215_storage)dyn_storage)": {
            "label": "mapping(address => struct WQToken.Checkpoint[])"
          },
          "t_array(t_struct(Checkpoint)13215_storage)dyn_storage": {
            "label": "struct WQToken.Checkpoint[]"
          },
          "t_struct(Checkpoint)13215_storage": {
            "label": "struct WQToken.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32"
              },
              {
                "label": "votes",
                "type": "t_uint224"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint224": {
            "label": "uint224"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "db0eaa22d68e5e236f1052f77a054140496b6144a8cf8f0017dac2b1f960ad57": {
      "address": "0x2628b51218634Bd3AB88509551e3d40E94B4Deb8",
      "txHash": "0xae37fed85a1ffc37b43b8281205222ed69738ebb5c4159b417d781a8c200a128",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQDAOVoting",
            "label": "admin",
            "type": "t_address",
            "src": "contracts/WQDAOVoting.sol:59"
          },
          {
            "contract": "WQDAOVoting",
            "label": "votingPeriod",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:62"
          },
          {
            "contract": "WQDAOVoting",
            "label": "minimumQuorum",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:64"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposalCount",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:67"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposalThreshold",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:70"
          },
          {
            "contract": "WQDAOVoting",
            "label": "voteThreshold",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:73"
          },
          {
            "contract": "WQDAOVoting",
            "label": "token",
            "type": "t_contract(WQTInterface)13177",
            "src": "contracts/WQDAOVoting.sol:76"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposals",
            "type": "t_mapping(t_uint256,t_struct(Proposal)6198_storage)",
            "src": "contracts/WQDAOVoting.sol:79"
          },
          {
            "contract": "WQDAOVoting",
            "label": "voteResults",
            "type": "t_mapping(t_uint256,t_struct(VoteResult)6210_storage)",
            "src": "contracts/WQDAOVoting.sol:80"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(WQTInterface)13177": {
            "label": "contract WQTInterface"
          },
          "t_mapping(t_uint256,t_struct(Proposal)6198_storage)": {
            "label": "mapping(uint256 => struct WQDAOVoting.Proposal)"
          },
          "t_struct(Proposal)6198_storage": {
            "label": "struct WQDAOVoting.Proposal",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "proposer",
                "type": "t_address"
              },
              {
                "label": "forVotes",
                "type": "t_uint256"
              },
              {
                "label": "againstVotes",
                "type": "t_uint256"
              },
              {
                "label": "numVoters",
                "type": "t_uint256"
              },
              {
                "label": "proposalExpireTime",
                "type": "t_uint256"
              },
              {
                "label": "active",
                "type": "t_bool"
              },
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "byteCode",
                "type": "t_bytes_storage"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              },
              {
                "label": "receipts",
                "type": "t_mapping(t_address,t_struct(Receipt)6205_storage)"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_struct(Receipt)6205_storage)": {
            "label": "mapping(address => struct WQDAOVoting.Receipt)"
          },
          "t_struct(Receipt)6205_storage": {
            "label": "struct WQDAOVoting.Receipt",
            "members": [
              {
                "label": "hasVoted",
                "type": "t_bool"
              },
              {
                "label": "support",
                "type": "t_bool"
              },
              {
                "label": "votes",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(VoteResult)6210_storage)": {
            "label": "mapping(uint256 => struct WQDAOVoting.VoteResult)"
          },
          "t_struct(VoteResult)6210_storage": {
            "label": "struct WQDAOVoting.VoteResult",
            "members": [
              {
                "label": "succeded",
                "type": "t_bool"
              },
              {
                "label": "defeated",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "e75f6a49ff3e5f8b1eb6f1cbf145f97423fc5e0cf200e2b1eb694ec032420a05": {
      "address": "0xBadCD6A8c8d658fB2a700679A05431E41D8D3D5A",
      "txHash": "0x461391cf48933cce601943f7ea1ded9286822e842eff461727cec94d9f65b985",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQToken",
            "label": "totalSupply",
            "type": "t_uint256",
            "src": "contracts/WQToken.sol:32"
          },
          {
            "contract": "WQToken",
            "label": "_locked",
            "type": "t_bool",
            "src": "contracts/WQToken.sol:35"
          },
          {
            "contract": "WQToken",
            "label": "_unlockFixed",
            "type": "t_bool",
            "src": "contracts/WQToken.sol:38"
          },
          {
            "contract": "WQToken",
            "label": "_saleContract",
            "type": "t_address",
            "src": "contracts/WQToken.sol:40"
          },
          {
            "contract": "WQToken",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/WQToken.sol:43"
          },
          {
            "contract": "WQToken",
            "label": "_delegates",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/WQToken.sol:45"
          },
          {
            "contract": "WQToken",
            "label": "_checkpoints",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)13435_storage)dyn_storage)",
            "src": "contracts/WQToken.sol:47"
          },
          {
            "contract": "WQToken",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/WQToken.sol:49"
          },
          {
            "contract": "WQToken",
            "label": "_voteLockedTokenBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/WQToken.sol:51"
          },
          {
            "contract": "WQToken",
            "label": "_freezings",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/WQToken.sol:53"
          },
          {
            "contract": "WQToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/WQToken.sol:55"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)13435_storage)dyn_storage)": {
            "label": "mapping(address => struct WQToken.Checkpoint[])"
          },
          "t_array(t_struct(Checkpoint)13435_storage)dyn_storage": {
            "label": "struct WQToken.Checkpoint[]"
          },
          "t_struct(Checkpoint)13435_storage": {
            "label": "struct WQToken.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32"
              },
              {
                "label": "votes",
                "type": "t_uint224"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint224": {
            "label": "uint224"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "52050a476666d9206ea94da6291b4e85bd698c7242dac6c80a6c96115b1a0535": {
      "address": "0x51F461e8e7Cf17674a7C76e61AAF0AE49F44Af20",
      "txHash": "0x434f3b426ec0af49d2481b77820c690e8b1ae9a8f556fb6a61ec39184e50ee95",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQDAOVoting",
            "label": "admin",
            "type": "t_address",
            "src": "contracts/WQDAOVoting.sol:75"
          },
          {
            "contract": "WQDAOVoting",
            "label": "votingPeriod",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:78"
          },
          {
            "contract": "WQDAOVoting",
            "label": "minimumQuorum",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:80"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposalCount",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:83"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposalThreshold",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:86"
          },
          {
            "contract": "WQDAOVoting",
            "label": "voteThreshold",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:89"
          },
          {
            "contract": "WQDAOVoting",
            "label": "token",
            "type": "t_contract(WQTInterface)13310",
            "src": "contracts/WQDAOVoting.sol:92"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposals",
            "type": "t_mapping(t_uint256,t_struct(Proposal)6194_storage)",
            "src": "contracts/WQDAOVoting.sol:95"
          },
          {
            "contract": "WQDAOVoting",
            "label": "voteResults",
            "type": "t_mapping(t_uint256,t_struct(VoteResult)6206_storage)",
            "src": "contracts/WQDAOVoting.sol:96"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(WQTInterface)13310": {
            "label": "contract WQTInterface"
          },
          "t_mapping(t_uint256,t_struct(Proposal)6194_storage)": {
            "label": "mapping(uint256 => struct WQDAOVoting.Proposal)"
          },
          "t_struct(Proposal)6194_storage": {
            "label": "struct WQDAOVoting.Proposal",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "proposer",
                "type": "t_address"
              },
              {
                "label": "forVotes",
                "type": "t_uint256"
              },
              {
                "label": "againstVotes",
                "type": "t_uint256"
              },
              {
                "label": "numVoters",
                "type": "t_uint256"
              },
              {
                "label": "proposalExpireTime",
                "type": "t_uint256"
              },
              {
                "label": "active",
                "type": "t_bool"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              },
              {
                "label": "receipts",
                "type": "t_mapping(t_address,t_struct(Receipt)6201_storage)"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_struct(Receipt)6201_storage)": {
            "label": "mapping(address => struct WQDAOVoting.Receipt)"
          },
          "t_struct(Receipt)6201_storage": {
            "label": "struct WQDAOVoting.Receipt",
            "members": [
              {
                "label": "hasVoted",
                "type": "t_bool"
              },
              {
                "label": "support",
                "type": "t_bool"
              },
              {
                "label": "votes",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(VoteResult)6206_storage)": {
            "label": "mapping(uint256 => struct WQDAOVoting.VoteResult)"
          },
          "t_struct(VoteResult)6206_storage": {
            "label": "struct WQDAOVoting.VoteResult",
            "members": [
              {
                "label": "succeded",
                "type": "t_bool"
              },
              {
                "label": "defeated",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "86370a11cc58db91394db08d3e7639d1f254e9de81f2666dcfac0f1da82d0a38": {
      "address": "0xC579160E2F743454893BB885a9b33133d47b6835",
      "txHash": "0x322b89f75ea3a4e8dffb959bdf63a210e6ece8b7c36a237ea1b25281026614e0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQDAOVoting",
            "label": "token",
            "type": "t_contract(WQTInterface)13370",
            "src": "contracts/WQDAOVoting.sol:78"
          },
          {
            "contract": "WQDAOVoting",
            "label": "minimumQuorum",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:81"
          },
          {
            "contract": "WQDAOVoting",
            "label": "votingPeriod",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:84"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposalThreshold",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:87"
          },
          {
            "contract": "WQDAOVoting",
            "label": "voteThreshold",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:90"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposalCount",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:93"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposals",
            "type": "t_mapping(t_uint256,t_struct(Proposal)6196_storage)",
            "src": "contracts/WQDAOVoting.sol:96"
          },
          {
            "contract": "WQDAOVoting",
            "label": "voteResults",
            "type": "t_mapping(t_uint256,t_struct(VoteResult)6208_storage)",
            "src": "contracts/WQDAOVoting.sol:97"
          }
        ],
        "types": {
          "t_contract(WQTInterface)13370": {
            "label": "contract WQTInterface"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Proposal)6196_storage)": {
            "label": "mapping(uint256 => struct WQDAOVoting.Proposal)"
          },
          "t_struct(Proposal)6196_storage": {
            "label": "struct WQDAOVoting.Proposal",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "proposer",
                "type": "t_address"
              },
              {
                "label": "forVotes",
                "type": "t_uint256"
              },
              {
                "label": "againstVotes",
                "type": "t_uint256"
              },
              {
                "label": "numVoters",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "expireTime",
                "type": "t_uint256"
              },
              {
                "label": "active",
                "type": "t_bool"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              },
              {
                "label": "receipts",
                "type": "t_mapping(t_address,t_struct(Receipt)6203_storage)"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_struct(Receipt)6203_storage)": {
            "label": "mapping(address => struct WQDAOVoting.Receipt)"
          },
          "t_struct(Receipt)6203_storage": {
            "label": "struct WQDAOVoting.Receipt",
            "members": [
              {
                "label": "hasVoted",
                "type": "t_bool"
              },
              {
                "label": "support",
                "type": "t_bool"
              },
              {
                "label": "votes",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(VoteResult)6208_storage)": {
            "label": "mapping(uint256 => struct WQDAOVoting.VoteResult)"
          },
          "t_struct(VoteResult)6208_storage": {
            "label": "struct WQDAOVoting.VoteResult",
            "members": [
              {
                "label": "succeded",
                "type": "t_bool"
              },
              {
                "label": "defeated",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "082ef38307f04ff93ce3d222ff57bb09c3fc4cba3d412422b6444ba194c92b28": {
      "address": "0x4BA51Fe3779F4ed687221B07b335c22a9e4dcB2c",
      "txHash": "0xb0514e46dc7a17b7d606ec13b822e4bfad93f62d2d29650f664268948969b760",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQDAOVoting",
            "label": "token",
            "type": "t_contract(WQTInterface)13397",
            "src": "contracts/WQDAOVoting.sol:81"
          },
          {
            "contract": "WQDAOVoting",
            "label": "minimumQuorum",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:84"
          },
          {
            "contract": "WQDAOVoting",
            "label": "votingPeriod",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:87"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposalThreshold",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:90"
          },
          {
            "contract": "WQDAOVoting",
            "label": "voteThreshold",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:93"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposalCount",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:96"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposals",
            "type": "t_mapping(t_uint256,t_struct(Proposal)6198_storage)",
            "src": "contracts/WQDAOVoting.sol:99"
          },
          {
            "contract": "WQDAOVoting",
            "label": "voteResults",
            "type": "t_mapping(t_uint256,t_struct(VoteResult)6210_storage)",
            "src": "contracts/WQDAOVoting.sol:100"
          }
        ],
        "types": {
          "t_contract(WQTInterface)13397": {
            "label": "contract WQTInterface"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Proposal)6198_storage)": {
            "label": "mapping(uint256 => struct WQDAOVoting.Proposal)"
          },
          "t_struct(Proposal)6198_storage": {
            "label": "struct WQDAOVoting.Proposal",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "proposer",
                "type": "t_address"
              },
              {
                "label": "forVotes",
                "type": "t_uint256"
              },
              {
                "label": "againstVotes",
                "type": "t_uint256"
              },
              {
                "label": "numVoters",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "expireTime",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "active",
                "type": "t_bool"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              },
              {
                "label": "receipts",
                "type": "t_mapping(t_address,t_struct(Receipt)6205_storage)"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_struct(Receipt)6205_storage)": {
            "label": "mapping(address => struct WQDAOVoting.Receipt)"
          },
          "t_struct(Receipt)6205_storage": {
            "label": "struct WQDAOVoting.Receipt",
            "members": [
              {
                "label": "hasVoted",
                "type": "t_bool"
              },
              {
                "label": "support",
                "type": "t_bool"
              },
              {
                "label": "votes",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(VoteResult)6210_storage)": {
            "label": "mapping(uint256 => struct WQDAOVoting.VoteResult)"
          },
          "t_struct(VoteResult)6210_storage": {
            "label": "struct WQDAOVoting.VoteResult",
            "members": [
              {
                "label": "succeded",
                "type": "t_bool"
              },
              {
                "label": "defeated",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "82d31c2bb5544117d64dc1cfdffc0f98011f3fc1a170b35e5fc2603fdb1718f6": {
      "address": "0x82B301F07ae442bBa01dFF2A6E8e47866e6e1113",
      "txHash": "0x35982983c019d25b758348b2ab85014c6dcfa735106b933512a6c3fac5421d8f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQToken",
            "label": "totalSupply",
            "type": "t_uint256",
            "src": "contracts/WQToken.sol:32"
          },
          {
            "contract": "WQToken",
            "label": "_locked",
            "type": "t_bool",
            "src": "contracts/WQToken.sol:35"
          },
          {
            "contract": "WQToken",
            "label": "_unlockFixed",
            "type": "t_bool",
            "src": "contracts/WQToken.sol:38"
          },
          {
            "contract": "WQToken",
            "label": "_saleContract",
            "type": "t_address",
            "src": "contracts/WQToken.sol:40"
          },
          {
            "contract": "WQToken",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/WQToken.sol:43"
          },
          {
            "contract": "WQToken",
            "label": "_delegates",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/WQToken.sol:45"
          },
          {
            "contract": "WQToken",
            "label": "_checkpoints",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)13435_storage)dyn_storage)",
            "src": "contracts/WQToken.sol:47"
          },
          {
            "contract": "WQToken",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/WQToken.sol:49"
          },
          {
            "contract": "WQToken",
            "label": "_voteLockedTokenBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/WQToken.sol:51"
          },
          {
            "contract": "WQToken",
            "label": "_freezings",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/WQToken.sol:53"
          },
          {
            "contract": "WQToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/WQToken.sol:55"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)13435_storage)dyn_storage)": {
            "label": "mapping(address => struct WQToken.Checkpoint[])"
          },
          "t_array(t_struct(Checkpoint)13435_storage)dyn_storage": {
            "label": "struct WQToken.Checkpoint[]"
          },
          "t_struct(Checkpoint)13435_storage": {
            "label": "struct WQToken.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32"
              },
              {
                "label": "votes",
                "type": "t_uint224"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint224": {
            "label": "uint224"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "48c89c343a8554be9d5636a902f7c30e62b0942ea787930b6e9d17d6ef1deec0": {
      "address": "0x825b3B422B7B9cbbD3a8BfF0a50a026879847F50",
      "txHash": "0x8836bd2dbf33905258eda5ce230dc37a3c0334f4924a363a20ddaf35ede338bb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQToken",
            "label": "totalSupply",
            "type": "t_uint256",
            "src": "contracts/WQToken.sol:32"
          },
          {
            "contract": "WQToken",
            "label": "_locked",
            "type": "t_bool",
            "src": "contracts/WQToken.sol:35"
          },
          {
            "contract": "WQToken",
            "label": "_unlockFixed",
            "type": "t_bool",
            "src": "contracts/WQToken.sol:38"
          },
          {
            "contract": "WQToken",
            "label": "_saleContract",
            "type": "t_address",
            "src": "contracts/WQToken.sol:40"
          },
          {
            "contract": "WQToken",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/WQToken.sol:43"
          },
          {
            "contract": "WQToken",
            "label": "_delegates",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/WQToken.sol:45"
          },
          {
            "contract": "WQToken",
            "label": "_checkpoints",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)13435_storage)dyn_storage)",
            "src": "contracts/WQToken.sol:47"
          },
          {
            "contract": "WQToken",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/WQToken.sol:49"
          },
          {
            "contract": "WQToken",
            "label": "_voteLockedTokenBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/WQToken.sol:51"
          },
          {
            "contract": "WQToken",
            "label": "_freezings",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/WQToken.sol:53"
          },
          {
            "contract": "WQToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/WQToken.sol:55"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)13435_storage)dyn_storage)": {
            "label": "mapping(address => struct WQToken.Checkpoint[])"
          },
          "t_array(t_struct(Checkpoint)13435_storage)dyn_storage": {
            "label": "struct WQToken.Checkpoint[]"
          },
          "t_struct(Checkpoint)13435_storage": {
            "label": "struct WQToken.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32"
              },
              {
                "label": "votes",
                "type": "t_uint224"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint224": {
            "label": "uint224"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "35bea84bb4d61f0047173642d66824d393bdc9efccb1a3d2c87e94acfdf39192": {
      "address": "0x71b92E880E87b7B4C76860D9111d6e44457E9111",
      "txHash": "0x2fc27cc8265f17f8ac3a208d88b810802659689a76ccc8ac48c03487d8670c1b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQDAOVoting",
            "label": "token",
            "type": "t_contract(WQTInterface)13429",
            "src": "contracts/WQDAOVoting.sol:83"
          },
          {
            "contract": "WQDAOVoting",
            "label": "minimumQuorum",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:86"
          },
          {
            "contract": "WQDAOVoting",
            "label": "votingPeriod",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:89"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposalThreshold",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:92"
          },
          {
            "contract": "WQDAOVoting",
            "label": "voteThreshold",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:95"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposalCount",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:98"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposals",
            "type": "t_mapping(t_uint256,t_struct(Proposal)6198_storage)",
            "src": "contracts/WQDAOVoting.sol:101"
          },
          {
            "contract": "WQDAOVoting",
            "label": "voteResults",
            "type": "t_mapping(t_uint256,t_struct(VoteResult)6210_storage)",
            "src": "contracts/WQDAOVoting.sol:102"
          }
        ],
        "types": {
          "t_contract(WQTInterface)13429": {
            "label": "contract WQTInterface"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Proposal)6198_storage)": {
            "label": "mapping(uint256 => struct WQDAOVoting.Proposal)"
          },
          "t_struct(Proposal)6198_storage": {
            "label": "struct WQDAOVoting.Proposal",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "proposer",
                "type": "t_address"
              },
              {
                "label": "forVotes",
                "type": "t_uint256"
              },
              {
                "label": "againstVotes",
                "type": "t_uint256"
              },
              {
                "label": "numVoters",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "expireTime",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "active",
                "type": "t_bool"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              },
              {
                "label": "receipts",
                "type": "t_mapping(t_address,t_struct(Receipt)6205_storage)"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_struct(Receipt)6205_storage)": {
            "label": "mapping(address => struct WQDAOVoting.Receipt)"
          },
          "t_struct(Receipt)6205_storage": {
            "label": "struct WQDAOVoting.Receipt",
            "members": [
              {
                "label": "hasVoted",
                "type": "t_bool"
              },
              {
                "label": "support",
                "type": "t_bool"
              },
              {
                "label": "votes",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(VoteResult)6210_storage)": {
            "label": "mapping(uint256 => struct WQDAOVoting.VoteResult)"
          },
          "t_struct(VoteResult)6210_storage": {
            "label": "struct WQDAOVoting.VoteResult",
            "members": [
              {
                "label": "succeded",
                "type": "t_bool"
              },
              {
                "label": "defeated",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "411d2464c5d5d3ff115598e26ee2fe511b801de018a35108f0974b1c0ab6283f": {
      "address": "0x39a3D25F536195181DD57bbeE3Bd21A8D66D290A",
      "txHash": "0x8c815861ca899e23f71e325e507f6042479b58e0bb0eddb8de5fb306a65beb2d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQDAOVoting",
            "label": "token",
            "type": "t_contract(WQTInterface)13441",
            "src": "contracts/WQDAOVoting.sol:83"
          },
          {
            "contract": "WQDAOVoting",
            "label": "minimumQuorum",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:86"
          },
          {
            "contract": "WQDAOVoting",
            "label": "votingPeriod",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:89"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposalThreshold",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:92"
          },
          {
            "contract": "WQDAOVoting",
            "label": "voteThreshold",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:95"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposalCount",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:98"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposals",
            "type": "t_mapping(t_uint256,t_struct(Proposal)6198_storage)",
            "src": "contracts/WQDAOVoting.sol:101"
          },
          {
            "contract": "WQDAOVoting",
            "label": "voteResults",
            "type": "t_mapping(t_uint256,t_struct(VoteResult)6210_storage)",
            "src": "contracts/WQDAOVoting.sol:102"
          }
        ],
        "types": {
          "t_contract(WQTInterface)13441": {
            "label": "contract WQTInterface"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Proposal)6198_storage)": {
            "label": "mapping(uint256 => struct WQDAOVoting.Proposal)"
          },
          "t_struct(Proposal)6198_storage": {
            "label": "struct WQDAOVoting.Proposal",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "proposer",
                "type": "t_address"
              },
              {
                "label": "forVotes",
                "type": "t_uint256"
              },
              {
                "label": "againstVotes",
                "type": "t_uint256"
              },
              {
                "label": "numVoters",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "expireTime",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "active",
                "type": "t_bool"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              },
              {
                "label": "receipts",
                "type": "t_mapping(t_address,t_struct(Receipt)6205_storage)"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_struct(Receipt)6205_storage)": {
            "label": "mapping(address => struct WQDAOVoting.Receipt)"
          },
          "t_struct(Receipt)6205_storage": {
            "label": "struct WQDAOVoting.Receipt",
            "members": [
              {
                "label": "hasVoted",
                "type": "t_bool"
              },
              {
                "label": "support",
                "type": "t_bool"
              },
              {
                "label": "votes",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(VoteResult)6210_storage)": {
            "label": "mapping(uint256 => struct WQDAOVoting.VoteResult)"
          },
          "t_struct(VoteResult)6210_storage": {
            "label": "struct WQDAOVoting.VoteResult",
            "members": [
              {
                "label": "succeded",
                "type": "t_bool"
              },
              {
                "label": "defeated",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "14be86c50195e8b5658fe398533768cc67a36fb90299d95f6a3b6f49dbee81b3": {
      "address": "0xca1096B3e0D7f37922756c1aE475DB00C86a2c80",
      "txHash": "0x6a044963d3f2e468dae950a77697fb0f980aba1dfce4698166a0911aec7c71d0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQDAOVoting",
            "label": "token",
            "type": "t_contract(WQTInterface)13504",
            "src": "contracts/WQDAOVoting.sol:83"
          },
          {
            "contract": "WQDAOVoting",
            "label": "minimumQuorum",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:86"
          },
          {
            "contract": "WQDAOVoting",
            "label": "votingPeriod",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:89"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposalThreshold",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:92"
          },
          {
            "contract": "WQDAOVoting",
            "label": "voteThreshold",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:95"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposalCount",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:98"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposals",
            "type": "t_mapping(t_uint256,t_struct(Proposal)6198_storage)",
            "src": "contracts/WQDAOVoting.sol:101"
          },
          {
            "contract": "WQDAOVoting",
            "label": "voteResults",
            "type": "t_mapping(t_uint256,t_struct(VoteResult)6210_storage)",
            "src": "contracts/WQDAOVoting.sol:102"
          }
        ],
        "types": {
          "t_contract(WQTInterface)13504": {
            "label": "contract WQTInterface"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Proposal)6198_storage)": {
            "label": "mapping(uint256 => struct WQDAOVoting.Proposal)"
          },
          "t_struct(Proposal)6198_storage": {
            "label": "struct WQDAOVoting.Proposal",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "proposer",
                "type": "t_address"
              },
              {
                "label": "forVotes",
                "type": "t_uint256"
              },
              {
                "label": "againstVotes",
                "type": "t_uint256"
              },
              {
                "label": "numVoters",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "expireTime",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "active",
                "type": "t_bool"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              },
              {
                "label": "receipts",
                "type": "t_mapping(t_address,t_struct(Receipt)6205_storage)"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_struct(Receipt)6205_storage)": {
            "label": "mapping(address => struct WQDAOVoting.Receipt)"
          },
          "t_struct(Receipt)6205_storage": {
            "label": "struct WQDAOVoting.Receipt",
            "members": [
              {
                "label": "hasVoted",
                "type": "t_bool"
              },
              {
                "label": "support",
                "type": "t_bool"
              },
              {
                "label": "votes",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(VoteResult)6210_storage)": {
            "label": "mapping(uint256 => struct WQDAOVoting.VoteResult)"
          },
          "t_struct(VoteResult)6210_storage": {
            "label": "struct WQDAOVoting.VoteResult",
            "members": [
              {
                "label": "succeded",
                "type": "t_bool"
              },
              {
                "label": "defeated",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "07e0050c62403423fc114da557d5cade50b1d0e63d116c3efc516f820d226d8d": {
      "address": "0x45423Ef49163D6032F3f1F9a937d1Ad8006D9771",
      "txHash": "0x31386428b5989a6dc9d1524d5690cfaf10a3eb90eea64567554810d3a8353314",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQDAOVoting",
            "label": "token",
            "type": "t_contract(WQTInterface)13519",
            "src": "contracts/WQDAOVoting.sol:85"
          },
          {
            "contract": "WQDAOVoting",
            "label": "minimumQuorum",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:88"
          },
          {
            "contract": "WQDAOVoting",
            "label": "votingPeriod",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:91"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposalThreshold",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:94"
          },
          {
            "contract": "WQDAOVoting",
            "label": "voteThreshold",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:97"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposalCount",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:100"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposals",
            "type": "t_mapping(t_uint256,t_struct(Proposal)6200_storage)",
            "src": "contracts/WQDAOVoting.sol:103"
          },
          {
            "contract": "WQDAOVoting",
            "label": "voteResults",
            "type": "t_mapping(t_uint256,t_struct(VoteResult)6212_storage)",
            "src": "contracts/WQDAOVoting.sol:104"
          }
        ],
        "types": {
          "t_contract(WQTInterface)13519": {
            "label": "contract WQTInterface"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Proposal)6200_storage)": {
            "label": "mapping(uint256 => struct WQDAOVoting.Proposal)"
          },
          "t_struct(Proposal)6200_storage": {
            "label": "struct WQDAOVoting.Proposal",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "nonce",
                "type": "t_uint256"
              },
              {
                "label": "proposer",
                "type": "t_address"
              },
              {
                "label": "forVotes",
                "type": "t_uint256"
              },
              {
                "label": "againstVotes",
                "type": "t_uint256"
              },
              {
                "label": "numVoters",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "expireTime",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "active",
                "type": "t_bool"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              },
              {
                "label": "receipts",
                "type": "t_mapping(t_address,t_struct(Receipt)6207_storage)"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_struct(Receipt)6207_storage)": {
            "label": "mapping(address => struct WQDAOVoting.Receipt)"
          },
          "t_struct(Receipt)6207_storage": {
            "label": "struct WQDAOVoting.Receipt",
            "members": [
              {
                "label": "hasVoted",
                "type": "t_bool"
              },
              {
                "label": "support",
                "type": "t_bool"
              },
              {
                "label": "votes",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(VoteResult)6212_storage)": {
            "label": "mapping(uint256 => struct WQDAOVoting.VoteResult)"
          },
          "t_struct(VoteResult)6212_storage": {
            "label": "struct WQDAOVoting.VoteResult",
            "members": [
              {
                "label": "succeded",
                "type": "t_bool"
              },
              {
                "label": "defeated",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "d30e8f59bdd120017cf6547b6265fd0358cdc0ff19abb32367503a14bea03716": {
      "address": "0xEAbb9d0F3F7c243ECF9eEfCc580DB756FAD6e887",
      "txHash": "0xa9eac07845907790d86eeba15072a1e8549415a81aa03208a2c4b2e1f6be439b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQDAOVoting",
            "label": "token",
            "type": "t_contract(WQTInterface)13533",
            "src": "contracts/WQDAOVoting.sol:85"
          },
          {
            "contract": "WQDAOVoting",
            "label": "minimumQuorum",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:88"
          },
          {
            "contract": "WQDAOVoting",
            "label": "votingPeriod",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:91"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposalThreshold",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:94"
          },
          {
            "contract": "WQDAOVoting",
            "label": "voteThreshold",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:97"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposalCount",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:100"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposals",
            "type": "t_mapping(t_uint256,t_struct(Proposal)6200_storage)",
            "src": "contracts/WQDAOVoting.sol:103"
          },
          {
            "contract": "WQDAOVoting",
            "label": "voteResults",
            "type": "t_mapping(t_uint256,t_struct(VoteResult)6212_storage)",
            "src": "contracts/WQDAOVoting.sol:104"
          }
        ],
        "types": {
          "t_contract(WQTInterface)13533": {
            "label": "contract WQTInterface"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Proposal)6200_storage)": {
            "label": "mapping(uint256 => struct WQDAOVoting.Proposal)"
          },
          "t_struct(Proposal)6200_storage": {
            "label": "struct WQDAOVoting.Proposal",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "nonce",
                "type": "t_uint256"
              },
              {
                "label": "proposer",
                "type": "t_address"
              },
              {
                "label": "forVotes",
                "type": "t_uint256"
              },
              {
                "label": "againstVotes",
                "type": "t_uint256"
              },
              {
                "label": "numVoters",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "expireTime",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "active",
                "type": "t_bool"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              },
              {
                "label": "receipts",
                "type": "t_mapping(t_address,t_struct(Receipt)6207_storage)"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_struct(Receipt)6207_storage)": {
            "label": "mapping(address => struct WQDAOVoting.Receipt)"
          },
          "t_struct(Receipt)6207_storage": {
            "label": "struct WQDAOVoting.Receipt",
            "members": [
              {
                "label": "hasVoted",
                "type": "t_bool"
              },
              {
                "label": "support",
                "type": "t_bool"
              },
              {
                "label": "votes",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(VoteResult)6212_storage)": {
            "label": "mapping(uint256 => struct WQDAOVoting.VoteResult)"
          },
          "t_struct(VoteResult)6212_storage": {
            "label": "struct WQDAOVoting.VoteResult",
            "members": [
              {
                "label": "succeded",
                "type": "t_bool"
              },
              {
                "label": "defeated",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "c250363ee34d2ee2e17676bbeeca8e7edd25ccc8342cc4c46548db6dd52fdd06": {
      "address": "0xe119b363a31Ef5B58314135baa65C80b3013C735",
      "txHash": "0x6c74e2e3023fe1af93c2db6eb17c98f44c5754a2e7f4c9e90865c54266046a44",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQStakingNative",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:48"
          },
          {
            "contract": "WQStakingNative",
            "label": "rewardTotal",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:50"
          },
          {
            "contract": "WQStakingNative",
            "label": "distributionTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:52"
          },
          {
            "contract": "WQStakingNative",
            "label": "stakePeriod",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:54"
          },
          {
            "contract": "WQStakingNative",
            "label": "claimPeriod",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:56"
          },
          {
            "contract": "WQStakingNative",
            "label": "minStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:58"
          },
          {
            "contract": "WQStakingNative",
            "label": "maxStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:60"
          },
          {
            "contract": "WQStakingNative",
            "label": "tokensPerStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:62"
          },
          {
            "contract": "WQStakingNative",
            "label": "rewardProduced",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:63"
          },
          {
            "contract": "WQStakingNative",
            "label": "earlierProduced",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:64"
          },
          {
            "contract": "WQStakingNative",
            "label": "producedTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:65"
          },
          {
            "contract": "WQStakingNative",
            "label": "totalStaked",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:66"
          },
          {
            "contract": "WQStakingNative",
            "label": "totalDistributed",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:67"
          },
          {
            "contract": "WQStakingNative",
            "label": "stakes",
            "type": "t_mapping(t_address,t_struct(Staker)12201_storage)",
            "src": "contracts/WQStakingNative.sol:70"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Staker)12201_storage)": {
            "label": "mapping(address => struct WQStakingNative.Staker)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Staker)12201_storage": {
            "label": "struct WQStakingNative.Staker",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "distributed",
                "type": "t_uint256"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256"
              },
              {
                "label": "claimedAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9adb06f034706606842daa3b757c2e8000ad659ff5bbf04404110cdf2480371d": {
      "address": "0xdA18a56AAd4d4245C3040813063809bEF3Ea3B3C",
      "txHash": "0x1a671facf3695c07b72f5e816b87c988280e8b534f50f86ccb1c20f225fccb53",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "WQStakingNative",
            "label": "stakes",
            "type": "t_mapping(t_address,t_struct(Staker)12202_storage)",
            "src": "contracts/WQStakingNative.sol:47"
          },
          {
            "contract": "WQStakingNative",
            "label": "rewardToken",
            "type": "t_contract(IERC20Upgradeable)1794",
            "src": "contracts/WQStakingNative.sol:50"
          },
          {
            "contract": "WQStakingNative",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:54"
          },
          {
            "contract": "WQStakingNative",
            "label": "rewardTotal",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:56"
          },
          {
            "contract": "WQStakingNative",
            "label": "distributionTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:58"
          },
          {
            "contract": "WQStakingNative",
            "label": "stakePeriod",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:60"
          },
          {
            "contract": "WQStakingNative",
            "label": "claimPeriod",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:62"
          },
          {
            "contract": "WQStakingNative",
            "label": "minStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:64"
          },
          {
            "contract": "WQStakingNative",
            "label": "maxStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:66"
          },
          {
            "contract": "WQStakingNative",
            "label": "tokensPerStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:68"
          },
          {
            "contract": "WQStakingNative",
            "label": "rewardProduced",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:69"
          },
          {
            "contract": "WQStakingNative",
            "label": "allProduced",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:70"
          },
          {
            "contract": "WQStakingNative",
            "label": "producedTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:71"
          },
          {
            "contract": "WQStakingNative",
            "label": "totalStaked",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:73"
          },
          {
            "contract": "WQStakingNative",
            "label": "totalDistributed",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:74"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(Staker)12202_storage)": {
            "label": "mapping(address => struct WQStakingNative.Staker)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Staker)12202_storage": {
            "label": "struct WQStakingNative.Staker",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "distributed",
                "type": "t_uint256"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256"
              },
              {
                "label": "claimedAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1794": {
            "label": "contract IERC20Upgradeable"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b415de536908794da323c1062c3a365bd5d95a7b589c20f30fd9b771aedae0f6": {
      "address": "0x91DED07AA83ba836470DC743A7a42c03377C6874",
      "txHash": "0xaa43ec1d3fd6a375ad7cb8eaa06f04939827d777c0bab4dc035aad70baf1442f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQPensionFund",
            "label": "lockTime",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:34"
          },
          {
            "contract": "WQPensionFund",
            "label": "defaultFee",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:35"
          },
          {
            "contract": "WQPensionFund",
            "label": "contributed",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:36"
          },
          {
            "contract": "WQPensionFund",
            "label": "rewardsPerContributed",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:37"
          },
          {
            "contract": "WQPensionFund",
            "label": "rewardsProduced",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:38"
          },
          {
            "contract": "WQPensionFund",
            "label": "rewardsDistributed",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:39"
          },
          {
            "contract": "WQPensionFund",
            "label": "borrowed",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:40"
          },
          {
            "contract": "WQPensionFund",
            "label": "wallets",
            "type": "t_mapping(t_address,t_struct(PensionWallet)6432_storage)",
            "src": "contracts/WQPensionFund.sol:43"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(PensionWallet)6432_storage)": {
            "label": "mapping(address => struct WQPensionFund.PensionWallet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(PensionWallet)6432_storage": {
            "label": "struct WQPensionFund.PensionWallet",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "unlockDate",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "rewardDistributed",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7c0d116f2a3a0c21463447b2144829a07bfea6ee8a8afe5a0a330f3ac1e81f4a": {
      "address": "0x08795DC3EAdAbbFCE36872a75597C7c0CDdc7137",
      "txHash": "0xd2561fc9fcf464d7f0637686afbc9548d1bb7984e17e0a283285f143ebbc51c3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQPensionFund",
            "label": "lockTime",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:32"
          },
          {
            "contract": "WQPensionFund",
            "label": "defaultFee",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:33"
          },
          {
            "contract": "WQPensionFund",
            "label": "contributed",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:34"
          },
          {
            "contract": "WQPensionFund",
            "label": "borrowed",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:35"
          },
          {
            "contract": "WQPensionFund",
            "label": "wallets",
            "type": "t_mapping(t_address,t_struct(PensionWallet)6425_storage)",
            "src": "contracts/WQPensionFund.sol:38"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(PensionWallet)6425_storage)": {
            "label": "mapping(address => struct WQPensionFund.PensionWallet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(PensionWallet)6425_storage": {
            "label": "struct WQPensionFund.PensionWallet",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "unlockDate",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "dfefdcb07b2926f42e77c3f9732ed0340352c836685e4a07227332363877148c": {
      "address": "0x0CE433c3Ed2B733AFdd31Ee740CEB8A3DBc73599",
      "txHash": "0xb1d03fdf375ffd26821f0f2ce7c5e735ed065cc575a4282cf02ad29929210e45",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "lastArbiter",
            "type": "t_uint256",
            "src": "contracts/WorkQuestFactory.sol:23"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/WorkQuestFactory.sol:26"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "feeReceiver",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:29"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "pensionFund",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:32"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "referral",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:35"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "workquests",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/WorkQuestFactory.sol:38"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "arbiters",
            "type": "t_mapping(t_address,t_struct(ArbiterInfo)15688_storage)",
            "src": "contracts/WorkQuestFactory.sol:41"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "workquestValid",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/WorkQuestFactory.sol:44"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "arbiterList",
            "type": "t_array(t_address_payable)dyn_storage",
            "src": "contracts/WorkQuestFactory.sol:47"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(ArbiterInfo)15688_storage)": {
            "label": "mapping(address => struct WorkQuestFactory.ArbiterInfo)"
          },
          "t_struct(ArbiterInfo)15688_storage": {
            "label": "struct WorkQuestFactory.ArbiterInfo",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_address_payable)dyn_storage": {
            "label": "address payable[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "a0ff5f0b0037ec2c3ae93157152e24beef00e2848a241c263fc061ee8da2dff8": {
      "address": "0x75c81Fd58f3b0f426d58Fc106188a67a2D9DA058",
      "txHash": "0x01e9e0002a1640ae1a25ccd5baf562fb2dcda4c2c4b66522b6a29a32109a0e98",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "lastArbiter",
            "type": "t_uint256",
            "src": "contracts/WorkQuestFactory.sol:24"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/WorkQuestFactory.sol:27"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "feeReceiver",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:30"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "pensionFund",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:33"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "referral",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:36"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "workquests",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/WorkQuestFactory.sol:39"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "arbiters",
            "type": "t_mapping(t_address,t_struct(ArbiterInfo)15649_storage)",
            "src": "contracts/WorkQuestFactory.sol:42"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "workquestValid",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/WorkQuestFactory.sol:45"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "arbiterList",
            "type": "t_array(t_address_payable)dyn_storage",
            "src": "contracts/WorkQuestFactory.sol:48"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(ArbiterInfo)15649_storage)": {
            "label": "mapping(address => struct WorkQuestFactory.ArbiterInfo)"
          },
          "t_struct(ArbiterInfo)15649_storage": {
            "label": "struct WorkQuestFactory.ArbiterInfo",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_address_payable)dyn_storage": {
            "label": "address payable[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "51d37b4902c858a7fd1ec27429f151d2d5fb0990e5f8ff05c0cba7e0291552d4": {
      "address": "0x266B0632c676dd87640d9D40CF6673caBa612e6b",
      "txHash": "0x2606efbeeb8c7c1c44c26373177ae0ee4033430d73d512d7cdf5f851b6fac7f5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "WQBridge",
            "label": "chainId",
            "type": "t_uint256",
            "src": "contracts/WQBridge.sol:56"
          },
          {
            "contract": "WQBridge",
            "label": "pool",
            "type": "t_address_payable",
            "src": "contracts/WQBridge.sol:58"
          },
          {
            "contract": "WQBridge",
            "label": "chains",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/WQBridge.sol:61"
          },
          {
            "contract": "WQBridge",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)5545_storage)",
            "src": "contracts/WQBridge.sol:64"
          },
          {
            "contract": "WQBridge",
            "label": "swaps",
            "type": "t_mapping(t_bytes32,t_struct(SwapData)5536_storage)",
            "src": "contracts/WQBridge.sol:67"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)5545_storage)": {
            "label": "mapping(string => struct WQBridge.TokenSettings)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(TokenSettings)5545_storage": {
            "label": "struct WQBridge.TokenSettings",
            "members": [
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "native",
                "type": "t_bool"
              },
              {
                "label": "lockable",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(SwapData)5536_storage)": {
            "label": "mapping(bytes32 => struct WQBridge.SwapData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(SwapData)5536_storage": {
            "label": "struct WQBridge.SwapData",
            "members": [
              {
                "label": "nonce",
                "type": "t_uint256"
              },
              {
                "label": "state",
                "type": "t_enum(State)5530"
              }
            ]
          },
          "t_enum(State)5530": {
            "label": "enum WQBridge.State",
            "members": [
              "Empty",
              "Initialized",
              "Redeemed"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
