{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x4d9F307F1fa63abC943b5db2CBa1c71D02d86AAa",
      "txHash": "0xee4d9bb3d52b9d5a479ddde25683ab964e2c1723a75be1339ba368f835e98343",
      "kind": "uups"
    },
    {
      "address": "0x8E52341384F5286f4c76cE1072Aba887Be8E4EB9",
      "txHash": "0x309719ee516ebb5d14e5ebba6dd9d36b9d7e90e22b5e54e49e7f7fcc7a21860b",
      "kind": "uups"
    },
    {
      "address": "0xD7ca5F803807b03D49606D4f8e66551170b1d689",
      "txHash": "0x74b8f3a83521fae78fa5ed846e904134a3f63c075d449741d18b21a2863e5284",
      "kind": "uups"
    },
    {
      "address": "0xD93d2cF0e0179112469188F61ceb948F2Dbe4824",
      "txHash": "0x3f29fbef300af3e8369666fb492ef81ded9b282fffb54d655fc0f1625e204e0e",
      "kind": "uups"
    },
    {
      "address": "0x6936Bab70f661Fd0Ce42096D73029D43c2d62214",
      "txHash": "0x0cda0c4f1479c7841e4898b83ce191552cd094c459fa97a44dad9f32b99747f1",
      "kind": "uups"
    },
    {
      "address": "0x5C458F00974b0195817c40aE7A80f6fe38843eDb",
      "txHash": "0x62076367c5d37b0e602605429cd4e89d2a3f215af0b5e6d6b5d5474e5851cb46",
      "kind": "uups"
    },
    {
      "address": "0xA903836A89FAf0c7A64DCabf2bCd7b05480b28e9",
      "txHash": "0xe9fee936ab3f1d55901b39f116538b7f1c5c4a176b65de17136afa19a7e18e52",
      "kind": "uups"
    },
    {
      "address": "0x120181418cF8E658D7036EF7cA450B73c8Df7CB9",
      "txHash": "0x845af5ca5faf2b51aafa8ded0b6236bca5e1a8c2e207e8efcb9752f5d0fcd326",
      "kind": "uups"
    },
    {
      "address": "0x059c1c966E8f1D74e15746A06a6DD074FBB01a4f",
      "txHash": "0xc138163528133532078021f9febaf7092d7d31a36a44663a233767b0b9c5564a",
      "kind": "uups"
    },
    {
      "address": "0x527aC80974c66939cBf686648064846708234256",
      "txHash": "0x9c3baed14fdca194b161c761af5845f0511a11c06148495a8c9ba5986930fcc1",
      "kind": "uups"
    },
    {
      "address": "0x3d9782B4Ba9C10d09973dd1f7C16410c931f5468",
      "txHash": "0xb157e5f9fced663be3af2af52a42c6565c86599871d263279846863aaaff98a2",
      "kind": "uups"
    }
  ],
  "impls": {
    "c540fe1eab4f54d9133f2cd6d550e2f43037b8a32eafdd7c9daec3590e1d2a6a": {
      "address": "0xB9E0E9fB14D8891ee1Cbe3C107107B352a3F2fe7",
      "txHash": "0x9583351a792d5136fa72978bdb234f44dc0c68ffbad493300f030f4597a5154e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC20PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:46"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQBridgeToken",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/WQBridgeToken.sol:21"
          },
          {
            "contract": "WQBridgeToken",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "contracts/WQBridgeToken.sol:22"
          },
          {
            "contract": "WQBridgeToken",
            "label": "isBlockListed",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/WQBridgeToken.sol:24"
          },
          {
            "contract": "WQBridgeToken",
            "label": "isWhiteListed",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/WQBridgeToken.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "c5fd99d7a2bf00261490eef3ea0a11c69754431cf70a15453f98112b1da5f598": {
      "address": "0x6F1C5eE0A52F4dF846f464C14A51C767C5542Bc5",
      "txHash": "0x9606aae01c974ab2148e66aa8f3957c5776f941207895c49ac7d61ae4e0da378",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQBridgePool",
            "label": "initialized",
            "type": "t_bool",
            "src": "contracts/WQBridgePool.sol:25"
          },
          {
            "contract": "WQBridgePool",
            "label": "isBlockListed",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/WQBridgePool.sol:27"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          }
        }
      }
    },
    "f3816780ace0a8a0e7b52704de969986acdc4cc8b8f47e93146a99a28c19898d": {
      "address": "0xEC168854D2BB13285b38Eb2A285036d68ABc85d7",
      "txHash": "0x352e61ad593aa7b85012aa35f699d9f2bdab640fcdf5390a87c50bc552d8533e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQBridge",
            "label": "chainId",
            "type": "t_uint256",
            "src": "contracts/WQBridge.sol:60"
          },
          {
            "contract": "WQBridge",
            "label": "pool",
            "type": "t_address_payable",
            "src": "contracts/WQBridge.sol:62"
          },
          {
            "contract": "WQBridge",
            "label": "chains",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/WQBridge.sol:65"
          },
          {
            "contract": "WQBridge",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)8521_storage)",
            "src": "contracts/WQBridge.sol:68"
          },
          {
            "contract": "WQBridge",
            "label": "swaps",
            "type": "t_mapping(t_bytes32,t_struct(SwapData)8512_storage)",
            "src": "contracts/WQBridge.sol:71"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)8521_storage)": {
            "label": "mapping(string => struct WQBridge.TokenSettings)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(TokenSettings)8521_storage": {
            "label": "struct WQBridge.TokenSettings",
            "members": [
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "native",
                "type": "t_bool"
              },
              {
                "label": "lockable",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(SwapData)8512_storage)": {
            "label": "mapping(bytes32 => struct WQBridge.SwapData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(SwapData)8512_storage": {
            "label": "struct WQBridge.SwapData",
            "members": [
              {
                "label": "nonce",
                "type": "t_uint256"
              },
              {
                "label": "state",
                "type": "t_enum(State)8506"
              }
            ]
          },
          "t_enum(State)8506": {
            "label": "enum WQBridge.State",
            "members": [
              "Empty",
              "Initialized",
              "Redeemed"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "28b856609a4a30a8ab0fed805e5eac14b49a691217bbfcd2012182c9b2d61588": {
      "address": "0x44e20F656318478684D6daB868212c0D56C5891D",
      "txHash": "0xfc549bba989d2dee5ca068e575b7152f8645f1cac9a295f3510483748dea367e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQDAOVoting",
            "label": "minimumQuorum",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:91"
          },
          {
            "contract": "WQDAOVoting",
            "label": "votingPeriod",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:94"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposalThreshold",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:97"
          },
          {
            "contract": "WQDAOVoting",
            "label": "voteThreshold",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:100"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposalCount",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:103"
          },
          {
            "contract": "WQDAOVoting",
            "label": "feeReceiver",
            "type": "t_address_payable",
            "src": "contracts/WQDAOVoting.sol:105"
          },
          {
            "contract": "WQDAOVoting",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:107"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposals",
            "type": "t_mapping(t_uint256,t_struct(Proposal)10437_storage)",
            "src": "contracts/WQDAOVoting.sol:110"
          },
          {
            "contract": "WQDAOVoting",
            "label": "_delegates",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/WQDAOVoting.sol:112"
          },
          {
            "contract": "WQDAOVoting",
            "label": "_checkpoints",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)10398_storage)dyn_storage)",
            "src": "contracts/WQDAOVoting.sol:114"
          },
          {
            "contract": "WQDAOVoting",
            "label": "_frozed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/WQDAOVoting.sol:116"
          },
          {
            "contract": "WQDAOVoting",
            "label": "_vaults",
            "type": "t_mapping(t_address,t_contract(WQDAOVault)10359)",
            "src": "contracts/WQDAOVoting.sol:118"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_uint256,t_struct(Proposal)10437_storage)": {
            "label": "mapping(uint256 => struct WQDAOVoting.Proposal)"
          },
          "t_struct(Proposal)10437_storage": {
            "label": "struct WQDAOVoting.Proposal",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "nonce",
                "type": "t_uint256"
              },
              {
                "label": "proposer",
                "type": "t_address"
              },
              {
                "label": "forVotes",
                "type": "t_uint256"
              },
              {
                "label": "againstVotes",
                "type": "t_uint256"
              },
              {
                "label": "numVoters",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "expireTime",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "active",
                "type": "t_bool"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              },
              {
                "label": "receipts",
                "type": "t_mapping(t_address,t_struct(Receipt)10405_storage)"
              },
              {
                "label": "succeded",
                "type": "t_bool"
              },
              {
                "label": "defeated",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_struct(Receipt)10405_storage)": {
            "label": "mapping(address => struct WQDAOVoting.Receipt)"
          },
          "t_struct(Receipt)10405_storage": {
            "label": "struct WQDAOVoting.Receipt",
            "members": [
              {
                "label": "hasVoted",
                "type": "t_bool"
              },
              {
                "label": "support",
                "type": "t_bool"
              },
              {
                "label": "votes",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)10398_storage)dyn_storage)": {
            "label": "mapping(address => struct WQDAOVoting.Checkpoint[])"
          },
          "t_array(t_struct(Checkpoint)10398_storage)dyn_storage": {
            "label": "struct WQDAOVoting.Checkpoint[]"
          },
          "t_struct(Checkpoint)10398_storage": {
            "label": "struct WQDAOVoting.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32"
              },
              {
                "label": "votes",
                "type": "t_uint224"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint224": {
            "label": "uint224"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_contract(WQDAOVault)10359)": {
            "label": "mapping(address => contract WQDAOVault)"
          },
          "t_contract(WQDAOVault)10359": {
            "label": "contract WQDAOVault"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "b78bfda0593eb60b0c8be7a499ec3e9291f83685add78d442fe07637b515cd22": {
      "address": "0x7106fF574cd46AE6C2149dEA1E843bBAFBB830af",
      "txHash": "0xe6b917c86f61258f13f7f98c7b52225d131ded7b9f2ebd1d99ad55f78a96d35a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQPriceOracle",
            "label": "validTime",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQPriceOracle.sol:26"
          },
          {
            "contract": "WQPriceOracle",
            "label": "lastNonce",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQPriceOracle.sol:27"
          },
          {
            "contract": "WQPriceOracle",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_struct(TokenInfo)24820_storage)",
            "src": "contracts/stablecoin/WQPriceOracle.sol:28"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_struct(TokenInfo)24820_storage)": {
            "label": "mapping(string => struct WQPriceOracle.TokenInfo)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(TokenInfo)24820_storage": {
            "label": "struct WQPriceOracle.TokenInfo",
            "members": [
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "maxRatio",
                "type": "t_uint256"
              },
              {
                "label": "updatedTime",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "5f563f42fcd37398074a278dce21f637ec477da180a498d0def779a5ad44b1a0": {
      "address": "0xFE8076e4E8E3991b8CB0dD06bff8281dE3e0eD37",
      "txHash": "0xafe3ccfc132dd74b44c62eccc85a87d0c3f03e203e0b04953fdb17565c4a67a6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQReferral",
            "label": "referralBonus",
            "type": "t_uint256",
            "src": "contracts/WQReferral.sol:46"
          },
          {
            "contract": "WQReferral",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)25219",
            "src": "contracts/WQReferral.sol:48"
          },
          {
            "contract": "WQReferral",
            "label": "factory",
            "type": "t_contract(WorkQuestFactory)22413",
            "src": "contracts/WQReferral.sol:50"
          },
          {
            "contract": "WQReferral",
            "label": "earnedThreshold",
            "type": "t_uint256",
            "src": "contracts/WQReferral.sol:52"
          },
          {
            "contract": "WQReferral",
            "label": "referrals",
            "type": "t_mapping(t_address,t_struct(Account)16040_storage)",
            "src": "contracts/WQReferral.sol:54"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(WQPriceOracleInterface)25219": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_contract(WorkQuestFactory)22413": {
            "label": "contract WorkQuestFactory"
          },
          "t_mapping(t_address,t_struct(Account)16040_storage)": {
            "label": "mapping(address => struct WQReferral.Account)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Account)16040_storage": {
            "label": "struct WQReferral.Account",
            "members": [
              {
                "label": "affiliat",
                "type": "t_address"
              },
              {
                "label": "earnedAmount",
                "type": "t_uint256"
              },
              {
                "label": "rewardTotal",
                "type": "t_uint256"
              },
              {
                "label": "rewardPaid",
                "type": "t_uint256"
              },
              {
                "label": "referredCount",
                "type": "t_uint256"
              },
              {
                "label": "paid",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "328e0f239200782fc4b5dd22a0bec161039de577c3eeb6fd28191ce69d321e28": {
      "address": "0xE8A598FeffB813D2DbD703Ef2268be7eC7796434",
      "txHash": "0xb07b22c097e5c44390e8ba5ef28c46ea6944c03a2f45feccb7de422cd59f7d1e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQPensionFund",
            "label": "lockTime",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:37"
          },
          {
            "contract": "WQPensionFund",
            "label": "defaultFee",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:38"
          },
          {
            "contract": "WQPensionFund",
            "label": "apys",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/WQPensionFund.sol:40"
          },
          {
            "contract": "WQPensionFund",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WQPensionFund.sol:41"
          },
          {
            "contract": "WQPensionFund",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/WQPensionFund.sol:44"
          },
          {
            "contract": "WQPensionFund",
            "label": "feePerMonth",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:45"
          },
          {
            "contract": "WQPensionFund",
            "label": "feeWithdraw",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:46"
          },
          {
            "contract": "WQPensionFund",
            "label": "wallets",
            "type": "t_mapping(t_address,t_struct(PensionWallet)14822_storage)",
            "src": "contracts/WQPensionFund.sol:49"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(PensionWallet)14822_storage)": {
            "label": "mapping(address => struct WQPensionFund.PensionWallet)"
          },
          "t_struct(PensionWallet)14822_storage": {
            "label": "struct WQPensionFund.PensionWallet",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "borrowed",
                "type": "t_uint256"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "unlockDate",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDistributed",
                "type": "t_uint256"
              },
              {
                "label": "serviceComission",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ce310b5e9d79b5ee788c9a098ad7f42e10d35eb36d7e08bbc8e0af3fd4a34f60": {
      "address": "0xa8f4c11b261c9bF46b6De18098B089Ab7E7Fc227",
      "txHash": "0x3ba2bbce183ea030cfdf9772afebb54ae2c7b24b4f1c88a16f6fc6571ed4e793",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "feeEmployer",
            "type": "t_uint256",
            "src": "contracts/WorkQuestFactory.sol:29"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "feeWorker",
            "type": "t_uint256",
            "src": "contracts/WorkQuestFactory.sol:30"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "feeTx",
            "type": "t_uint256",
            "src": "contracts/WorkQuestFactory.sol:31"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "feeReceiver",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:34"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "pensionFund",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:37"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "referral",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:40"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WorkQuestFactory.sol:43"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "workquests",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/WorkQuestFactory.sol:46"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "workquestValid",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/WorkQuestFactory.sol:49"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    }
  }
}
