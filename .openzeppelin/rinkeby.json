{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x729A037C7A8334aBe404eC3122D1b8065aA99AEB",
    "txHash": "0x4f08626811c2f377f55da08d9668639d2a4de97599d4a988e8abdf92f6e98620",
    "deployTransaction": {
      "hash": "0x4f08626811c2f377f55da08d9668639d2a4de97599d4a988e8abdf92f6e98620",
      "type": 0,
      "accessList": null,
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0xE24f99419d788003c0D5212f05F47B1572cDC38a",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x104c533c00"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 163,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0xb66cb560ee12c7298860c86cc16103e2aaa7925d37914609ca4295108466fa36",
      "s": "0x0edc8345823328045c3293ec271718c1769357d044406a5dbfa62c86f9ae8d25",
      "v": 44,
      "creates": "0x729A037C7A8334aBe404eC3122D1b8065aA99AEB",
      "chainId": 4
    }
  },
  "proxies": [
    {
      "address": "0xB407928b64dA1ca56f51edd729566E448d31FDCc",
      "txHash": "0x84d86957a1fd31550d885666f8e4bf9f6d80cd7a1e979b284e2989ad786e84d1",
      "kind": "uups"
    },
    {
      "address": "0x87B11e862e372570C33f591F1Deb7f67Af56B319",
      "txHash": "0x1d6c8a4485ab719ae3aa1570ac075d066e4f9f6c9a2f7efafb10da9e05bcc777",
      "kind": "transparent"
    },
    {
      "address": "0x8423A10216488fe92cE79D7D58173fE2E91f0807",
      "txHash": "0x0293eeac2d23e180406d1642a37b97e472790656715ad485fdfa7d4e6182c909",
      "kind": "transparent"
    }
  ],
  "impls": {
    "72aa57fc503eb453bf811a310fbf5e0d587cee96f2999854061d810816b19520": {
      "address": "0xd0B50124710b042593319d1567FB9e35f821fCd0",
      "txHash": "0x7e619f6d5305b7955fb3466c5f05ec0c562b45b48ef26de9b42a170b60bacb07",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQLiquidityMining",
            "label": "stakes",
            "type": "t_mapping(t_address,t_struct(Staker)8398_storage)",
            "src": "contracts/WQLiquidityMining.sol:42"
          },
          {
            "contract": "WQLiquidityMining",
            "label": "stakeToken",
            "type": "t_contract(IERC20Upgradeable)1794",
            "src": "contracts/WQLiquidityMining.sol:45"
          },
          {
            "contract": "WQLiquidityMining",
            "label": "rewardToken",
            "type": "t_contract(IERC20Upgradeable)1794",
            "src": "contracts/WQLiquidityMining.sol:48"
          },
          {
            "contract": "WQLiquidityMining",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/WQLiquidityMining.sol:52"
          },
          {
            "contract": "WQLiquidityMining",
            "label": "rewardTotal",
            "type": "t_uint256",
            "src": "contracts/WQLiquidityMining.sol:54"
          },
          {
            "contract": "WQLiquidityMining",
            "label": "distributionTime",
            "type": "t_uint256",
            "src": "contracts/WQLiquidityMining.sol:56"
          },
          {
            "contract": "WQLiquidityMining",
            "label": "tokensPerStake",
            "type": "t_uint256",
            "src": "contracts/WQLiquidityMining.sol:58"
          },
          {
            "contract": "WQLiquidityMining",
            "label": "rewardProduced",
            "type": "t_uint256",
            "src": "contracts/WQLiquidityMining.sol:59"
          },
          {
            "contract": "WQLiquidityMining",
            "label": "allProduced",
            "type": "t_uint256",
            "src": "contracts/WQLiquidityMining.sol:60"
          },
          {
            "contract": "WQLiquidityMining",
            "label": "producedTime",
            "type": "t_uint256",
            "src": "contracts/WQLiquidityMining.sol:61"
          },
          {
            "contract": "WQLiquidityMining",
            "label": "totalStaked",
            "type": "t_uint256",
            "src": "contracts/WQLiquidityMining.sol:62"
          },
          {
            "contract": "WQLiquidityMining",
            "label": "totalDistributed",
            "type": "t_uint256",
            "src": "contracts/WQLiquidityMining.sol:63"
          },
          {
            "contract": "WQLiquidityMining",
            "label": "stakingPaused",
            "type": "t_bool",
            "src": "contracts/WQLiquidityMining.sol:65"
          },
          {
            "contract": "WQLiquidityMining",
            "label": "unstakingPaused",
            "type": "t_bool",
            "src": "contracts/WQLiquidityMining.sol:66"
          },
          {
            "contract": "WQLiquidityMining",
            "label": "claimingPaused",
            "type": "t_bool",
            "src": "contracts/WQLiquidityMining.sol:67"
          },
          {
            "contract": "WQLiquidityMining",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/WQLiquidityMining.sol:68"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(Staker)8398_storage)": {
            "label": "mapping(address => struct WQLiquidityMining.Staker)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Staker)8398_storage": {
            "label": "struct WQLiquidityMining.Staker",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "distributed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1794": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "a6ccc90f4601da1fa1b3ba8a42cfca06bdb0666f6df02dfcc67f5c56e293b1e5": {
      "address": "0xf7C545A6f717761Fa00f6076bC5F0776723f65e8",
      "txHash": "0x560ba26457fdf307c5b4ea85001175e694cc82ac23cb01df0ab278b96085e422",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQStaking",
            "label": "stakes",
            "type": "t_mapping(t_address,t_struct(Staker)10649_storage)",
            "src": "contracts/WQStaking.sol:43"
          },
          {
            "contract": "WQStaking",
            "label": "stakeToken",
            "type": "t_contract(IERC20Upgradeable)1794",
            "src": "contracts/WQStaking.sol:46"
          },
          {
            "contract": "WQStaking",
            "label": "rewardToken",
            "type": "t_contract(IERC20Upgradeable)1794",
            "src": "contracts/WQStaking.sol:49"
          },
          {
            "contract": "WQStaking",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:53"
          },
          {
            "contract": "WQStaking",
            "label": "rewardTotal",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:55"
          },
          {
            "contract": "WQStaking",
            "label": "distributionTime",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:57"
          },
          {
            "contract": "WQStaking",
            "label": "stakePeriod",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:59"
          },
          {
            "contract": "WQStaking",
            "label": "claimPeriod",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:61"
          },
          {
            "contract": "WQStaking",
            "label": "minStake",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:63"
          },
          {
            "contract": "WQStaking",
            "label": "maxStake",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:65"
          },
          {
            "contract": "WQStaking",
            "label": "tokensPerStake",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:67"
          },
          {
            "contract": "WQStaking",
            "label": "rewardProduced",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:68"
          },
          {
            "contract": "WQStaking",
            "label": "allProduced",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:69"
          },
          {
            "contract": "WQStaking",
            "label": "producedTime",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:70"
          },
          {
            "contract": "WQStaking",
            "label": "totalStaked",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:72"
          },
          {
            "contract": "WQStaking",
            "label": "totalDistributed",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:73"
          },
          {
            "contract": "WQStaking",
            "label": "_entered",
            "type": "t_bool",
            "src": "contracts/WQStaking.sol:75"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(Staker)10649_storage)": {
            "label": "mapping(address => struct WQStaking.Staker)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Staker)10649_storage": {
            "label": "struct WQStaking.Staker",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "distributed",
                "type": "t_uint256"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256"
              },
              {
                "label": "claimedAt",
                "type": "t_uint256"
              },
              {
                "label": "unstakeTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1794": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "5e8c96dff8aebf26bf81105790dd425deb7e72c088bec9366167d8833947edf1": {
      "address": "0xeF00CC4eb7F9d4Fdc0b34F1d7Ed0f12BFc6D0E5b",
      "txHash": "0x60c976d94ca53a6a402c8caa14f50f5cfb5ed20bcc8c40b41cd41b3827388e78",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "WQStakingNative",
            "label": "stakes",
            "type": "t_mapping(t_address,t_struct(Staker)1403_storage)",
            "src": "contracts/WQStakingNative.sol:45"
          },
          {
            "contract": "WQStakingNative",
            "label": "rewardToken",
            "type": "t_contract(IERC20Upgradeable)589",
            "src": "contracts/WQStakingNative.sol:48"
          },
          {
            "contract": "WQStakingNative",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:52"
          },
          {
            "contract": "WQStakingNative",
            "label": "rewardTotal",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:54"
          },
          {
            "contract": "WQStakingNative",
            "label": "distributionTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:56"
          },
          {
            "contract": "WQStakingNative",
            "label": "stakePeriod",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:58"
          },
          {
            "contract": "WQStakingNative",
            "label": "claimPeriod",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:60"
          },
          {
            "contract": "WQStakingNative",
            "label": "minStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:62"
          },
          {
            "contract": "WQStakingNative",
            "label": "maxStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:64"
          },
          {
            "contract": "WQStakingNative",
            "label": "tokensPerStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:66"
          },
          {
            "contract": "WQStakingNative",
            "label": "rewardProduced",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:67"
          },
          {
            "contract": "WQStakingNative",
            "label": "allProduced",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:68"
          },
          {
            "contract": "WQStakingNative",
            "label": "producedTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:69"
          },
          {
            "contract": "WQStakingNative",
            "label": "totalStaked",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:71"
          },
          {
            "contract": "WQStakingNative",
            "label": "totalDistributed",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:72"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(Staker)1403_storage)": {
            "label": "mapping(address => struct WQStakingNative.Staker)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Staker)1403_storage": {
            "label": "struct WQStakingNative.Staker",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "distributed",
                "type": "t_uint256"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256"
              },
              {
                "label": "claimedAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)589": {
            "label": "contract IERC20Upgradeable"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9a1d82e4a03bef2a2ee05d5827537bfe93bcc86b9c6a48e1c0435016fe0699bb": {
      "address": "0x5d5596E09Ef271e46f4155e615fC6f24daeE42E9",
      "txHash": "0x01db24eb8bbfe93df0f803049eb5768b7a0341448349b3f2e35165bcebeffaab",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQStaking",
            "label": "stakes",
            "type": "t_mapping(t_address,t_struct(Staker)10649_storage)",
            "src": "contracts/WQStaking.sol:43"
          },
          {
            "contract": "WQStaking",
            "label": "stakeToken",
            "type": "t_contract(IERC20Upgradeable)1794",
            "src": "contracts/WQStaking.sol:46"
          },
          {
            "contract": "WQStaking",
            "label": "rewardToken",
            "type": "t_contract(IERC20Upgradeable)1794",
            "src": "contracts/WQStaking.sol:49"
          },
          {
            "contract": "WQStaking",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:53"
          },
          {
            "contract": "WQStaking",
            "label": "rewardTotal",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:55"
          },
          {
            "contract": "WQStaking",
            "label": "distributionTime",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:57"
          },
          {
            "contract": "WQStaking",
            "label": "stakePeriod",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:59"
          },
          {
            "contract": "WQStaking",
            "label": "claimPeriod",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:61"
          },
          {
            "contract": "WQStaking",
            "label": "minStake",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:63"
          },
          {
            "contract": "WQStaking",
            "label": "maxStake",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:65"
          },
          {
            "contract": "WQStaking",
            "label": "tokensPerStake",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:67"
          },
          {
            "contract": "WQStaking",
            "label": "rewardProduced",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:68"
          },
          {
            "contract": "WQStaking",
            "label": "allProduced",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:69"
          },
          {
            "contract": "WQStaking",
            "label": "producedTime",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:70"
          },
          {
            "contract": "WQStaking",
            "label": "totalStaked",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:72"
          },
          {
            "contract": "WQStaking",
            "label": "totalDistributed",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:73"
          },
          {
            "contract": "WQStaking",
            "label": "_entered",
            "type": "t_bool",
            "src": "contracts/WQStaking.sol:75"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(Staker)10649_storage)": {
            "label": "mapping(address => struct WQStaking.Staker)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Staker)10649_storage": {
            "label": "struct WQStaking.Staker",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "distributed",
                "type": "t_uint256"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256"
              },
              {
                "label": "claimedAt",
                "type": "t_uint256"
              },
              {
                "label": "unstakeTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1794": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "9ba09abaa2dbc85a3f7d35aa0de9f02ea62dc1980ab78f059d41ab2312ec5cdf": {
      "address": "0x5aaCdFd09B2EeB818A28696977Bc8f160d205369",
      "txHash": "0xa3731b30997cc8cdd1053b63f342d45d9a81c927edc401ffdcc2a5b96c08c2bc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "WQStakingNative",
            "label": "stakes",
            "type": "t_mapping(t_address,t_struct(Staker)11625_storage)",
            "src": "contracts/WQStakingNative.sol:45"
          },
          {
            "contract": "WQStakingNative",
            "label": "rewardToken",
            "type": "t_contract(IERC20Upgradeable)1794",
            "src": "contracts/WQStakingNative.sol:48"
          },
          {
            "contract": "WQStakingNative",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:52"
          },
          {
            "contract": "WQStakingNative",
            "label": "rewardTotal",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:54"
          },
          {
            "contract": "WQStakingNative",
            "label": "distributionTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:56"
          },
          {
            "contract": "WQStakingNative",
            "label": "stakePeriod",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:58"
          },
          {
            "contract": "WQStakingNative",
            "label": "claimPeriod",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:60"
          },
          {
            "contract": "WQStakingNative",
            "label": "minStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:62"
          },
          {
            "contract": "WQStakingNative",
            "label": "maxStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:64"
          },
          {
            "contract": "WQStakingNative",
            "label": "tokensPerStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:66"
          },
          {
            "contract": "WQStakingNative",
            "label": "rewardProduced",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:67"
          },
          {
            "contract": "WQStakingNative",
            "label": "allProduced",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:68"
          },
          {
            "contract": "WQStakingNative",
            "label": "producedTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:69"
          },
          {
            "contract": "WQStakingNative",
            "label": "totalStaked",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:71"
          },
          {
            "contract": "WQStakingNative",
            "label": "totalDistributed",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:72"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(Staker)11625_storage)": {
            "label": "mapping(address => struct WQStakingNative.Staker)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Staker)11625_storage": {
            "label": "struct WQStakingNative.Staker",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "distributed",
                "type": "t_uint256"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256"
              },
              {
                "label": "claimedAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1794": {
            "label": "contract IERC20Upgradeable"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fa5724490eac43b0965fde3d4751d709fab3519edcf687909ff09261b22f7e1a": {
      "address": "0x7300101789978a098812A1BB8C2A97Ba6CBC0614",
      "txHash": "0x18e3a6020aee2d651c321f3457be10f81801879a3c2beeb0782664d61f77283a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "WQStakingNative",
            "label": "stakes",
            "type": "t_mapping(t_address,t_struct(Staker)11626_storage)",
            "src": "contracts/WQStakingNative.sol:46"
          },
          {
            "contract": "WQStakingNative",
            "label": "rewardToken",
            "type": "t_contract(IERC20Upgradeable)1794",
            "src": "contracts/WQStakingNative.sol:49"
          },
          {
            "contract": "WQStakingNative",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:53"
          },
          {
            "contract": "WQStakingNative",
            "label": "rewardTotal",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:55"
          },
          {
            "contract": "WQStakingNative",
            "label": "distributionTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:57"
          },
          {
            "contract": "WQStakingNative",
            "label": "stakePeriod",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:59"
          },
          {
            "contract": "WQStakingNative",
            "label": "claimPeriod",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:61"
          },
          {
            "contract": "WQStakingNative",
            "label": "minStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:63"
          },
          {
            "contract": "WQStakingNative",
            "label": "maxStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:65"
          },
          {
            "contract": "WQStakingNative",
            "label": "tokensPerStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:67"
          },
          {
            "contract": "WQStakingNative",
            "label": "rewardProduced",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:68"
          },
          {
            "contract": "WQStakingNative",
            "label": "allProduced",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:69"
          },
          {
            "contract": "WQStakingNative",
            "label": "producedTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:70"
          },
          {
            "contract": "WQStakingNative",
            "label": "totalStaked",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:72"
          },
          {
            "contract": "WQStakingNative",
            "label": "totalDistributed",
            "type": "t_uint256",
            "src": "contracts/WQStakingNative.sol:73"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(Staker)11626_storage)": {
            "label": "mapping(address => struct WQStakingNative.Staker)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Staker)11626_storage": {
            "label": "struct WQStakingNative.Staker",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "distributed",
                "type": "t_uint256"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256"
              },
              {
                "label": "claimedAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1794": {
            "label": "contract IERC20Upgradeable"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ecdd6820c8abe8be6ea4c3b31263b037a09a9bb23d65b716d9852dffb8cc6d31": {
      "address": "0xf5047332270F04d314152C92f26aE393d4611dAa",
      "txHash": "0x55f2ebf94b598c77cce20d2a4a35db58d5f2c563b5205455a6b652a79c22e1e9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "WQStaking",
            "label": "stakes",
            "type": "t_mapping(t_address,t_struct(Staker)10649_storage)",
            "src": "contracts/WQStaking.sol:43"
          },
          {
            "contract": "WQStaking",
            "label": "stakeToken",
            "type": "t_contract(IERC20Upgradeable)1794",
            "src": "contracts/WQStaking.sol:46"
          },
          {
            "contract": "WQStaking",
            "label": "rewardToken",
            "type": "t_contract(IERC20Upgradeable)1794",
            "src": "contracts/WQStaking.sol:49"
          },
          {
            "contract": "WQStaking",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:53"
          },
          {
            "contract": "WQStaking",
            "label": "rewardTotal",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:55"
          },
          {
            "contract": "WQStaking",
            "label": "distributionTime",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:57"
          },
          {
            "contract": "WQStaking",
            "label": "stakePeriod",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:59"
          },
          {
            "contract": "WQStaking",
            "label": "claimPeriod",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:61"
          },
          {
            "contract": "WQStaking",
            "label": "minStake",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:63"
          },
          {
            "contract": "WQStaking",
            "label": "maxStake",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:65"
          },
          {
            "contract": "WQStaking",
            "label": "tokensPerStake",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:67"
          },
          {
            "contract": "WQStaking",
            "label": "rewardProduced",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:68"
          },
          {
            "contract": "WQStaking",
            "label": "allProduced",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:69"
          },
          {
            "contract": "WQStaking",
            "label": "producedTime",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:70"
          },
          {
            "contract": "WQStaking",
            "label": "totalStaked",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:72"
          },
          {
            "contract": "WQStaking",
            "label": "totalDistributed",
            "type": "t_uint256",
            "src": "contracts/WQStaking.sol:73"
          },
          {
            "contract": "WQStaking",
            "label": "_entered",
            "type": "t_bool",
            "src": "contracts/WQStaking.sol:75"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(Staker)10649_storage)": {
            "label": "mapping(address => struct WQStaking.Staker)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Staker)10649_storage": {
            "label": "struct WQStaking.Staker",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "distributed",
                "type": "t_uint256"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256"
              },
              {
                "label": "claimedAt",
                "type": "t_uint256"
              },
              {
                "label": "unstakeTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1794": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    }
  }
}
