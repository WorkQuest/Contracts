{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x4d9F307F1fa63abC943b5db2CBa1c71D02d86AAa",
      "txHash": "0xee4d9bb3d52b9d5a479ddde25683ab964e2c1723a75be1339ba368f835e98343",
      "kind": "uups"
    },
    {
      "address": "0x8E52341384F5286f4c76cE1072Aba887Be8E4EB9",
      "txHash": "0x309719ee516ebb5d14e5ebba6dd9d36b9d7e90e22b5e54e49e7f7fcc7a21860b",
      "kind": "uups"
    },
    {
      "address": "0xD7ca5F803807b03D49606D4f8e66551170b1d689",
      "txHash": "0x74b8f3a83521fae78fa5ed846e904134a3f63c075d449741d18b21a2863e5284",
      "kind": "uups"
    },
    {
      "address": "0xD93d2cF0e0179112469188F61ceb948F2Dbe4824",
      "txHash": "0x3f29fbef300af3e8369666fb492ef81ded9b282fffb54d655fc0f1625e204e0e",
      "kind": "uups"
    },
    {
      "address": "0x6936Bab70f661Fd0Ce42096D73029D43c2d62214",
      "txHash": "0x0cda0c4f1479c7841e4898b83ce191552cd094c459fa97a44dad9f32b99747f1",
      "kind": "uups"
    },
    {
      "address": "0x5C458F00974b0195817c40aE7A80f6fe38843eDb",
      "txHash": "0x62076367c5d37b0e602605429cd4e89d2a3f215af0b5e6d6b5d5474e5851cb46",
      "kind": "uups"
    }
  ],
  "impls": {
    "c540fe1eab4f54d9133f2cd6d550e2f43037b8a32eafdd7c9daec3590e1d2a6a": {
      "address": "0xB9E0E9fB14D8891ee1Cbe3C107107B352a3F2fe7",
      "txHash": "0x9583351a792d5136fa72978bdb234f44dc0c68ffbad493300f030f4597a5154e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC20PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:46"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQBridgeToken",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/WQBridgeToken.sol:21"
          },
          {
            "contract": "WQBridgeToken",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "contracts/WQBridgeToken.sol:22"
          },
          {
            "contract": "WQBridgeToken",
            "label": "isBlockListed",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/WQBridgeToken.sol:24"
          },
          {
            "contract": "WQBridgeToken",
            "label": "isWhiteListed",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/WQBridgeToken.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "c5fd99d7a2bf00261490eef3ea0a11c69754431cf70a15453f98112b1da5f598": {
      "address": "0x6F1C5eE0A52F4dF846f464C14A51C767C5542Bc5",
      "txHash": "0x9606aae01c974ab2148e66aa8f3957c5776f941207895c49ac7d61ae4e0da378",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQBridgePool",
            "label": "initialized",
            "type": "t_bool",
            "src": "contracts/WQBridgePool.sol:25"
          },
          {
            "contract": "WQBridgePool",
            "label": "isBlockListed",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/WQBridgePool.sol:27"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          }
        }
      }
    },
    "f3816780ace0a8a0e7b52704de969986acdc4cc8b8f47e93146a99a28c19898d": {
      "address": "0xEC168854D2BB13285b38Eb2A285036d68ABc85d7",
      "txHash": "0x352e61ad593aa7b85012aa35f699d9f2bdab640fcdf5390a87c50bc552d8533e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQBridge",
            "label": "chainId",
            "type": "t_uint256",
            "src": "contracts/WQBridge.sol:60"
          },
          {
            "contract": "WQBridge",
            "label": "pool",
            "type": "t_address_payable",
            "src": "contracts/WQBridge.sol:62"
          },
          {
            "contract": "WQBridge",
            "label": "chains",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/WQBridge.sol:65"
          },
          {
            "contract": "WQBridge",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)8521_storage)",
            "src": "contracts/WQBridge.sol:68"
          },
          {
            "contract": "WQBridge",
            "label": "swaps",
            "type": "t_mapping(t_bytes32,t_struct(SwapData)8512_storage)",
            "src": "contracts/WQBridge.sol:71"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)8521_storage)": {
            "label": "mapping(string => struct WQBridge.TokenSettings)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(TokenSettings)8521_storage": {
            "label": "struct WQBridge.TokenSettings",
            "members": [
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "native",
                "type": "t_bool"
              },
              {
                "label": "lockable",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(SwapData)8512_storage)": {
            "label": "mapping(bytes32 => struct WQBridge.SwapData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(SwapData)8512_storage": {
            "label": "struct WQBridge.SwapData",
            "members": [
              {
                "label": "nonce",
                "type": "t_uint256"
              },
              {
                "label": "state",
                "type": "t_enum(State)8506"
              }
            ]
          },
          "t_enum(State)8506": {
            "label": "enum WQBridge.State",
            "members": [
              "Empty",
              "Initialized",
              "Redeemed"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    }
  }
}
