{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x2d1Ffd5017EBc5EF2A7bbE9A409132d595bEbC91",
    "txHash": "0x9a1a306ee36344d079dd51e0c098bc8a382a02f927b15cb2b8a3a1c1e2b645ce",
    "deployTransaction": {
      "hash": "0x9a1a306ee36344d079dd51e0c098bc8a382a02f927b15cb2b8a3a1c1e2b645ce",
      "type": 0,
      "accessList": null,
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0xE24f99419d788003c0D5212f05F47B1572cDC38a",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x07"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 439,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x508fd9bd5239497d85780bcc8be35fbb1b68276888702ae59ba5c7544bb28ea7",
      "s": "0x5400ee812690c4bd61985cbdbab9f84d93b9d0880db8da8f5e61be85f4a9dfed",
      "v": 40440260,
      "creates": "0x2d1Ffd5017EBc5EF2A7bbE9A409132d595bEbC91",
      "chainId": 20220112
    }
  },
  "proxies": [
    {
      "address": "0x0Ed13A696Fa29151F3064077aCb2a281e68df2aa",
      "txHash": "0x9137069563f28f3124227df29f5b8c04d25b81718a6838eb06b5d849eaf5e719",
      "kind": "uups"
    },
    {
      "address": "0xbd5bBEd9677401e911044947cFF9fA4979c29bD8",
      "txHash": "0x056b88680fae98e9d69ce2dc5a098aec48a54502885167e48c5c08a9606a1594",
      "kind": "uups"
    },
    {
      "address": "0xD9679C4Bc6E1546cfCb9c70AC81A4CBf400E7D24",
      "txHash": "0x1bd3c4da4024119d9ab91637cbb800f4be024cc44c2687073f80c98556a32874",
      "kind": "uups"
    },
    {
      "address": "0x75349C3f2C3CFD94488A71a350Ba841C14309c5b",
      "txHash": "0x2f5fae897c78d23b3f8b0181d0df49efc605803ea79851a7d225362146189a83",
      "kind": "uups"
    },
    {
      "address": "0x841e6d5991F67D8c9F88a6F9726246774a4ab376",
      "txHash": "0x80b2aa7b66117577fec60fd34df12ccd9b109e3d585e0dcb2dee9d26c4b843e0",
      "kind": "uups"
    },
    {
      "address": "0x75FC17d0C358F19528d5C24f29b37fA2aA725b1E",
      "txHash": "0xce1b82e8189e86abf8f9652edf3d8ba86c5b7b87f00a3ec60e47adecea6ec748",
      "kind": "uups"
    },
    {
      "address": "0x087925f8d239435212deeB090EBA074bcCAF0D4C",
      "txHash": "0xc38f384246119ba2b7c3c704cbb431b9001c451c58a2f60d102e5f23387900fd",
      "kind": "uups"
    },
    {
      "address": "0xCA76Fd3Dbb863E614f3b454aBe7b7D1A1fAdBF66",
      "txHash": "0xbfac527b303176994d2ab6e0d0062ca08c3a05ad4abb0658f9e19bbe1eb08857",
      "kind": "uups"
    },
    {
      "address": "0x3407513Da10AD7051895aA53203B44b448d815db",
      "txHash": "0xe49428e9f8621cc6ffc61fd4ad82aa48580f77c41764355c613e7799cc93fb81",
      "kind": "uups"
    },
    {
      "address": "0x455Fc7ac84ee418F4bD414ab92c9c27b18B7B066",
      "txHash": "0x9111fab735b33d50f870dd7bad214f2564ea8275c5794e8c220193c20ee6a71f",
      "kind": "uups"
    },
    {
      "address": "0x00687E3d178F8aEB2648dF7d26532e52D8E396ed",
      "txHash": "0x50aafb34a5e5dc3113b3922bc53d363de9e1029b910265383685266403a207ef",
      "kind": "uups"
    },
    {
      "address": "0xB6b1aA9509f140bbAC52eA68214114d859C59FaC",
      "txHash": "0xdffeac0a8947c3b0d32e7645a6892e0486e603645960ad71af0d3eb8c0d15705",
      "kind": "uups"
    },
    {
      "address": "0x00d908eE965bE5876eD47A4f829433f6dD37d16C",
      "txHash": "0xc32928c2e4c9da2d8a7fde6e8755aedaf7b28c0a61170dfea0aa3b66e018dca5",
      "kind": "uups"
    },
    {
      "address": "0xB778e471833102dBe266DE2747D72b91489568c2",
      "txHash": "0xa57894448ba85d2008a95cd1193bc33fb009cdd4dcf43fb7118d3ff3b17b4d9e",
      "kind": "uups"
    },
    {
      "address": "0xf8Fb5581569057C8E4c24BF8112cf8961C28966f",
      "txHash": "0x1133d98700c3ef73eb3afc613e02b43a464085af7505863a5c02eb8099d86ac5",
      "kind": "uups"
    },
    {
      "address": "0x7ea4804c70c4C6aD649A53E599F557b05750BD3B",
      "txHash": "0x1ed8205dc5c6106fe772f12429eec2a89bba492976da659a616893097f13e080",
      "kind": "uups"
    },
    {
      "address": "0x31967C955Bad99Fea7e9DbeC23C926cE9fBCa448",
      "txHash": "0x7ebbfdd97782d2e16f404d6114ed7ce983e1905fbb7fe83c48f3659b73e48386",
      "kind": "uups"
    },
    {
      "address": "0x0e356bd6Ec6941d746EBC47098ED0fA543f6820B",
      "txHash": "0x9ca8c0e0670495f67ef5bdffe1e5044983b8875a32d0b8ba9cbb33b856aec665",
      "kind": "uups"
    },
    {
      "address": "0xCAb8460ff800AAcE29F323e43314612C3Cc93945",
      "txHash": "0xefb85bfdf8d533fa1587196c683416e443a29aba300d5df7a5b68c187bb9d4cd",
      "kind": "uups"
    },
    {
      "address": "0xB942FFA77e0226fFC8dC5BbB158b573feDe483D6",
      "txHash": "0x44fd4eef4a0d011a30044a7a9c1d9e43dd0f0d53984e54e38a0a10926da93a87",
      "kind": "uups"
    },
    {
      "address": "0x123B3886E11A41251E4ccf51E62e6b8DCadC17D8",
      "txHash": "0x35aafe2e4f2a3999e6f598d7a639c7d278b4177ecb3495dceedb4db76e00dd99",
      "kind": "uups"
    },
    {
      "address": "0xf0eF224b61c2a993Fce09933ef647C3fa37406c5",
      "txHash": "0x3c5a72fd57436446e03688b9185eed270c0ffebb92396eba89d45ad07b4659a8",
      "kind": "uups"
    },
    {
      "address": "0xc2B865B32a31379b430cb06DcEC8356bAA4fefF7",
      "txHash": "0xe9704ae79753cbe290929d0b1dbc88690bb900f58265b65140871cc506daeec2",
      "kind": "uups"
    },
    {
      "address": "0x5e267F59bA7966e8f82Ad4269aba2D3F2304289E",
      "txHash": "0x87b5fc4d69f0615540aba85563f89b49028d3ddac88caa143669e80f6f2e06ae",
      "kind": "uups"
    },
    {
      "address": "0x9De231b833811E18bC2CFADbb298fBea1513A6d9",
      "txHash": "0x9766cf6bae80bc869aea778c94653a29033bc3a238003eedcfd3d0fabf95c34e",
      "kind": "uups"
    },
    {
      "address": "0x776B15eD27038D4E45c395d8A8d34d8Cf0B012aF",
      "txHash": "0x210188f94a06793d21df48a4b1ddaa8c7c3d0d1df64b67fbb599d3b4a9f0089f",
      "kind": "uups"
    },
    {
      "address": "0x8Ffc078ac6ad5CEc44732928e7832508aFD0A833",
      "txHash": "0xe98723bdb177e294bb5db1396a15534f022722a56929124c47aaa79310f3d41f",
      "kind": "uups"
    },
    {
      "address": "0x7C560b7B6F81918AebFb105d608428a79e637a25",
      "txHash": "0x73fb3fdd2f7fae1b17be3a20dcf47222199111f834e6f0f86011f9009edb0a52",
      "kind": "uups"
    },
    {
      "address": "0x68c234FE46362d334da2e18d09e30Df9C79daacA",
      "txHash": "0x69b259907eff4bdd951f2324f3ceb13a9114343330f9509f8d8c332d303efda8",
      "kind": "uups"
    },
    {
      "address": "0x46Fa40C84Da33C4942917cA4C4E1D8E22f75607f",
      "txHash": "0xf1fe3fc22e730371c4590910d0866e00696bc2414ee88a15e21f570f30cabc7a",
      "kind": "uups"
    },
    {
      "address": "0xB52c71e0696869548Ea9c20F0F1840875B34c4c8",
      "txHash": "0x09a5f558e3274ff919823eaa3fbdaa7926a0dc8d29cf1c857d0d2a412be41c48",
      "kind": "uups"
    },
    {
      "address": "0xA6CEEE03708134D4a4e5E0Dd5cf4EaCA91280b22",
      "txHash": "0x77d69e8e9d88c89a952fda0cbcfcec22a66eba753d5db893dd981d348558110c",
      "kind": "uups"
    },
    {
      "address": "0x237836Ff6E5AeF4E4B4dC49CDD4AC3a0CB806ec6",
      "txHash": "0xb336e280dca2f9fb91d3f3021fafa8c436a88fe6eb6904a10fcae3423565d630",
      "kind": "uups"
    },
    {
      "address": "0x905D8bEA76FF7792A8cdbBdb760e89d153DfDaB8",
      "txHash": "0x6d87d9f82175f6c0762982af8dad57aa5f875d6e0ffc75e1bca2777fd8dab134",
      "kind": "uups"
    },
    {
      "address": "0x2EfF9268A0D77eAB88D26C1d6a26311e1008E97d",
      "txHash": "0x8f8e9e24bc014a83143f83437a17a8c81d378913c97b0b9ca6a82fe4cbb8a90d",
      "kind": "uups"
    },
    {
      "address": "0x0Cf42bF041C0C89271a426E05FB360c44Ccd79c7",
      "txHash": "0x6df303fa9a0b3d8daa4bb8b51ea63f3f8215c20680c068fb6c03436418c646c5",
      "kind": "uups"
    },
    {
      "address": "0x925b9480bc24dEBcBe073efaA7dFa79bA472f39B",
      "txHash": "0x39e27775d0394de6dd546a0742f39dd12a03d01719355b6a8a54d8f07a8e5380",
      "kind": "uups"
    },
    {
      "address": "0xF44ce4674bBF9210975174F166e7a45A16A96568",
      "txHash": "0x1eab7c8972e4a178b78a4a8be7be67ce398b6333ec8ed8016052da323727db5f",
      "kind": "uups"
    },
    {
      "address": "0xEDa612b81560797BA190CB9F8bCe43d8458a56c9",
      "txHash": "0x189e4a04ad01bff7cf952923bbccf20917c7a19a0ade4e117220397d0efbbd79",
      "kind": "uups"
    },
    {
      "address": "0x952249cd17Caed6795C8492F3c16eee7bbAF25f9",
      "txHash": "0x066d3aafad3b7c71729b95397eadb1a0b56e091d80f454ec539453ba996d3536",
      "kind": "transparent"
    },
    {
      "address": "0xFD90Cc959DA784fedf46Daf5f202Ea1Eb1E030F4",
      "txHash": "0xb50a45ecf7bab1cdeda7e74f23aac6c28ad627590d3e7af7627e3de03bce0e98",
      "kind": "uups"
    },
    {
      "address": "0x78788Ca68CEDeBf732E9c2a8948c2Aa8A5ae25Ae",
      "txHash": "0x0cb0135dc08c0144ac4ac358d31596f6b4aba2573172e8a487b53896cba47796",
      "kind": "uups"
    },
    {
      "address": "0x4d9F307F1fa63abC943b5db2CBa1c71D02d86AAa",
      "txHash": "0x994c2e0542fec11bdbc8ed0a337810d21dd85c7f57e26ad22aa7ce014f4e539b",
      "kind": "uups"
    },
    {
      "address": "0x7df084c898eF1eF1Db15A78d3A10616074e554F5",
      "txHash": "0x3ae3dfcd2336e4e44482101ba3c5b7090f2febc034c937935c54df923d34a42b",
      "kind": "uups"
    },
    {
      "address": "0xd65815dA812C6eAEC0186215E43A12D76F5deCBc",
      "txHash": "0x40268012635989271d6ca671d6b904076b00f72e1ef49f300ae2ea5b704e57c1",
      "kind": "uups"
    },
    {
      "address": "0x403E89217FB3367E5c46F87E998293F357DA751E",
      "txHash": "0x749433597e384fb2f99927aed8c1356d4cd9b809134cdba1c851ee591c76e1b8",
      "kind": "uups"
    },
    {
      "address": "0x4aEb49982e46588b388eD8A206a0a825381D1cf6",
      "txHash": "0xb713092dd67661da5d9b852c3a26f76de229d28e3bd3f76955b5dbbb6b2f7415",
      "kind": "uups"
    },
    {
      "address": "0xB585b8c6d7c997f86eA5846213AFB874B2f5b4Ff",
      "txHash": "0x4a74ec05693e7512c27696aea2560888bdb57888a5f6a5f208768762d933d569",
      "kind": "uups"
    },
    {
      "address": "0xfb93e71e7674114b7C19d72BB9d91f517440E028",
      "txHash": "0x25d5240c9521b2d8caba0187af3918e3959b962153dc0e4f40116cef74ff88a0",
      "kind": "uups"
    },
    {
      "address": "0xCCE2FC7ec63108F0a802d92dc6e3935508355C0d",
      "txHash": "0x01e3f74d8d3ad43b8d93ffe40745dd0a58090db40e78d85a19cd7bf452b21bc3",
      "kind": "uups"
    },
    {
      "address": "0x1d230D3271D95b2a6f074F016FBE341c232bd0Bc",
      "txHash": "0x9e246d0667bdcf1faa1956f4b61679b46dc762bdd5dc5d943109020ba60dbd0e",
      "kind": "uups"
    },
    {
      "address": "0x5aDE8535127bbc83cc29DE69d7Af81B92a689f10",
      "txHash": "0x9f7ef69acc87bd56525e3229b4584fc0a0e1094e2ec9220b268af4762d14a149",
      "kind": "uups"
    },
    {
      "address": "0x899b3442026470A832FE17217C8B5746Ec23A94C",
      "txHash": "0x8337185e1fda9c3cdfb87c2659bc5a069d3ccb2fa9c9bfdcf304ef5f0e6b740a",
      "kind": "uups"
    },
    {
      "address": "0xd0eee3ADA4255c940aBd1E2f78Fc61aAeCe8b2bA",
      "txHash": "0xccb99b7ae631bc81b57f5f86412e186a3290577d4514a0237e4e40fad237758a",
      "kind": "uups"
    },
    {
      "address": "0x4e843f4f9A7d27eF65b9eeB234FBEBd6e4C2ea4D",
      "txHash": "0xdab1729419939f069768f90c67fc58400013585997b8afe8fecca0a41ca323b9",
      "kind": "uups"
    },
    {
      "address": "0x2Bf4DEB0d1dDcd19E3561340FCbC9607E00273a7",
      "txHash": "0x910b5d108e3bbc539e82f823f6b25efd54b3f46847447947cbf963a2fee204e2",
      "kind": "uups"
    }
  ],
  "impls": {
    "42ac568db561db6aa0d6149b2b469372be7339e55e1f4a8a2d8f4a51f4554644": {
      "address": "0x887d42353Fe8370B84E64F2f62126E496Cbeac5f",
      "txHash": "0xfabbdfcc192e890ed0af62b869bd3ebff63415d633959a58e730f2fd23a8dbb2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC20PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:46"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQBridgeToken",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/WQBridgeToken.sol:21"
          },
          {
            "contract": "WQBridgeToken",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "contracts/WQBridgeToken.sol:22"
          },
          {
            "contract": "WQBridgeToken",
            "label": "isBlockListed",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/WQBridgeToken.sol:24"
          },
          {
            "contract": "WQBridgeToken",
            "label": "isWhiteListed",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/WQBridgeToken.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "7eed0c7bd8ce4ea8e779c7e2f49224e4b6f9e76992f02eea9525adb789aa6346": {
      "address": "0x175C88318e78218C43FF9358B4cFBB8A429F0387",
      "txHash": "0x714ccbe8bcdb2f985c78234d07e7632417477ca49e72a6837be52abcfbc59520",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQBridgePool",
            "label": "initialized",
            "type": "t_bool",
            "src": "contracts/WQBridgePool.sol:25"
          },
          {
            "contract": "WQBridgePool",
            "label": "isBlockListed",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/WQBridgePool.sol:27"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          }
        }
      }
    },
    "06c5294ed8671c6ea1d5d9871c0e0d6f961e811acc04527846158c86c59d56e3": {
      "address": "0xB54d84ECbC1116956f4De42Fa119e671eC633a07",
      "txHash": "0x6f21ed4df2c8f2896d069ae76728daa0a0d16cd763a65de81c67c9efe08229a8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQBridge",
            "label": "chainId",
            "type": "t_uint256",
            "src": "contracts/WQBridge.sol:60"
          },
          {
            "contract": "WQBridge",
            "label": "pool",
            "type": "t_address_payable",
            "src": "contracts/WQBridge.sol:62"
          },
          {
            "contract": "WQBridge",
            "label": "chains",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/WQBridge.sol:65"
          },
          {
            "contract": "WQBridge",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)8123_storage)",
            "src": "contracts/WQBridge.sol:68"
          },
          {
            "contract": "WQBridge",
            "label": "swaps",
            "type": "t_mapping(t_bytes32,t_struct(SwapData)8114_storage)",
            "src": "contracts/WQBridge.sol:71"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)8123_storage)": {
            "label": "mapping(string => struct WQBridge.TokenSettings)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(TokenSettings)8123_storage": {
            "label": "struct WQBridge.TokenSettings",
            "members": [
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "native",
                "type": "t_bool"
              },
              {
                "label": "lockable",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(SwapData)8114_storage)": {
            "label": "mapping(bytes32 => struct WQBridge.SwapData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(SwapData)8114_storage": {
            "label": "struct WQBridge.SwapData",
            "members": [
              {
                "label": "nonce",
                "type": "t_uint256"
              },
              {
                "label": "state",
                "type": "t_enum(State)8108"
              }
            ]
          },
          "t_enum(State)8108": {
            "label": "enum WQBridge.State",
            "members": [
              "Empty",
              "Initialized",
              "Redeemed"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "f25974d1e9b0ab7b73fdba3a17a69ee38ea13a323dadf0450af592e861f7d3a8": {
      "address": "0xbeE012966c1C602858E4d510e49cEaFbBE847160",
      "txHash": "0x19f3d5111aedf713a8dccb4c450adcd6a4eeb0d3b7164f2b2b3f316a89189659",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQPriceOracle",
            "label": "validTime",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQPriceOracle.sol:25"
          },
          {
            "contract": "WQPriceOracle",
            "label": "lastNonce",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQPriceOracle.sol:26"
          },
          {
            "contract": "WQPriceOracle",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_struct(TokenInfo)21149_storage)",
            "src": "contracts/stablecoin/WQPriceOracle.sol:27"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_struct(TokenInfo)21149_storage)": {
            "label": "mapping(string => struct WQPriceOracle.TokenInfo)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(TokenInfo)21149_storage": {
            "label": "struct WQPriceOracle.TokenInfo",
            "members": [
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "updatedTime",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "bfa1b43aecf46dc2edaeae3b176f97e6afca0ae78ad5b0615f566b133287ba90": {
      "address": "0x02165DbA76cc960FA40Ce8dDc7991912ccE6E022",
      "txHash": "0xfa2a0a32736b86222830e9c57c8a1dcf9c3b1e44a1937125c0e2d67fc4a88ff7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQPensionFund",
            "label": "lockTime",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:36"
          },
          {
            "contract": "WQPensionFund",
            "label": "defaultFee",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:37"
          },
          {
            "contract": "WQPensionFund",
            "label": "contributed",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:38"
          },
          {
            "contract": "WQPensionFund",
            "label": "rewardsPerContributed",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:39"
          },
          {
            "contract": "WQPensionFund",
            "label": "rewardsProduced",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:40"
          },
          {
            "contract": "WQPensionFund",
            "label": "rewardsDistributed",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:41"
          },
          {
            "contract": "WQPensionFund",
            "label": "borrowed",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:42"
          },
          {
            "contract": "WQPensionFund",
            "label": "apy",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:43"
          },
          {
            "contract": "WQPensionFund",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WQPensionFund.sol:44"
          },
          {
            "contract": "WQPensionFund",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/WQPensionFund.sol:47"
          },
          {
            "contract": "WQPensionFund",
            "label": "feePerMonth",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:48"
          },
          {
            "contract": "WQPensionFund",
            "label": "feeWithdraw",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:49"
          },
          {
            "contract": "WQPensionFund",
            "label": "wallets",
            "type": "t_mapping(t_address,t_struct(PensionWallet)11144_storage)",
            "src": "contracts/WQPensionFund.sol:52"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(PensionWallet)11144_storage)": {
            "label": "mapping(address => struct WQPensionFund.PensionWallet)"
          },
          "t_struct(PensionWallet)11144_storage": {
            "label": "struct WQPensionFund.PensionWallet",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "unlockDate",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "rewardDistributed",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "425f1244b9f210ec0ad76c49ce7485fc13fc28eb3cf077bd1dba0b763b8cc33d": {
      "address": "0xA3b6CbE41FCF2E8499C7cD48756a88320152dcBa",
      "txHash": "0xb8a7a217a454dcc06e154d2feffef7c8f87d2737298da7e8e4988bd09b16d12e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQReferral",
            "label": "referralBonus",
            "type": "t_uint256",
            "src": "contracts/WQReferral.sol:46"
          },
          {
            "contract": "WQReferral",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)13190",
            "src": "contracts/WQReferral.sol:48"
          },
          {
            "contract": "WQReferral",
            "label": "factory",
            "type": "t_contract(WorkQuestFactory)20058",
            "src": "contracts/WQReferral.sol:50"
          },
          {
            "contract": "WQReferral",
            "label": "earnedThreshold",
            "type": "t_uint256",
            "src": "contracts/WQReferral.sol:52"
          },
          {
            "contract": "WQReferral",
            "label": "referrals",
            "type": "t_mapping(t_address,t_struct(Account)13561_storage)",
            "src": "contracts/WQReferral.sol:54"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(WQPriceOracleInterface)13190": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_contract(WorkQuestFactory)20058": {
            "label": "contract WorkQuestFactory"
          },
          "t_mapping(t_address,t_struct(Account)13561_storage)": {
            "label": "mapping(address => struct WQReferral.Account)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Account)13561_storage": {
            "label": "struct WQReferral.Account",
            "members": [
              {
                "label": "affiliat",
                "type": "t_address"
              },
              {
                "label": "earnedAmount",
                "type": "t_uint256"
              },
              {
                "label": "rewardTotal",
                "type": "t_uint256"
              },
              {
                "label": "rewardPaid",
                "type": "t_uint256"
              },
              {
                "label": "referredCount",
                "type": "t_uint256"
              },
              {
                "label": "paid",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "9df20532c224926e086fbf37f771d4223bdec6af52500eb3544fcf9acd34fb9c": {
      "address": "0x796fC95153e6105528717Da994B65e42dC561aBa",
      "txHash": "0xcd48cb4c786f4155129bc961b9a7c754541abb77433c1b09545eff85781c4630",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "feeEmployer",
            "type": "t_uint256",
            "src": "contracts/WorkQuestFactory.sol:29"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "feeWorker",
            "type": "t_uint256",
            "src": "contracts/WorkQuestFactory.sol:30"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "feeTx",
            "type": "t_uint256",
            "src": "contracts/WorkQuestFactory.sol:31"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "feeReceiver",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:34"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "pensionFund",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:37"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "referral",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:40"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WorkQuestFactory.sol:43"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "workquests",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/WorkQuestFactory.sol:46"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "workquestValid",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/WorkQuestFactory.sol:49"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "1a9a155c571c5fd29b2dfceb1655043744f84c05808f7abf43b36123c14864c1": {
      "address": "0x59EDE8C17F87bbB11dc135232F61Fee96144474A",
      "txHash": "0x494cd222d2e2e5593f5602f9487804cf15702288b65ac29424a65a6f20122720",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQSavingProduct",
            "label": "contributed",
            "type": "t_uint256",
            "src": "contracts/WQSavingProduct.sol:35"
          },
          {
            "contract": "WQSavingProduct",
            "label": "rewardsPerContributed",
            "type": "t_uint256",
            "src": "contracts/WQSavingProduct.sol:36"
          },
          {
            "contract": "WQSavingProduct",
            "label": "rewardsProduced",
            "type": "t_uint256",
            "src": "contracts/WQSavingProduct.sol:37"
          },
          {
            "contract": "WQSavingProduct",
            "label": "rewardsDistributed",
            "type": "t_uint256",
            "src": "contracts/WQSavingProduct.sol:38"
          },
          {
            "contract": "WQSavingProduct",
            "label": "borrowed",
            "type": "t_uint256",
            "src": "contracts/WQSavingProduct.sol:39"
          },
          {
            "contract": "WQSavingProduct",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WQSavingProduct.sol:40"
          },
          {
            "contract": "WQSavingProduct",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/WQSavingProduct.sol:43"
          },
          {
            "contract": "WQSavingProduct",
            "label": "feePerMonth",
            "type": "t_uint256",
            "src": "contracts/WQSavingProduct.sol:44"
          },
          {
            "contract": "WQSavingProduct",
            "label": "feeWithdraw",
            "type": "t_uint256",
            "src": "contracts/WQSavingProduct.sol:45"
          },
          {
            "contract": "WQSavingProduct",
            "label": "apys",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/WQSavingProduct.sol:48"
          },
          {
            "contract": "WQSavingProduct",
            "label": "wallets",
            "type": "t_mapping(t_address,t_struct(DepositWallet)13067_storage)",
            "src": "contracts/WQSavingProduct.sol:51"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(DepositWallet)13067_storage)": {
            "label": "mapping(address => struct WQSavingProduct.DepositWallet)"
          },
          "t_struct(DepositWallet)13067_storage": {
            "label": "struct WQSavingProduct.DepositWallet",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "rewardDistributed",
                "type": "t_uint256"
              },
              {
                "label": "unlockDate",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "53bbe0bfc91cdfbddc37bff8150b79d1bcce2c2096319492acb3c8dc99296fcc": {
      "address": "0xcA2457CFDD22C6f6380f31fAdc00b363b6D0a016",
      "txHash": "0xbdf2966d045eb8fc768b1f3e52724ce545fadb7a0c0188e51dccc8d56e5b5c7c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQLending",
            "label": "contributed",
            "type": "t_uint256",
            "src": "contracts/WQLending.sol:34"
          },
          {
            "contract": "WQLending",
            "label": "rewardsPerContributed",
            "type": "t_uint256",
            "src": "contracts/WQLending.sol:35"
          },
          {
            "contract": "WQLending",
            "label": "rewardsProduced",
            "type": "t_uint256",
            "src": "contracts/WQLending.sol:36"
          },
          {
            "contract": "WQLending",
            "label": "rewardsDistributed",
            "type": "t_uint256",
            "src": "contracts/WQLending.sol:37"
          },
          {
            "contract": "WQLending",
            "label": "borrowed",
            "type": "t_uint256",
            "src": "contracts/WQLending.sol:38"
          },
          {
            "contract": "WQLending",
            "label": "apy",
            "type": "t_uint256",
            "src": "contracts/WQLending.sol:39"
          },
          {
            "contract": "WQLending",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WQLending.sol:40"
          },
          {
            "contract": "WQLending",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/WQLending.sol:43"
          },
          {
            "contract": "WQLending",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/WQLending.sol:44"
          },
          {
            "contract": "WQLending",
            "label": "wallets",
            "type": "t_mapping(t_address,t_struct(DepositWallet)10515_storage)",
            "src": "contracts/WQLending.sol:47"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(DepositWallet)10515_storage)": {
            "label": "mapping(address => struct WQLending.DepositWallet)"
          },
          "t_struct(DepositWallet)10515_storage": {
            "label": "struct WQLending.DepositWallet",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "rewardDistributed",
                "type": "t_uint256"
              },
              {
                "label": "unlockDate",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e42860d358698a5f0ee3d44c983fab034581cb6b94a020988b7a8cf16726e790": {
      "address": "0x9Cd2dc727c440B3c5B70a81FC3B91733229C4abC",
      "txHash": "0x7ebd2420ab2ddfad59e2c38db2b61d49e312a2175e7595a6168770cb858e627f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQBorrowing",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)12038",
            "src": "contracts/WQBorrowing.sol:35"
          },
          {
            "contract": "WQBorrowing",
            "label": "fixedRate",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:36"
          },
          {
            "contract": "WQBorrowing",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WQBorrowing.sol:37"
          },
          {
            "contract": "WQBorrowing",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/WQBorrowing.sol:40"
          },
          {
            "contract": "WQBorrowing",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:41"
          },
          {
            "contract": "WQBorrowing",
            "label": "apys",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/WQBorrowing.sol:44"
          },
          {
            "contract": "WQBorrowing",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_contract(IERC20Upgradeable)1861)",
            "src": "contracts/WQBorrowing.sol:46"
          },
          {
            "contract": "WQBorrowing",
            "label": "borrowers",
            "type": "t_mapping(t_address,t_struct(BorrowInfo)7164_storage)",
            "src": "contracts/WQBorrowing.sol:49"
          },
          {
            "contract": "WQBorrowing",
            "label": "funds",
            "type": "t_array(t_contract(WQFundInterface)10461)dyn_storage",
            "src": "contracts/WQBorrowing.sol:52"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)12038": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_contract(IERC20Upgradeable)1861)": {
            "label": "mapping(string => contract IERC20Upgradeable)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_struct(BorrowInfo)7164_storage)": {
            "label": "mapping(address => struct WQBorrowing.BorrowInfo)"
          },
          "t_struct(BorrowInfo)7164_storage": {
            "label": "struct WQBorrowing.BorrowInfo",
            "members": [
              {
                "label": "collateral",
                "type": "t_uint256"
              },
              {
                "label": "credit",
                "type": "t_uint256"
              },
              {
                "label": "borrowedAt",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "apy",
                "type": "t_uint256"
              },
              {
                "label": "fund",
                "type": "t_contract(WQFundInterface)10461"
              },
              {
                "label": "symbol",
                "type": "t_string_storage"
              }
            ]
          },
          "t_contract(WQFundInterface)10461": {
            "label": "contract WQFundInterface"
          },
          "t_array(t_contract(WQFundInterface)10461)dyn_storage": {
            "label": "contract WQFundInterface[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "434bc7499e5ba51e7910ae07c966180e63e3d55ea056add2393ec9b0ca3ea93d": {
      "address": "0x7a902ddf38652198837274717Be421e10C46456D",
      "txHash": "0x0059537cdab592c9dc733782a968038e185e162dfa77c34bb151a3ef6f2a3048",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQPromotion",
            "label": "factory",
            "type": "t_contract(WorkQuestFactoryInterface)22636",
            "src": "contracts/WQPromotion.sol:30"
          },
          {
            "contract": "WQPromotion",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WQPromotion.sol:31"
          },
          {
            "contract": "WQPromotion",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/WQPromotion.sol:32"
          },
          {
            "contract": "WQPromotion",
            "label": "questTariff",
            "type": "t_mapping(t_enum(PaidTariff)15812,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/WQPromotion.sol:33"
          },
          {
            "contract": "WQPromotion",
            "label": "usersTariff",
            "type": "t_mapping(t_enum(PaidTariff)15812,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/WQPromotion.sol:34"
          }
        ],
        "types": {
          "t_contract(WorkQuestFactoryInterface)22636": {
            "label": "contract WorkQuestFactoryInterface"
          },
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_enum(PaidTariff)15812,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(enum WQPromotion.PaidTariff => mapping(uint256 => uint256))"
          },
          "t_enum(PaidTariff)15812": {
            "label": "enum WQPromotion.PaidTariff",
            "members": [
              "GoldPlus",
              "Gold",
              "Silver",
              "Bronze"
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "57aac9ee6a60330cb5e6cce8a4dd4e35455b0c48e02ccc10bc2b91a5b051017b": {
      "address": "0xC4227f3f5Dc65323ca9e44cb24389077d32b9aB4",
      "txHash": "0xdb0e17dab988be597e656ca22221d527c71bacf74e489978c6ae2259d055511d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQRouter",
            "label": "oracle",
            "type": "t_contract(WQPriceOracle)21572",
            "src": "contracts/stablecoin/WQRouter.sol:56"
          },
          {
            "contract": "WQRouter",
            "label": "wusd",
            "type": "t_contract(WQBridgeTokenInterface)9423",
            "src": "contracts/stablecoin/WQRouter.sol:57"
          },
          {
            "contract": "WQRouter",
            "label": "surplusAuction",
            "type": "t_contract(WQSurplusAuction)24476",
            "src": "contracts/stablecoin/WQRouter.sol:58"
          },
          {
            "contract": "WQRouter",
            "label": "debtAuction",
            "type": "t_contract(WQDebtAuction)21125",
            "src": "contracts/stablecoin/WQRouter.sol:59"
          },
          {
            "contract": "WQRouter",
            "label": "fixedRate",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:64"
          },
          {
            "contract": "WQRouter",
            "label": "annualInterestRate",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:65"
          },
          {
            "contract": "WQRouter",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/stablecoin/WQRouter.sol:66"
          },
          {
            "contract": "WQRouter",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)21650_storage)",
            "src": "contracts/stablecoin/WQRouter.sol:68"
          },
          {
            "contract": "WQRouter",
            "label": "collaterals",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(UserCollateral)21636_storage))",
            "src": "contracts/stablecoin/WQRouter.sol:69"
          }
        ],
        "types": {
          "t_contract(WQPriceOracle)21572": {
            "label": "contract WQPriceOracle"
          },
          "t_contract(WQBridgeTokenInterface)9423": {
            "label": "contract WQBridgeTokenInterface"
          },
          "t_contract(WQSurplusAuction)24476": {
            "label": "contract WQSurplusAuction"
          },
          "t_contract(WQDebtAuction)21125": {
            "label": "contract WQDebtAuction"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)21650_storage)": {
            "label": "mapping(string => struct WQRouter.TokenSettings)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(TokenSettings)21650_storage": {
            "label": "struct WQRouter.TokenSettings",
            "members": [
              {
                "label": "totalCollateral",
                "type": "t_uint256"
              },
              {
                "label": "totalDebt",
                "type": "t_uint256"
              },
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "collateralAuction",
                "type": "t_contract(WQCollateralAuction)20368"
              },
              {
                "label": "minRatio",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              }
            ]
          },
          "t_contract(WQCollateralAuction)20368": {
            "label": "contract WQCollateralAuction"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(UserCollateral)21636_storage))": {
            "label": "mapping(string => mapping(address => struct WQRouter.UserCollateral))"
          },
          "t_mapping(t_address,t_struct(UserCollateral)21636_storage)": {
            "label": "mapping(address => struct WQRouter.UserCollateral)"
          },
          "t_struct(UserCollateral)21636_storage": {
            "label": "struct WQRouter.UserCollateral",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "debtAmount",
                "type": "t_uint256"
              },
              {
                "label": "vault",
                "type": "t_contract(WQRouterVault)23711"
              },
              {
                "label": "lotHashIndexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "lots",
                "type": "t_array(t_struct(UserLot)21620_storage)dyn_storage"
              }
            ]
          },
          "t_contract(WQRouterVault)23711": {
            "label": "contract WQRouterVault"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_struct(UserLot)21620_storage)dyn_storage": {
            "label": "struct WQRouter.UserLot[]"
          },
          "t_struct(UserLot)21620_storage": {
            "label": "struct WQRouter.UserLot",
            "members": [
              {
                "label": "priceIndex",
                "type": "t_uint256"
              },
              {
                "label": "index",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "37a61baa13e0ca48bd6b6b7c25cb84b77eb30f4d9f71a5606a0073dfbb5756d0": {
      "address": "0x8ae983BFd3a97cB18Dc65a1299771a2a3F9B8547",
      "txHash": "0xe750c0f948d2444bd25090c6d0c75d132d9136c25de853164b76d72071b31cab",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "oracle",
            "type": "t_contract(WQPriceOracle)21572",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:47"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "router",
            "type": "t_contract(WQRouterInterface)23618",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:49"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "token",
            "type": "t_contract(IERC20MetadataUpgradeable)1946",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:51"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "liquidateThreshold",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:54"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "upperBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:56"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "lowerBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:58"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "auctionDuration",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:60"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "priceIndexStep",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:62"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "totalAuctioned",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:65"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "lots",
            "type": "t_mapping(t_uint256,t_array(t_struct(LotInfo)18985_storage)dyn_storage)",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:67"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "priceIndexes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:69"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "prices",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:71"
          }
        ],
        "types": {
          "t_contract(WQPriceOracle)21572": {
            "label": "contract WQPriceOracle"
          },
          "t_contract(WQRouterInterface)23618": {
            "label": "contract WQRouterInterface"
          },
          "t_contract(IERC20MetadataUpgradeable)1946": {
            "label": "contract IERC20MetadataUpgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_array(t_struct(LotInfo)18985_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct WQCollateralAuction.LotInfo[])"
          },
          "t_array(t_struct(LotInfo)18985_storage)dyn_storage": {
            "label": "struct WQCollateralAuction.LotInfo[]"
          },
          "t_struct(LotInfo)18985_storage": {
            "label": "struct WQCollateralAuction.LotInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "ratio",
                "type": "t_uint256"
              },
              {
                "label": "created",
                "type": "t_uint256"
              },
              {
                "label": "buyer",
                "type": "t_address"
              },
              {
                "label": "saleAmount",
                "type": "t_uint256"
              },
              {
                "label": "endCost",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(LotStatus)18963"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LotStatus)18963": {
            "label": "enum WQCollateralAuction.LotStatus",
            "members": [
              "Unknown",
              "New",
              "Auctioned",
              "Liquidated"
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "452ded56e04b953cdfb8b86c7537b66705e29d4928853ee47852effd4aef51c7": {
      "address": "0x0725dcA4C146F641Abf630828CC65ae8CC3Bb8Dd",
      "txHash": "0x7d4011ca092109b838aef861a007b91de456e711c68c2f38e815b1a005cd19f6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQSurplusAuction",
            "label": "oracle",
            "type": "t_contract(WQPriceOracle)21572",
            "src": "contracts/stablecoin/WQSurplusAuction.sol:36"
          },
          {
            "contract": "WQSurplusAuction",
            "label": "router",
            "type": "t_contract(WQRouterInterface)23618",
            "src": "contracts/stablecoin/WQSurplusAuction.sol:38"
          },
          {
            "contract": "WQSurplusAuction",
            "label": "auctionDuration",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQSurplusAuction.sol:41"
          },
          {
            "contract": "WQSurplusAuction",
            "label": "upperBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQSurplusAuction.sol:43"
          },
          {
            "contract": "WQSurplusAuction",
            "label": "lowerBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQSurplusAuction.sol:45"
          },
          {
            "contract": "WQSurplusAuction",
            "label": "maxLotAmountFactor",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQSurplusAuction.sol:47"
          },
          {
            "contract": "WQSurplusAuction",
            "label": "totalAuctioned",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQSurplusAuction.sol:49"
          },
          {
            "contract": "WQSurplusAuction",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts/stablecoin/WQSurplusAuction.sol:51"
          },
          {
            "contract": "WQSurplusAuction",
            "label": "lots",
            "type": "t_mapping(t_uint256,t_struct(LotInfo)23755_storage)",
            "src": "contracts/stablecoin/WQSurplusAuction.sol:54"
          },
          {
            "contract": "WQSurplusAuction",
            "label": "amounts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/stablecoin/WQSurplusAuction.sol:55"
          }
        ],
        "types": {
          "t_contract(WQPriceOracle)21572": {
            "label": "contract WQPriceOracle"
          },
          "t_contract(WQRouterInterface)23618": {
            "label": "contract WQRouterInterface"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(LotInfo)23755_storage)": {
            "label": "mapping(uint256 => struct WQSurplusAuction.LotInfo)"
          },
          "t_struct(LotInfo)23755_storage": {
            "label": "struct WQSurplusAuction.LotInfo",
            "members": [
              {
                "label": "index",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "buyer",
                "type": "t_address_payable"
              },
              {
                "label": "status",
                "type": "t_enum(LotStatus)23741"
              },
              {
                "label": "symbol",
                "type": "t_string_storage"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_enum(LotStatus)23741": {
            "label": "enum WQSurplusAuction.LotStatus",
            "members": [
              "Unknown",
              "Auctioned",
              "Selled"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "eb1a4a837ecbda37f477c817c906fa579696570d372b3b8e75f97722b76db617": {
      "address": "0xF9bA998325d0dA7A3885EF5E24D5a56B0efBb29a",
      "txHash": "0x2653bda44888acb781503a522abcb780d9524eda9446146dc6c7e61463982b13",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQDebtAuction",
            "label": "oracle",
            "type": "t_contract(WQPriceOracle)21578",
            "src": "contracts/stablecoin/WQDebtAuction.sol:39"
          },
          {
            "contract": "WQDebtAuction",
            "label": "router",
            "type": "t_contract(WQRouterInterface)23624",
            "src": "contracts/stablecoin/WQDebtAuction.sol:41"
          },
          {
            "contract": "WQDebtAuction",
            "label": "auctionDuration",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQDebtAuction.sol:44"
          },
          {
            "contract": "WQDebtAuction",
            "label": "upperBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQDebtAuction.sol:46"
          },
          {
            "contract": "WQDebtAuction",
            "label": "lowerBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQDebtAuction.sol:48"
          },
          {
            "contract": "WQDebtAuction",
            "label": "maxLotAmountFactor",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQDebtAuction.sol:50"
          },
          {
            "contract": "WQDebtAuction",
            "label": "totalAuctioned",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQDebtAuction.sol:53"
          },
          {
            "contract": "WQDebtAuction",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts/stablecoin/WQDebtAuction.sol:55"
          },
          {
            "contract": "WQDebtAuction",
            "label": "lots",
            "type": "t_mapping(t_uint256,t_struct(LotInfo)20416_storage)",
            "src": "contracts/stablecoin/WQDebtAuction.sol:58"
          },
          {
            "contract": "WQDebtAuction",
            "label": "amounts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/stablecoin/WQDebtAuction.sol:59"
          }
        ],
        "types": {
          "t_contract(WQPriceOracle)21578": {
            "label": "contract WQPriceOracle"
          },
          "t_contract(WQRouterInterface)23624": {
            "label": "contract WQRouterInterface"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(LotInfo)20416_storage)": {
            "label": "mapping(uint256 => struct WQDebtAuction.LotInfo)"
          },
          "t_struct(LotInfo)20416_storage": {
            "label": "struct WQDebtAuction.LotInfo",
            "members": [
              {
                "label": "index",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "buyer",
                "type": "t_address_payable"
              },
              {
                "label": "status",
                "type": "t_enum(LotStatus)20402"
              },
              {
                "label": "symbol",
                "type": "t_string_storage"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_enum(LotStatus)20402": {
            "label": "enum WQDebtAuction.LotStatus",
            "members": [
              "Unknown",
              "Auctioned",
              "Selled"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "d90ca7aae0262f4f0a3b9893ef188b6b23b129d6deb818bbf6b7c9fd8c949a18": {
      "address": "0xFa77090b111De491d92E7cF67716e5DfE02E8688",
      "txHash": "0x7bde0d297f80c3aa9ef3bad2d20d0e5182e9e1269d217169546f1c2fc7197a8a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "feeEmployer",
            "type": "t_uint256",
            "src": "contracts/WorkQuestFactory.sol:29"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "feeWorker",
            "type": "t_uint256",
            "src": "contracts/WorkQuestFactory.sol:30"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "feeTx",
            "type": "t_uint256",
            "src": "contracts/WorkQuestFactory.sol:31"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "feeReceiver",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:34"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "pensionFund",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:37"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "referral",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:40"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WorkQuestFactory.sol:43"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "workquests",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/WorkQuestFactory.sol:46"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "workquestValid",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/WorkQuestFactory.sol:49"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "d9f54968bdeec6515409e61ab5e7402712e5f7a7b25849c3a7e4e14f53072b47": {
      "address": "0xc79c350221B99A1bB7Cbc9D17ef6F9992eF00f39",
      "txHash": "0x0261d215297dcbe2a44de30732ae0aeafb100e4ca93a41738f7283df01099d41",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQStakingWUSD",
            "label": "token",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WQStakingWUSD.sol:47"
          },
          {
            "contract": "WQStakingWUSD",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingWUSD.sol:49"
          },
          {
            "contract": "WQStakingWUSD",
            "label": "rewardTotal",
            "type": "t_uint256",
            "src": "contracts/WQStakingWUSD.sol:51"
          },
          {
            "contract": "WQStakingWUSD",
            "label": "distributionTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingWUSD.sol:53"
          },
          {
            "contract": "WQStakingWUSD",
            "label": "stakePeriod",
            "type": "t_uint256",
            "src": "contracts/WQStakingWUSD.sol:55"
          },
          {
            "contract": "WQStakingWUSD",
            "label": "claimPeriod",
            "type": "t_uint256",
            "src": "contracts/WQStakingWUSD.sol:57"
          },
          {
            "contract": "WQStakingWUSD",
            "label": "minStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingWUSD.sol:59"
          },
          {
            "contract": "WQStakingWUSD",
            "label": "maxStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingWUSD.sol:61"
          },
          {
            "contract": "WQStakingWUSD",
            "label": "tokensPerStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingWUSD.sol:63"
          },
          {
            "contract": "WQStakingWUSD",
            "label": "rewardProduced",
            "type": "t_uint256",
            "src": "contracts/WQStakingWUSD.sol:64"
          },
          {
            "contract": "WQStakingWUSD",
            "label": "earlierProduced",
            "type": "t_uint256",
            "src": "contracts/WQStakingWUSD.sol:65"
          },
          {
            "contract": "WQStakingWUSD",
            "label": "producedTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingWUSD.sol:66"
          },
          {
            "contract": "WQStakingWUSD",
            "label": "totalStaked",
            "type": "t_uint256",
            "src": "contracts/WQStakingWUSD.sol:67"
          },
          {
            "contract": "WQStakingWUSD",
            "label": "totalDistributed",
            "type": "t_uint256",
            "src": "contracts/WQStakingWUSD.sol:68"
          },
          {
            "contract": "WQStakingWUSD",
            "label": "stakes",
            "type": "t_mapping(t_address,t_struct(Staker)15359_storage)",
            "src": "contracts/WQStakingWUSD.sol:71"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Staker)15359_storage)": {
            "label": "mapping(address => struct WQStakingWUSD.Staker)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Staker)15359_storage": {
            "label": "struct WQStakingWUSD.Staker",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "distributed",
                "type": "t_uint256"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256"
              },
              {
                "label": "claimedAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "60d5458c4c6c49d81653efdf120972a0d8e8ca337c7827aec25d96586a7e090f": {
      "address": "0x5679d42697ba7B42A7e78B72A83477623460f11A",
      "txHash": "0x2b2920a11c831b80849a99ca4cc7afca6b1e901bba47754fffca2e4b2a54c2bc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQStakingWQT",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingWQT.sol:47"
          },
          {
            "contract": "WQStakingWQT",
            "label": "rewardTotal",
            "type": "t_uint256",
            "src": "contracts/WQStakingWQT.sol:49"
          },
          {
            "contract": "WQStakingWQT",
            "label": "distributionTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingWQT.sol:51"
          },
          {
            "contract": "WQStakingWQT",
            "label": "stakePeriod",
            "type": "t_uint256",
            "src": "contracts/WQStakingWQT.sol:53"
          },
          {
            "contract": "WQStakingWQT",
            "label": "claimPeriod",
            "type": "t_uint256",
            "src": "contracts/WQStakingWQT.sol:55"
          },
          {
            "contract": "WQStakingWQT",
            "label": "minStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingWQT.sol:57"
          },
          {
            "contract": "WQStakingWQT",
            "label": "maxStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingWQT.sol:59"
          },
          {
            "contract": "WQStakingWQT",
            "label": "tokensPerStake",
            "type": "t_uint256",
            "src": "contracts/WQStakingWQT.sol:61"
          },
          {
            "contract": "WQStakingWQT",
            "label": "rewardProduced",
            "type": "t_uint256",
            "src": "contracts/WQStakingWQT.sol:62"
          },
          {
            "contract": "WQStakingWQT",
            "label": "earlierProduced",
            "type": "t_uint256",
            "src": "contracts/WQStakingWQT.sol:63"
          },
          {
            "contract": "WQStakingWQT",
            "label": "producedTime",
            "type": "t_uint256",
            "src": "contracts/WQStakingWQT.sol:64"
          },
          {
            "contract": "WQStakingWQT",
            "label": "totalStaked",
            "type": "t_uint256",
            "src": "contracts/WQStakingWQT.sol:65"
          },
          {
            "contract": "WQStakingWQT",
            "label": "totalDistributed",
            "type": "t_uint256",
            "src": "contracts/WQStakingWQT.sol:66"
          },
          {
            "contract": "WQStakingWQT",
            "label": "stakes",
            "type": "t_mapping(t_address,t_struct(Staker)14220_storage)",
            "src": "contracts/WQStakingWQT.sol:68"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Staker)14220_storage)": {
            "label": "mapping(address => struct WQStakingWQT.Staker)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Staker)14220_storage": {
            "label": "struct WQStakingWQT.Staker",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "distributed",
                "type": "t_uint256"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256"
              },
              {
                "label": "claimedAt",
                "type": "t_uint256"
              },
              {
                "label": "unstakeTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5475f6204c540d01f4ba18b4507ff96d7e58de38611cb37f49e015a8ccf059d0": {
      "address": "0x573A52CA3737888c689D697A2287d177Fc946Bc1",
      "txHash": "0xef942a76a8a38c4cf786a937a519797387da9817601f56945663c7a189676656",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "oracle",
            "type": "t_contract(WQPriceOracle)25348",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:46"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "router",
            "type": "t_contract(WQRouterInterface)27474",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:48"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "token",
            "type": "t_contract(IERC20MetadataUpgradeable)1946",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:50"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "liquidateThreshold",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:53"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "upperBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:55"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "lowerBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:57"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "auctionDuration",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:59"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "priceIndexStep",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:61"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "totalAuctioned",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:64"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "lots",
            "type": "t_mapping(t_uint256,t_array(t_struct(LotInfo)22714_storage)dyn_storage)",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:66"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "priceIndexes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:68"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "prices",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:70"
          }
        ],
        "types": {
          "t_contract(WQPriceOracle)25348": {
            "label": "contract WQPriceOracle"
          },
          "t_contract(WQRouterInterface)27474": {
            "label": "contract WQRouterInterface"
          },
          "t_contract(IERC20MetadataUpgradeable)1946": {
            "label": "contract IERC20MetadataUpgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_array(t_struct(LotInfo)22714_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct WQCollateralAuction.LotInfo[])"
          },
          "t_array(t_struct(LotInfo)22714_storage)dyn_storage": {
            "label": "struct WQCollateralAuction.LotInfo[]"
          },
          "t_struct(LotInfo)22714_storage": {
            "label": "struct WQCollateralAuction.LotInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "ratio",
                "type": "t_uint256"
              },
              {
                "label": "created",
                "type": "t_uint256"
              },
              {
                "label": "buyer",
                "type": "t_address"
              },
              {
                "label": "saleAmount",
                "type": "t_uint256"
              },
              {
                "label": "endCost",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(LotStatus)22692"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LotStatus)22692": {
            "label": "enum WQCollateralAuction.LotStatus",
            "members": [
              "Unknown",
              "New",
              "Auctioned",
              "Liquidated"
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0f61f97c9a6f116bc55b5a7130015bb2a70bf74ce6fadb43833bc48d05159a16": {
      "address": "0x6EBa0b9606C33140303661525b1105406d166451",
      "txHash": "0xdf7c00aecd0cae49b156a4bb4b5ae1fc7bc8050fc25708a02d176e43fa43d105",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQDebtAuction",
            "label": "oracle",
            "type": "t_contract(WQPriceOracle)22092",
            "src": "contracts/stablecoin/WQDebtAuction.sol:37"
          },
          {
            "contract": "WQDebtAuction",
            "label": "router",
            "type": "t_contract(WQRouterInterface)24220",
            "src": "contracts/stablecoin/WQDebtAuction.sol:39"
          },
          {
            "contract": "WQDebtAuction",
            "label": "auctionDuration",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQDebtAuction.sol:42"
          },
          {
            "contract": "WQDebtAuction",
            "label": "upperBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQDebtAuction.sol:44"
          },
          {
            "contract": "WQDebtAuction",
            "label": "lowerBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQDebtAuction.sol:46"
          },
          {
            "contract": "WQDebtAuction",
            "label": "maxLotAmountFactor",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQDebtAuction.sol:48"
          },
          {
            "contract": "WQDebtAuction",
            "label": "totalAuctioned",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQDebtAuction.sol:51"
          },
          {
            "contract": "WQDebtAuction",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_contract(IERC20MetadataUpgradeable)1946)",
            "src": "contracts/stablecoin/WQDebtAuction.sol:52"
          },
          {
            "contract": "WQDebtAuction",
            "label": "lots",
            "type": "t_mapping(t_uint256,t_struct(LotInfo)20912_storage)",
            "src": "contracts/stablecoin/WQDebtAuction.sol:55"
          },
          {
            "contract": "WQDebtAuction",
            "label": "amounts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/stablecoin/WQDebtAuction.sol:56"
          }
        ],
        "types": {
          "t_contract(WQPriceOracle)22092": {
            "label": "contract WQPriceOracle"
          },
          "t_contract(WQRouterInterface)24220": {
            "label": "contract WQRouterInterface"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_contract(IERC20MetadataUpgradeable)1946)": {
            "label": "mapping(string => contract IERC20MetadataUpgradeable)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IERC20MetadataUpgradeable)1946": {
            "label": "contract IERC20MetadataUpgradeable"
          },
          "t_mapping(t_uint256,t_struct(LotInfo)20912_storage)": {
            "label": "mapping(uint256 => struct WQDebtAuction.LotInfo)"
          },
          "t_struct(LotInfo)20912_storage": {
            "label": "struct WQDebtAuction.LotInfo",
            "members": [
              {
                "label": "index",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "buyer",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(LotStatus)20898"
              },
              {
                "label": "symbol",
                "type": "t_string_storage"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LotStatus)20898": {
            "label": "enum WQDebtAuction.LotStatus",
            "members": [
              "Unknown",
              "Auctioned",
              "Selled"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "34a897ee485ce11a73df24e1d9941f661bbe9a780f26fe4134a203de977397da": {
      "address": "0x75E1D74BFDE0c23D425acBf32931A87910719E7d",
      "txHash": "0x64ff923b27ffb128b273f5dcb3908dd258b4074a37e0d1679d9f411d8f80986b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQSurplusAuction",
            "label": "oracle",
            "type": "t_contract(WQPriceOracle)22092",
            "src": "contracts/stablecoin/WQSurplusAuction.sol:36"
          },
          {
            "contract": "WQSurplusAuction",
            "label": "router",
            "type": "t_contract(WQRouterInterface)24220",
            "src": "contracts/stablecoin/WQSurplusAuction.sol:38"
          },
          {
            "contract": "WQSurplusAuction",
            "label": "auctionDuration",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQSurplusAuction.sol:41"
          },
          {
            "contract": "WQSurplusAuction",
            "label": "upperBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQSurplusAuction.sol:43"
          },
          {
            "contract": "WQSurplusAuction",
            "label": "lowerBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQSurplusAuction.sol:45"
          },
          {
            "contract": "WQSurplusAuction",
            "label": "maxLotAmountFactor",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQSurplusAuction.sol:47"
          },
          {
            "contract": "WQSurplusAuction",
            "label": "totalAuctioned",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQSurplusAuction.sol:49"
          },
          {
            "contract": "WQSurplusAuction",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_contract(IERC20MetadataUpgradeable)1946)",
            "src": "contracts/stablecoin/WQSurplusAuction.sol:51"
          },
          {
            "contract": "WQSurplusAuction",
            "label": "lots",
            "type": "t_mapping(t_uint256,t_struct(LotInfo)24358_storage)",
            "src": "contracts/stablecoin/WQSurplusAuction.sol:54"
          },
          {
            "contract": "WQSurplusAuction",
            "label": "amounts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/stablecoin/WQSurplusAuction.sol:55"
          }
        ],
        "types": {
          "t_contract(WQPriceOracle)22092": {
            "label": "contract WQPriceOracle"
          },
          "t_contract(WQRouterInterface)24220": {
            "label": "contract WQRouterInterface"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_contract(IERC20MetadataUpgradeable)1946)": {
            "label": "mapping(string => contract IERC20MetadataUpgradeable)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IERC20MetadataUpgradeable)1946": {
            "label": "contract IERC20MetadataUpgradeable"
          },
          "t_mapping(t_uint256,t_struct(LotInfo)24358_storage)": {
            "label": "mapping(uint256 => struct WQSurplusAuction.LotInfo)"
          },
          "t_struct(LotInfo)24358_storage": {
            "label": "struct WQSurplusAuction.LotInfo",
            "members": [
              {
                "label": "index",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "buyer",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(LotStatus)24344"
              },
              {
                "label": "symbol",
                "type": "t_string_storage"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LotStatus)24344": {
            "label": "enum WQSurplusAuction.LotStatus",
            "members": [
              "Unknown",
              "Auctioned",
              "Selled"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "482a9cbca784a18d3427a29a1080bc570d6ef056798c560b088e57fa910ed987": {
      "address": "0x36b51dD05a072823b1734703330e02139752Cab1",
      "txHash": "0x5b71514f1bd444b4c7c329ced7556bbb1ac831b4f37b2cee39ed85e931573822",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQRouter",
            "label": "oracle",
            "type": "t_contract(WQPriceOracle)25333",
            "src": "contracts/stablecoin/WQRouter.sol:57"
          },
          {
            "contract": "WQRouter",
            "label": "wusd",
            "type": "t_contract(WQBridgeTokenInterface)10353",
            "src": "contracts/stablecoin/WQRouter.sol:58"
          },
          {
            "contract": "WQRouter",
            "label": "surplusAuction",
            "type": "t_contract(WQSurplusAuction)28336",
            "src": "contracts/stablecoin/WQRouter.sol:59"
          },
          {
            "contract": "WQRouter",
            "label": "debtAuction",
            "type": "t_contract(WQDebtAuction)24886",
            "src": "contracts/stablecoin/WQRouter.sol:60"
          },
          {
            "contract": "WQRouter",
            "label": "fixedRate",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:65"
          },
          {
            "contract": "WQRouter",
            "label": "annualInterestRate",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:66"
          },
          {
            "contract": "WQRouter",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/stablecoin/WQRouter.sol:67"
          },
          {
            "contract": "WQRouter",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)25412_storage)",
            "src": "contracts/stablecoin/WQRouter.sol:69"
          },
          {
            "contract": "WQRouter",
            "label": "collaterals",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(UserCollateral)25398_storage))",
            "src": "contracts/stablecoin/WQRouter.sol:70"
          }
        ],
        "types": {
          "t_contract(WQPriceOracle)25333": {
            "label": "contract WQPriceOracle"
          },
          "t_contract(WQBridgeTokenInterface)10353": {
            "label": "contract WQBridgeTokenInterface"
          },
          "t_contract(WQSurplusAuction)28336": {
            "label": "contract WQSurplusAuction"
          },
          "t_contract(WQDebtAuction)24886": {
            "label": "contract WQDebtAuction"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)25412_storage)": {
            "label": "mapping(string => struct WQRouter.TokenSettings)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(TokenSettings)25412_storage": {
            "label": "struct WQRouter.TokenSettings",
            "members": [
              {
                "label": "totalCollateral",
                "type": "t_uint256"
              },
              {
                "label": "totalDebt",
                "type": "t_uint256"
              },
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "collateralAuction",
                "type": "t_contract(WQCollateralAuction)24108"
              },
              {
                "label": "minRatio",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              }
            ]
          },
          "t_contract(WQCollateralAuction)24108": {
            "label": "contract WQCollateralAuction"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(UserCollateral)25398_storage))": {
            "label": "mapping(string => mapping(address => struct WQRouter.UserCollateral))"
          },
          "t_mapping(t_address,t_struct(UserCollateral)25398_storage)": {
            "label": "mapping(address => struct WQRouter.UserCollateral)"
          },
          "t_struct(UserCollateral)25398_storage": {
            "label": "struct WQRouter.UserCollateral",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "debtAmount",
                "type": "t_uint256"
              },
              {
                "label": "vault",
                "type": "t_contract(WQRouterVault)27555"
              },
              {
                "label": "lotHashIndexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "lots",
                "type": "t_array(t_struct(UserLot)25382_storage)dyn_storage"
              }
            ]
          },
          "t_contract(WQRouterVault)27555": {
            "label": "contract WQRouterVault"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_struct(UserLot)25382_storage)dyn_storage": {
            "label": "struct WQRouter.UserLot[]"
          },
          "t_struct(UserLot)25382_storage": {
            "label": "struct WQRouter.UserLot",
            "members": [
              {
                "label": "priceIndex",
                "type": "t_uint256"
              },
              {
                "label": "index",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "fe48ffb8d2e8fa0945f6ae88b09ece51387556cf94da30d455dbef1bd470a96c": {
      "address": "0x5aaCdFd09B2EeB818A28696977Bc8f160d205369",
      "txHash": "0x40a70308f14c6f590ae395c3276b710016426d873ae94d9de2ff4c461d24afe2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "feeEmployer",
            "type": "t_uint256",
            "src": "contracts/WorkQuestFactory.sol:29"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "feeWorker",
            "type": "t_uint256",
            "src": "contracts/WorkQuestFactory.sol:30"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "feeTx",
            "type": "t_uint256",
            "src": "contracts/WorkQuestFactory.sol:31"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "feeReceiver",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:34"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "pensionFund",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:37"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "referral",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:40"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WorkQuestFactory.sol:43"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "workquests",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/WorkQuestFactory.sol:46"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "workquestValid",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/WorkQuestFactory.sol:49"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "6f10f940ba31de6fbd7ff8b8cd55a76b4e6d346c34c1a25f1ff34cbe4f9d856e": {
      "address": "0xF3C2FEAadBC1afaCa5ABc71C42e15b5888E1a912",
      "txHash": "0xca22630b97bb0bc9c2952e2b4a0800800ecc7a29443ff2808c6f2627ce0e3bc5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQPensionFund",
            "label": "lockTime",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:37"
          },
          {
            "contract": "WQPensionFund",
            "label": "defaultFee",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:38"
          },
          {
            "contract": "WQPensionFund",
            "label": "contributed",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:39"
          },
          {
            "contract": "WQPensionFund",
            "label": "rewardsPerContributed",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:40"
          },
          {
            "contract": "WQPensionFund",
            "label": "rewardsProduced",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:41"
          },
          {
            "contract": "WQPensionFund",
            "label": "rewardsDistributed",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:42"
          },
          {
            "contract": "WQPensionFund",
            "label": "borrowed",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:43"
          },
          {
            "contract": "WQPensionFund",
            "label": "apy",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:44"
          },
          {
            "contract": "WQPensionFund",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WQPensionFund.sol:45"
          },
          {
            "contract": "WQPensionFund",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/WQPensionFund.sol:48"
          },
          {
            "contract": "WQPensionFund",
            "label": "feePerMonth",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:49"
          },
          {
            "contract": "WQPensionFund",
            "label": "feeWithdraw",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:50"
          },
          {
            "contract": "WQPensionFund",
            "label": "wallets",
            "type": "t_mapping(t_address,t_struct(PensionWallet)11627_storage)",
            "src": "contracts/WQPensionFund.sol:53"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(PensionWallet)11627_storage)": {
            "label": "mapping(address => struct WQPensionFund.PensionWallet)"
          },
          "t_struct(PensionWallet)11627_storage": {
            "label": "struct WQPensionFund.PensionWallet",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "unlockDate",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "rewardDistributed",
                "type": "t_uint256"
              },
              {
                "label": "serviceComission",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1239a20b6f7ec83471e348edec0442d6921a926a14bc1ed7ff87468ed55cf645": {
      "address": "0x95ed2359c8286f1Fb7A88A65613780cE753DbDA4",
      "txHash": "0xc8204bba7f2564fd73170ebdc3f95dfa92a6bcfd92db608a8bb43b1a085e2b5e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQSavingProduct",
            "label": "contributed",
            "type": "t_uint256",
            "src": "contracts/WQSavingProduct.sol:36"
          },
          {
            "contract": "WQSavingProduct",
            "label": "rewardsPerContributed",
            "type": "t_uint256",
            "src": "contracts/WQSavingProduct.sol:37"
          },
          {
            "contract": "WQSavingProduct",
            "label": "rewardsProduced",
            "type": "t_uint256",
            "src": "contracts/WQSavingProduct.sol:38"
          },
          {
            "contract": "WQSavingProduct",
            "label": "rewardsDistributed",
            "type": "t_uint256",
            "src": "contracts/WQSavingProduct.sol:39"
          },
          {
            "contract": "WQSavingProduct",
            "label": "borrowed",
            "type": "t_uint256",
            "src": "contracts/WQSavingProduct.sol:40"
          },
          {
            "contract": "WQSavingProduct",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WQSavingProduct.sol:41"
          },
          {
            "contract": "WQSavingProduct",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/WQSavingProduct.sol:44"
          },
          {
            "contract": "WQSavingProduct",
            "label": "feePerMonth",
            "type": "t_uint256",
            "src": "contracts/WQSavingProduct.sol:45"
          },
          {
            "contract": "WQSavingProduct",
            "label": "feeWithdraw",
            "type": "t_uint256",
            "src": "contracts/WQSavingProduct.sol:46"
          },
          {
            "contract": "WQSavingProduct",
            "label": "apys",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/WQSavingProduct.sol:49"
          },
          {
            "contract": "WQSavingProduct",
            "label": "wallets",
            "type": "t_mapping(t_address,t_struct(DepositWallet)13556_storage)",
            "src": "contracts/WQSavingProduct.sol:52"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(DepositWallet)13556_storage)": {
            "label": "mapping(address => struct WQSavingProduct.DepositWallet)"
          },
          "t_struct(DepositWallet)13556_storage": {
            "label": "struct WQSavingProduct.DepositWallet",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "rewardDistributed",
                "type": "t_uint256"
              },
              {
                "label": "unlockDate",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "serviceComission",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7391000a957df2a25555e37b06b59f4dfc5ac4d897e678178722efcccd1e93bb": {
      "address": "0xAB6EF411Ec38e4627936595661524105096e4D74",
      "txHash": "0xb3225cb96d94dac5bc9d3fdf967adf79578cde3294afbf5001d545e8a9af2ec7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQLending",
            "label": "contributed",
            "type": "t_uint256",
            "src": "contracts/WQLending.sol:34"
          },
          {
            "contract": "WQLending",
            "label": "rewardsPerContributed",
            "type": "t_uint256",
            "src": "contracts/WQLending.sol:35"
          },
          {
            "contract": "WQLending",
            "label": "rewardsProduced",
            "type": "t_uint256",
            "src": "contracts/WQLending.sol:36"
          },
          {
            "contract": "WQLending",
            "label": "rewardsDistributed",
            "type": "t_uint256",
            "src": "contracts/WQLending.sol:37"
          },
          {
            "contract": "WQLending",
            "label": "borrowed",
            "type": "t_uint256",
            "src": "contracts/WQLending.sol:38"
          },
          {
            "contract": "WQLending",
            "label": "apy",
            "type": "t_uint256",
            "src": "contracts/WQLending.sol:39"
          },
          {
            "contract": "WQLending",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WQLending.sol:40"
          },
          {
            "contract": "WQLending",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/WQLending.sol:43"
          },
          {
            "contract": "WQLending",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/WQLending.sol:44"
          },
          {
            "contract": "WQLending",
            "label": "wallets",
            "type": "t_mapping(t_address,t_struct(DepositWallet)10996_storage)",
            "src": "contracts/WQLending.sol:47"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(DepositWallet)10996_storage)": {
            "label": "mapping(address => struct WQLending.DepositWallet)"
          },
          "t_struct(DepositWallet)10996_storage": {
            "label": "struct WQLending.DepositWallet",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "rewardDistributed",
                "type": "t_uint256"
              },
              {
                "label": "unlockDate",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d9167b73185ac41e3a6e6504f33c4c136ba7a516f5f25718565e541436496211": {
      "address": "0x77c9d678A0146ac15caeEd1e3640E8867a76F0D0",
      "txHash": "0xff7822b7348bc4cecb16dafee2dc850e976869ba47e1b9a23b0f87c2a2d43021",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQPensionFund",
            "label": "lockTime",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:37"
          },
          {
            "contract": "WQPensionFund",
            "label": "defaultFee",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:38"
          },
          {
            "contract": "WQPensionFund",
            "label": "contributed",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:39"
          },
          {
            "contract": "WQPensionFund",
            "label": "rewardsPerContributed",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:40"
          },
          {
            "contract": "WQPensionFund",
            "label": "rewardsProduced",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:41"
          },
          {
            "contract": "WQPensionFund",
            "label": "rewardsDistributed",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:42"
          },
          {
            "contract": "WQPensionFund",
            "label": "borrowed",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:43"
          },
          {
            "contract": "WQPensionFund",
            "label": "apy",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:44"
          },
          {
            "contract": "WQPensionFund",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WQPensionFund.sol:45"
          },
          {
            "contract": "WQPensionFund",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/WQPensionFund.sol:48"
          },
          {
            "contract": "WQPensionFund",
            "label": "feePerMonth",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:49"
          },
          {
            "contract": "WQPensionFund",
            "label": "feeWithdraw",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:50"
          },
          {
            "contract": "WQPensionFund",
            "label": "wallets",
            "type": "t_mapping(t_address,t_struct(PensionWallet)11627_storage)",
            "src": "contracts/WQPensionFund.sol:53"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(PensionWallet)11627_storage)": {
            "label": "mapping(address => struct WQPensionFund.PensionWallet)"
          },
          "t_struct(PensionWallet)11627_storage": {
            "label": "struct WQPensionFund.PensionWallet",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "unlockDate",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "rewardDistributed",
                "type": "t_uint256"
              },
              {
                "label": "serviceComission",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "70a6baf5db1e83ddd932e69fd85b593bcf63ad9db30adeefb1b1addafca688c7": {
      "address": "0x1eF22A152B102F0F040EB9E2C0bFe3B156A1e0c5",
      "txHash": "0x3d1b636d34bc4360bc49b58352acd28a84cf9252f19742f4c09db89a1c106e12",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQDAOVoting",
            "label": "minimumQuorum",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:91"
          },
          {
            "contract": "WQDAOVoting",
            "label": "votingPeriod",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:94"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposalThreshold",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:97"
          },
          {
            "contract": "WQDAOVoting",
            "label": "voteThreshold",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:100"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposalCount",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:103"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposals",
            "type": "t_mapping(t_uint256,t_struct(Proposal)10064_storage)",
            "src": "contracts/WQDAOVoting.sol:106"
          },
          {
            "contract": "WQDAOVoting",
            "label": "_delegates",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/WQDAOVoting.sol:108"
          },
          {
            "contract": "WQDAOVoting",
            "label": "_checkpoints",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)10025_storage)dyn_storage)",
            "src": "contracts/WQDAOVoting.sol:110"
          },
          {
            "contract": "WQDAOVoting",
            "label": "_frozed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/WQDAOVoting.sol:112"
          },
          {
            "contract": "WQDAOVoting",
            "label": "_vaults",
            "type": "t_mapping(t_address,t_contract(WQDAOVault)9986)",
            "src": "contracts/WQDAOVoting.sol:114"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Proposal)10064_storage)": {
            "label": "mapping(uint256 => struct WQDAOVoting.Proposal)"
          },
          "t_struct(Proposal)10064_storage": {
            "label": "struct WQDAOVoting.Proposal",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "nonce",
                "type": "t_uint256"
              },
              {
                "label": "proposer",
                "type": "t_address"
              },
              {
                "label": "forVotes",
                "type": "t_uint256"
              },
              {
                "label": "againstVotes",
                "type": "t_uint256"
              },
              {
                "label": "numVoters",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "expireTime",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "active",
                "type": "t_bool"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              },
              {
                "label": "receipts",
                "type": "t_mapping(t_address,t_struct(Receipt)10032_storage)"
              },
              {
                "label": "succeded",
                "type": "t_bool"
              },
              {
                "label": "defeated",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_struct(Receipt)10032_storage)": {
            "label": "mapping(address => struct WQDAOVoting.Receipt)"
          },
          "t_struct(Receipt)10032_storage": {
            "label": "struct WQDAOVoting.Receipt",
            "members": [
              {
                "label": "hasVoted",
                "type": "t_bool"
              },
              {
                "label": "support",
                "type": "t_bool"
              },
              {
                "label": "votes",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)10025_storage)dyn_storage)": {
            "label": "mapping(address => struct WQDAOVoting.Checkpoint[])"
          },
          "t_array(t_struct(Checkpoint)10025_storage)dyn_storage": {
            "label": "struct WQDAOVoting.Checkpoint[]"
          },
          "t_struct(Checkpoint)10025_storage": {
            "label": "struct WQDAOVoting.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32"
              },
              {
                "label": "votes",
                "type": "t_uint224"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint224": {
            "label": "uint224"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_contract(WQDAOVault)9986)": {
            "label": "mapping(address => contract WQDAOVault)"
          },
          "t_contract(WQDAOVault)9986": {
            "label": "contract WQDAOVault"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "b946031fbfcf4e22880cf20ba9113fa32e3cfccd536fc29fb22c6fdd7b6abfac": {
      "address": "0x6C59513F839Ee6660299A754c93904E9585B349e",
      "txHash": "0xa4e60ff7bfdfacab5ebcb120f65c912f98d11f2d1ed8ac9c052812cbac7eb8a9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQDAOVoting",
            "label": "minimumQuorum",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:91"
          },
          {
            "contract": "WQDAOVoting",
            "label": "votingPeriod",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:94"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposalThreshold",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:97"
          },
          {
            "contract": "WQDAOVoting",
            "label": "voteThreshold",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:100"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposalCount",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:103"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposals",
            "type": "t_mapping(t_uint256,t_struct(Proposal)10064_storage)",
            "src": "contracts/WQDAOVoting.sol:106"
          },
          {
            "contract": "WQDAOVoting",
            "label": "_delegates",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/WQDAOVoting.sol:108"
          },
          {
            "contract": "WQDAOVoting",
            "label": "_checkpoints",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)10025_storage)dyn_storage)",
            "src": "contracts/WQDAOVoting.sol:110"
          },
          {
            "contract": "WQDAOVoting",
            "label": "_frozed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/WQDAOVoting.sol:112"
          },
          {
            "contract": "WQDAOVoting",
            "label": "_vaults",
            "type": "t_mapping(t_address,t_contract(WQDAOVault)9986)",
            "src": "contracts/WQDAOVoting.sol:114"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Proposal)10064_storage)": {
            "label": "mapping(uint256 => struct WQDAOVoting.Proposal)"
          },
          "t_struct(Proposal)10064_storage": {
            "label": "struct WQDAOVoting.Proposal",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "nonce",
                "type": "t_uint256"
              },
              {
                "label": "proposer",
                "type": "t_address"
              },
              {
                "label": "forVotes",
                "type": "t_uint256"
              },
              {
                "label": "againstVotes",
                "type": "t_uint256"
              },
              {
                "label": "numVoters",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "expireTime",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "active",
                "type": "t_bool"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              },
              {
                "label": "receipts",
                "type": "t_mapping(t_address,t_struct(Receipt)10032_storage)"
              },
              {
                "label": "succeded",
                "type": "t_bool"
              },
              {
                "label": "defeated",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_struct(Receipt)10032_storage)": {
            "label": "mapping(address => struct WQDAOVoting.Receipt)"
          },
          "t_struct(Receipt)10032_storage": {
            "label": "struct WQDAOVoting.Receipt",
            "members": [
              {
                "label": "hasVoted",
                "type": "t_bool"
              },
              {
                "label": "support",
                "type": "t_bool"
              },
              {
                "label": "votes",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)10025_storage)dyn_storage)": {
            "label": "mapping(address => struct WQDAOVoting.Checkpoint[])"
          },
          "t_array(t_struct(Checkpoint)10025_storage)dyn_storage": {
            "label": "struct WQDAOVoting.Checkpoint[]"
          },
          "t_struct(Checkpoint)10025_storage": {
            "label": "struct WQDAOVoting.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32"
              },
              {
                "label": "votes",
                "type": "t_uint224"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint224": {
            "label": "uint224"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_contract(WQDAOVault)9986)": {
            "label": "mapping(address => contract WQDAOVault)"
          },
          "t_contract(WQDAOVault)9986": {
            "label": "contract WQDAOVault"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "c012f2ecdb55e418d4878c85c3d845cacd3dbbef4a529e5050aad38afa8fdf48": {
      "address": "0xCDB21507c91615CbA869FE705FEC4991BEc9260A",
      "txHash": "0x593c69e10b0cc34be4c140850a7f8cfa9eceb246a157ee69f20c3888b929c50f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQReferral",
            "label": "referralBonus",
            "type": "t_uint256",
            "src": "contracts/WQReferral.sol:46"
          },
          {
            "contract": "WQReferral",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)13199",
            "src": "contracts/WQReferral.sol:48"
          },
          {
            "contract": "WQReferral",
            "label": "factory",
            "type": "t_contract(WorkQuestFactory)20067",
            "src": "contracts/WQReferral.sol:50"
          },
          {
            "contract": "WQReferral",
            "label": "earnedThreshold",
            "type": "t_uint256",
            "src": "contracts/WQReferral.sol:52"
          },
          {
            "contract": "WQReferral",
            "label": "referrals",
            "type": "t_mapping(t_address,t_struct(Account)13570_storage)",
            "src": "contracts/WQReferral.sol:54"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(WQPriceOracleInterface)13199": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_contract(WorkQuestFactory)20067": {
            "label": "contract WorkQuestFactory"
          },
          "t_mapping(t_address,t_struct(Account)13570_storage)": {
            "label": "mapping(address => struct WQReferral.Account)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Account)13570_storage": {
            "label": "struct WQReferral.Account",
            "members": [
              {
                "label": "affiliat",
                "type": "t_address"
              },
              {
                "label": "earnedAmount",
                "type": "t_uint256"
              },
              {
                "label": "rewardTotal",
                "type": "t_uint256"
              },
              {
                "label": "rewardPaid",
                "type": "t_uint256"
              },
              {
                "label": "referredCount",
                "type": "t_uint256"
              },
              {
                "label": "paid",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "98659d005fb128c3fc9fb0a642db74eb32321a7004692ff97fbef52baa487871": {
      "address": "0xDbD642f7B484D4b51cdb75218db9CC0Eb0576e8c",
      "txHash": "0x1d1cf1965760eb7667f49f86f116aed85e479a8227daf641c96b6a92f36983c8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQDAOVoting",
            "label": "minimumQuorum",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:91"
          },
          {
            "contract": "WQDAOVoting",
            "label": "votingPeriod",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:94"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposalThreshold",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:97"
          },
          {
            "contract": "WQDAOVoting",
            "label": "voteThreshold",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:100"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposalCount",
            "type": "t_uint256",
            "src": "contracts/WQDAOVoting.sol:103"
          },
          {
            "contract": "WQDAOVoting",
            "label": "proposals",
            "type": "t_mapping(t_uint256,t_struct(Proposal)10064_storage)",
            "src": "contracts/WQDAOVoting.sol:106"
          },
          {
            "contract": "WQDAOVoting",
            "label": "_delegates",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/WQDAOVoting.sol:108"
          },
          {
            "contract": "WQDAOVoting",
            "label": "_checkpoints",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)10025_storage)dyn_storage)",
            "src": "contracts/WQDAOVoting.sol:110"
          },
          {
            "contract": "WQDAOVoting",
            "label": "_frozed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/WQDAOVoting.sol:112"
          },
          {
            "contract": "WQDAOVoting",
            "label": "_vaults",
            "type": "t_mapping(t_address,t_contract(WQDAOVault)9986)",
            "src": "contracts/WQDAOVoting.sol:114"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Proposal)10064_storage)": {
            "label": "mapping(uint256 => struct WQDAOVoting.Proposal)"
          },
          "t_struct(Proposal)10064_storage": {
            "label": "struct WQDAOVoting.Proposal",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "nonce",
                "type": "t_uint256"
              },
              {
                "label": "proposer",
                "type": "t_address"
              },
              {
                "label": "forVotes",
                "type": "t_uint256"
              },
              {
                "label": "againstVotes",
                "type": "t_uint256"
              },
              {
                "label": "numVoters",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "expireTime",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "active",
                "type": "t_bool"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              },
              {
                "label": "receipts",
                "type": "t_mapping(t_address,t_struct(Receipt)10032_storage)"
              },
              {
                "label": "succeded",
                "type": "t_bool"
              },
              {
                "label": "defeated",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_struct(Receipt)10032_storage)": {
            "label": "mapping(address => struct WQDAOVoting.Receipt)"
          },
          "t_struct(Receipt)10032_storage": {
            "label": "struct WQDAOVoting.Receipt",
            "members": [
              {
                "label": "hasVoted",
                "type": "t_bool"
              },
              {
                "label": "support",
                "type": "t_bool"
              },
              {
                "label": "votes",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)10025_storage)dyn_storage)": {
            "label": "mapping(address => struct WQDAOVoting.Checkpoint[])"
          },
          "t_array(t_struct(Checkpoint)10025_storage)dyn_storage": {
            "label": "struct WQDAOVoting.Checkpoint[]"
          },
          "t_struct(Checkpoint)10025_storage": {
            "label": "struct WQDAOVoting.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32"
              },
              {
                "label": "votes",
                "type": "t_uint224"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint224": {
            "label": "uint224"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_contract(WQDAOVault)9986)": {
            "label": "mapping(address => contract WQDAOVault)"
          },
          "t_contract(WQDAOVault)9986": {
            "label": "contract WQDAOVault"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "f1ae3f2d0647811ad8f5f4188e0efe43b5b4d5607b088e9683d872f711cf87b1": {
      "address": "0x99c47b844d1E1C23E77E6327F8a01982471791C3",
      "txHash": "0x1b99a9ba14a4d0e99232063ef3d02a81c392a7dd751d63f05f8c4ea44a7d40d4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQPensionFund",
            "label": "lockTime",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:37"
          },
          {
            "contract": "WQPensionFund",
            "label": "defaultFee",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:38"
          },
          {
            "contract": "WQPensionFund",
            "label": "apys",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/WQPensionFund.sol:40"
          },
          {
            "contract": "WQPensionFund",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WQPensionFund.sol:41"
          },
          {
            "contract": "WQPensionFund",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/WQPensionFund.sol:44"
          },
          {
            "contract": "WQPensionFund",
            "label": "feePerMonth",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:45"
          },
          {
            "contract": "WQPensionFund",
            "label": "feeWithdraw",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:46"
          },
          {
            "contract": "WQPensionFund",
            "label": "wallets",
            "type": "t_mapping(t_address,t_struct(PensionWallet)12324_storage)",
            "src": "contracts/WQPensionFund.sol:49"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(PensionWallet)12324_storage)": {
            "label": "mapping(address => struct WQPensionFund.PensionWallet)"
          },
          "t_struct(PensionWallet)12324_storage": {
            "label": "struct WQPensionFund.PensionWallet",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "borrowed",
                "type": "t_uint256"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "unlockDate",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDistributed",
                "type": "t_uint256"
              },
              {
                "label": "serviceComission",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7e5cb45e64ef10cb8f40c733e7f326929b552a5884bbe1670cb456dea652ed0c": {
      "address": "0xA0aB872993379EC51A2D0a6cdB3cB5B5bDE8FfBB",
      "txHash": "0xa5045b31998c849b135ffa4ed4a5f5e9cce1a781bcf0ae9870e3c3079b2cacb7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQLending",
            "label": "apys",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/WQLending.sol:34"
          },
          {
            "contract": "WQLending",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WQLending.sol:35"
          },
          {
            "contract": "WQLending",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/WQLending.sol:38"
          },
          {
            "contract": "WQLending",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/WQLending.sol:39"
          },
          {
            "contract": "WQLending",
            "label": "wallets",
            "type": "t_mapping(t_address,t_struct(DepositWallet)11735_storage)",
            "src": "contracts/WQLending.sol:42"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(DepositWallet)11735_storage)": {
            "label": "mapping(address => struct WQLending.DepositWallet)"
          },
          "t_struct(DepositWallet)11735_storage": {
            "label": "struct WQLending.DepositWallet",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "borrowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDistributed",
                "type": "t_uint256"
              },
              {
                "label": "unlockDate",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "bb3c6bf8a5f2d48b181130cf58e32231b3911ac4a9f77d08e6cae5fe868b57c3": {
      "address": "0xd0391197ed3ed8419EF5520cfAfA2e09c92e209B",
      "txHash": "0x44ba5ad9a0ab87935a5bf762194625f4ddc8bd46f33a2abb778913b9933c7827",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQSavingProduct",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WQSavingProduct.sol:36"
          },
          {
            "contract": "WQSavingProduct",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/WQSavingProduct.sol:39"
          },
          {
            "contract": "WQSavingProduct",
            "label": "feePerMonth",
            "type": "t_uint256",
            "src": "contracts/WQSavingProduct.sol:40"
          },
          {
            "contract": "WQSavingProduct",
            "label": "feeWithdraw",
            "type": "t_uint256",
            "src": "contracts/WQSavingProduct.sol:41"
          },
          {
            "contract": "WQSavingProduct",
            "label": "apys",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/WQSavingProduct.sol:44"
          },
          {
            "contract": "WQSavingProduct",
            "label": "wallets",
            "type": "t_mapping(t_address,t_struct(DepositWallet)14218_storage)",
            "src": "contracts/WQSavingProduct.sol:47"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(DepositWallet)14218_storage)": {
            "label": "mapping(address => struct WQSavingProduct.DepositWallet)"
          },
          "t_struct(DepositWallet)14218_storage": {
            "label": "struct WQSavingProduct.DepositWallet",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "borrowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDistributed",
                "type": "t_uint256"
              },
              {
                "label": "unlockDate",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "serviceComission",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "56175b7f609e408b601fbcf21d13956153799a48be4391cfc13f99fc5f93d919": {
      "address": "0x143d4f7cc6D4CfE63C405be49dE5C6654aD4aF90",
      "txHash": "0x2d22621a4d6645cf15fa3694b4937d8f5c91010c29cfade4c84313796ac3fdaa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQBorrowing",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)13187",
            "src": "contracts/WQBorrowing.sol:36"
          },
          {
            "contract": "WQBorrowing",
            "label": "fixedRate",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:37"
          },
          {
            "contract": "WQBorrowing",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WQBorrowing.sol:38"
          },
          {
            "contract": "WQBorrowing",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/WQBorrowing.sol:41"
          },
          {
            "contract": "WQBorrowing",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:42"
          },
          {
            "contract": "WQBorrowing",
            "label": "apys",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/WQBorrowing.sol:45"
          },
          {
            "contract": "WQBorrowing",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_contract(IERC20Upgradeable)1861)",
            "src": "contracts/WQBorrowing.sol:47"
          },
          {
            "contract": "WQBorrowing",
            "label": "borrowers",
            "type": "t_mapping(t_address,t_struct(BorrowInfo)7179_storage)",
            "src": "contracts/WQBorrowing.sol:50"
          },
          {
            "contract": "WQBorrowing",
            "label": "funds",
            "type": "t_array(t_contract(WQFundInterface)11681)dyn_storage",
            "src": "contracts/WQBorrowing.sol:53"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)13187": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_contract(IERC20Upgradeable)1861)": {
            "label": "mapping(string => contract IERC20Upgradeable)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_struct(BorrowInfo)7179_storage)": {
            "label": "mapping(address => struct WQBorrowing.BorrowInfo)"
          },
          "t_struct(BorrowInfo)7179_storage": {
            "label": "struct WQBorrowing.BorrowInfo",
            "members": [
              {
                "label": "depositor",
                "type": "t_address"
              },
              {
                "label": "collateral",
                "type": "t_uint256"
              },
              {
                "label": "credit",
                "type": "t_uint256"
              },
              {
                "label": "borrowedAt",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "apy",
                "type": "t_uint256"
              },
              {
                "label": "fund",
                "type": "t_contract(WQFundInterface)11681"
              },
              {
                "label": "symbol",
                "type": "t_string_storage"
              }
            ]
          },
          "t_contract(WQFundInterface)11681": {
            "label": "contract WQFundInterface"
          },
          "t_array(t_contract(WQFundInterface)11681)dyn_storage": {
            "label": "contract WQFundInterface[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3e30a0b65818c3c18a274d6f60e866c966057bf7ce915fa22736612846aab23a": {
      "address": "0x668f1a6b4E4B641dede9583932cA0CB25C373c1b",
      "txHash": "0xb693508dcca883106cf782f5bf25952299c0fc751ec872bb77142159d4aa27ab",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQSavingProduct",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WQSavingProduct.sol:36"
          },
          {
            "contract": "WQSavingProduct",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/WQSavingProduct.sol:39"
          },
          {
            "contract": "WQSavingProduct",
            "label": "feePerMonth",
            "type": "t_uint256",
            "src": "contracts/WQSavingProduct.sol:40"
          },
          {
            "contract": "WQSavingProduct",
            "label": "feeWithdraw",
            "type": "t_uint256",
            "src": "contracts/WQSavingProduct.sol:41"
          },
          {
            "contract": "WQSavingProduct",
            "label": "apys",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/WQSavingProduct.sol:44"
          },
          {
            "contract": "WQSavingProduct",
            "label": "wallets",
            "type": "t_mapping(t_address,t_struct(DepositWallet)14281_storage)",
            "src": "contracts/WQSavingProduct.sol:47"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(DepositWallet)14281_storage)": {
            "label": "mapping(address => struct WQSavingProduct.DepositWallet)"
          },
          "t_struct(DepositWallet)14281_storage": {
            "label": "struct WQSavingProduct.DepositWallet",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "borrowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDistributed",
                "type": "t_uint256"
              },
              {
                "label": "unlockDate",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "serviceComission",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b714f8da2247bb70847e3ec2a0b62f1b4ffdf9cab8043f1680191fef74d43c57": {
      "address": "0xca1096B3e0D7f37922756c1aE475DB00C86a2c80",
      "txHash": "0x2d5f99504239d84319e28fd1bd66b6f3b85c9fa859ca5592f7bced7920e1ed41",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQLending",
            "label": "apys",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/WQLending.sol:33"
          },
          {
            "contract": "WQLending",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WQLending.sol:34"
          },
          {
            "contract": "WQLending",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/WQLending.sol:37"
          },
          {
            "contract": "WQLending",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/WQLending.sol:38"
          },
          {
            "contract": "WQLending",
            "label": "wallets",
            "type": "t_mapping(t_address,t_struct(DepositWallet)11760_storage)",
            "src": "contracts/WQLending.sol:41"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(DepositWallet)11760_storage)": {
            "label": "mapping(address => struct WQLending.DepositWallet)"
          },
          "t_struct(DepositWallet)11760_storage": {
            "label": "struct WQLending.DepositWallet",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "borrowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDistributed",
                "type": "t_uint256"
              },
              {
                "label": "unlockDate",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e013f34bd5d32223ec09f7848fd38cc21135a3db3ab11bfd313aadf40b515b2b": {
      "address": "0xefB789295a79753545a7a3D45a180c0C7461E542",
      "txHash": "0x61bdcc8fa22a1adee8bb4a9f00452d6086b8ddff5aaea42fa180bfa41410f313",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQPensionFund",
            "label": "lockTime",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:37"
          },
          {
            "contract": "WQPensionFund",
            "label": "defaultFee",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:38"
          },
          {
            "contract": "WQPensionFund",
            "label": "apys",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/WQPensionFund.sol:40"
          },
          {
            "contract": "WQPensionFund",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WQPensionFund.sol:41"
          },
          {
            "contract": "WQPensionFund",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/WQPensionFund.sol:44"
          },
          {
            "contract": "WQPensionFund",
            "label": "feePerMonth",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:45"
          },
          {
            "contract": "WQPensionFund",
            "label": "feeWithdraw",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:46"
          },
          {
            "contract": "WQPensionFund",
            "label": "wallets",
            "type": "t_mapping(t_address,t_struct(PensionWallet)12356_storage)",
            "src": "contracts/WQPensionFund.sol:49"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(PensionWallet)12356_storage)": {
            "label": "mapping(address => struct WQPensionFund.PensionWallet)"
          },
          "t_struct(PensionWallet)12356_storage": {
            "label": "struct WQPensionFund.PensionWallet",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "borrowed",
                "type": "t_uint256"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "unlockDate",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDistributed",
                "type": "t_uint256"
              },
              {
                "label": "serviceComission",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f02a89b6dde740207814582a0ba4939bd34aaf18aab049a33e1db214aa7afe4b": {
      "address": "0x749d17e6ac3eF8Fb7D3d9d383d37eA7195F4F989",
      "txHash": "0xd079403486fcd9a23ca1e2d459ba09ef6ff94d36f49d043754ea2e631ac2891f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQBorrowing",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)13250",
            "src": "contracts/WQBorrowing.sol:36"
          },
          {
            "contract": "WQBorrowing",
            "label": "fixedRate",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:37"
          },
          {
            "contract": "WQBorrowing",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WQBorrowing.sol:38"
          },
          {
            "contract": "WQBorrowing",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/WQBorrowing.sol:41"
          },
          {
            "contract": "WQBorrowing",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:42"
          },
          {
            "contract": "WQBorrowing",
            "label": "apys",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/WQBorrowing.sol:45"
          },
          {
            "contract": "WQBorrowing",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_contract(IERC20Upgradeable)1861)",
            "src": "contracts/WQBorrowing.sol:47"
          },
          {
            "contract": "WQBorrowing",
            "label": "borrowers",
            "type": "t_mapping(t_address,t_struct(BorrowInfo)7179_storage)",
            "src": "contracts/WQBorrowing.sol:50"
          },
          {
            "contract": "WQBorrowing",
            "label": "funds",
            "type": "t_array(t_contract(WQFundInterface)11708)dyn_storage",
            "src": "contracts/WQBorrowing.sol:53"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)13250": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_contract(IERC20Upgradeable)1861)": {
            "label": "mapping(string => contract IERC20Upgradeable)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_struct(BorrowInfo)7179_storage)": {
            "label": "mapping(address => struct WQBorrowing.BorrowInfo)"
          },
          "t_struct(BorrowInfo)7179_storage": {
            "label": "struct WQBorrowing.BorrowInfo",
            "members": [
              {
                "label": "depositor",
                "type": "t_address"
              },
              {
                "label": "collateral",
                "type": "t_uint256"
              },
              {
                "label": "credit",
                "type": "t_uint256"
              },
              {
                "label": "borrowedAt",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "apy",
                "type": "t_uint256"
              },
              {
                "label": "fund",
                "type": "t_contract(WQFundInterface)11708"
              },
              {
                "label": "symbol",
                "type": "t_string_storage"
              }
            ]
          },
          "t_contract(WQFundInterface)11708": {
            "label": "contract WQFundInterface"
          },
          "t_array(t_contract(WQFundInterface)11708)dyn_storage": {
            "label": "contract WQFundInterface[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "95f438d1c25aaddf9dc80ddad11e1df901f606972d2d0bea7a2f0a2e8d97f05b": {
      "address": "0x7F1c9A07c6F7faFC2f09A36aC036C0620B00579C",
      "txHash": "0x2531947f738c52cae2f7e01993c2956f6c02a9d13dbc0b83ffc9e88efb59068e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQBorrowing",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)13240",
            "src": "contracts/WQBorrowing.sol:36"
          },
          {
            "contract": "WQBorrowing",
            "label": "fixedRate",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:37"
          },
          {
            "contract": "WQBorrowing",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WQBorrowing.sol:38"
          },
          {
            "contract": "WQBorrowing",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/WQBorrowing.sol:41"
          },
          {
            "contract": "WQBorrowing",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:42"
          },
          {
            "contract": "WQBorrowing",
            "label": "apys",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/WQBorrowing.sol:45"
          },
          {
            "contract": "WQBorrowing",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_contract(IERC20Upgradeable)1861)",
            "src": "contracts/WQBorrowing.sol:47"
          },
          {
            "contract": "WQBorrowing",
            "label": "borrowers",
            "type": "t_mapping(t_address,t_array(t_struct(BorrowInfo)7179_storage)dyn_storage)",
            "src": "contracts/WQBorrowing.sol:50"
          },
          {
            "contract": "WQBorrowing",
            "label": "funds",
            "type": "t_array(t_contract(WQFundInterface)11698)dyn_storage",
            "src": "contracts/WQBorrowing.sol:53"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)13240": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_contract(IERC20Upgradeable)1861)": {
            "label": "mapping(string => contract IERC20Upgradeable)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_array(t_struct(BorrowInfo)7179_storage)dyn_storage)": {
            "label": "mapping(address => struct WQBorrowing.BorrowInfo[])"
          },
          "t_array(t_struct(BorrowInfo)7179_storage)dyn_storage": {
            "label": "struct WQBorrowing.BorrowInfo[]"
          },
          "t_struct(BorrowInfo)7179_storage": {
            "label": "struct WQBorrowing.BorrowInfo",
            "members": [
              {
                "label": "depositor",
                "type": "t_address"
              },
              {
                "label": "collateral",
                "type": "t_uint256"
              },
              {
                "label": "credit",
                "type": "t_uint256"
              },
              {
                "label": "borrowedAt",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "apy",
                "type": "t_uint256"
              },
              {
                "label": "fund",
                "type": "t_contract(WQFundInterface)11698"
              },
              {
                "label": "symbol",
                "type": "t_string_storage"
              }
            ]
          },
          "t_contract(WQFundInterface)11698": {
            "label": "contract WQFundInterface"
          },
          "t_array(t_contract(WQFundInterface)11698)dyn_storage": {
            "label": "contract WQFundInterface[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "328e0f239200782fc4b5dd22a0bec161039de577c3eeb6fd28191ce69d321e28": {
      "address": "0x8Cf93B32733266d81fCb9C501ABAb5FEafE09E8b",
      "txHash": "0xcde235bcc71d3b7a0ea352ae3dfc9f36a2faa0369e45c4503d3efbba57b54642",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQPensionFund",
            "label": "lockTime",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:37"
          },
          {
            "contract": "WQPensionFund",
            "label": "defaultFee",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:38"
          },
          {
            "contract": "WQPensionFund",
            "label": "apys",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/WQPensionFund.sol:40"
          },
          {
            "contract": "WQPensionFund",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WQPensionFund.sol:41"
          },
          {
            "contract": "WQPensionFund",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/WQPensionFund.sol:44"
          },
          {
            "contract": "WQPensionFund",
            "label": "feePerMonth",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:45"
          },
          {
            "contract": "WQPensionFund",
            "label": "feeWithdraw",
            "type": "t_uint256",
            "src": "contracts/WQPensionFund.sol:46"
          },
          {
            "contract": "WQPensionFund",
            "label": "wallets",
            "type": "t_mapping(t_address,t_struct(PensionWallet)12619_storage)",
            "src": "contracts/WQPensionFund.sol:49"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(PensionWallet)12619_storage)": {
            "label": "mapping(address => struct WQPensionFund.PensionWallet)"
          },
          "t_struct(PensionWallet)12619_storage": {
            "label": "struct WQPensionFund.PensionWallet",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "borrowed",
                "type": "t_uint256"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "unlockDate",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              },
              {
                "label": "rewardAllowed",
                "type": "t_uint256"
              },
              {
                "label": "rewardDistributed",
                "type": "t_uint256"
              },
              {
                "label": "serviceComission",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "2b5ac2cc0db79669c61e66c21dba321b170f4564e8e19075895b3104741989cf": {
      "address": "0xC5F691981b45dB6e306f354C08c0357Ac802b714",
      "txHash": "0x6fa09ae22afdd396239a545e8d9392d1e0684356c748951fffe291d8171ff7c6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQBorrowing",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)13697",
            "src": "contracts/WQBorrowing.sol:41"
          },
          {
            "contract": "WQBorrowing",
            "label": "fixedRate",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:42"
          },
          {
            "contract": "WQBorrowing",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WQBorrowing.sol:43"
          },
          {
            "contract": "WQBorrowing",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/WQBorrowing.sol:46"
          },
          {
            "contract": "WQBorrowing",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:47"
          },
          {
            "contract": "WQBorrowing",
            "label": "auctionDuration",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:50"
          },
          {
            "contract": "WQBorrowing",
            "label": "upperBoundCost",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:52"
          },
          {
            "contract": "WQBorrowing",
            "label": "lowerBoundCost",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:54"
          },
          {
            "contract": "WQBorrowing",
            "label": "apys",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/WQBorrowing.sol:57"
          },
          {
            "contract": "WQBorrowing",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_contract(IERC20Upgradeable)1861)",
            "src": "contracts/WQBorrowing.sol:59"
          },
          {
            "contract": "WQBorrowing",
            "label": "borrowers",
            "type": "t_mapping(t_address,t_array(t_struct(BorrowInfo)7192_storage)dyn_storage)",
            "src": "contracts/WQBorrowing.sol:62"
          },
          {
            "contract": "WQBorrowing",
            "label": "funds",
            "type": "t_array(t_contract(WQFundInterface)12141)dyn_storage",
            "src": "contracts/WQBorrowing.sol:65"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)13697": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_contract(IERC20Upgradeable)1861)": {
            "label": "mapping(string => contract IERC20Upgradeable)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_array(t_struct(BorrowInfo)7192_storage)dyn_storage)": {
            "label": "mapping(address => struct WQBorrowing.BorrowInfo[])"
          },
          "t_array(t_struct(BorrowInfo)7192_storage)dyn_storage": {
            "label": "struct WQBorrowing.BorrowInfo[]"
          },
          "t_struct(BorrowInfo)7192_storage": {
            "label": "struct WQBorrowing.BorrowInfo",
            "members": [
              {
                "label": "depositor",
                "type": "t_address"
              },
              {
                "label": "collateral",
                "type": "t_uint256"
              },
              {
                "label": "credit",
                "type": "t_uint256"
              },
              {
                "label": "borrowedAt",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "apy",
                "type": "t_uint256"
              },
              {
                "label": "saleAmount",
                "type": "t_uint256"
              },
              {
                "label": "endCost",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "fund",
                "type": "t_contract(WQFundInterface)12141"
              },
              {
                "label": "auctioned",
                "type": "t_bool"
              },
              {
                "label": "symbol",
                "type": "t_string_storage"
              }
            ]
          },
          "t_contract(WQFundInterface)12141": {
            "label": "contract WQFundInterface"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_contract(WQFundInterface)12141)dyn_storage": {
            "label": "contract WQFundInterface[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "f575174cdd166f29af70c8c610b0d61e5bb81f9ce2cc4c80c95fb6302d245bd6": {
      "address": "0x75D59c0E6d9A9c1779ab6EA58fA7FB3d22c2EFf0",
      "txHash": "0x704f253ebc955917925abb68704a2e9c5c0f49f17294ef11f322c4983ff06c3e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQBorrowing",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)13666",
            "src": "contracts/WQBorrowing.sol:40"
          },
          {
            "contract": "WQBorrowing",
            "label": "fixedRate",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:41"
          },
          {
            "contract": "WQBorrowing",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WQBorrowing.sol:42"
          },
          {
            "contract": "WQBorrowing",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/WQBorrowing.sol:45"
          },
          {
            "contract": "WQBorrowing",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:46"
          },
          {
            "contract": "WQBorrowing",
            "label": "auctionDuration",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:49"
          },
          {
            "contract": "WQBorrowing",
            "label": "upperBoundCost",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:51"
          },
          {
            "contract": "WQBorrowing",
            "label": "lowerBoundCost",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:53"
          },
          {
            "contract": "WQBorrowing",
            "label": "apys",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/WQBorrowing.sol:56"
          },
          {
            "contract": "WQBorrowing",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_contract(IERC20Upgradeable)1861)",
            "src": "contracts/WQBorrowing.sol:58"
          },
          {
            "contract": "WQBorrowing",
            "label": "borrowers",
            "type": "t_mapping(t_address,t_array(t_struct(BorrowInfo)7190_storage)dyn_storage)",
            "src": "contracts/WQBorrowing.sol:61"
          },
          {
            "contract": "WQBorrowing",
            "label": "funds",
            "type": "t_array(t_contract(WQFundInterface)12110)dyn_storage",
            "src": "contracts/WQBorrowing.sol:64"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)13666": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_contract(IERC20Upgradeable)1861)": {
            "label": "mapping(string => contract IERC20Upgradeable)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_array(t_struct(BorrowInfo)7190_storage)dyn_storage)": {
            "label": "mapping(address => struct WQBorrowing.BorrowInfo[])"
          },
          "t_array(t_struct(BorrowInfo)7190_storage)dyn_storage": {
            "label": "struct WQBorrowing.BorrowInfo[]"
          },
          "t_struct(BorrowInfo)7190_storage": {
            "label": "struct WQBorrowing.BorrowInfo",
            "members": [
              {
                "label": "depositor",
                "type": "t_address"
              },
              {
                "label": "collateral",
                "type": "t_uint256"
              },
              {
                "label": "credit",
                "type": "t_uint256"
              },
              {
                "label": "borrowedAt",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "apy",
                "type": "t_uint256"
              },
              {
                "label": "saleAmount",
                "type": "t_uint256"
              },
              {
                "label": "endCost",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "fund",
                "type": "t_contract(WQFundInterface)12110"
              },
              {
                "label": "symbol",
                "type": "t_string_storage"
              }
            ]
          },
          "t_contract(WQFundInterface)12110": {
            "label": "contract WQFundInterface"
          },
          "t_array(t_contract(WQFundInterface)12110)dyn_storage": {
            "label": "contract WQFundInterface[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "6badd83348e9ab8f05c690a4ae691c38513c1a9d9320b81d5288839f3151962d": {
      "address": "0xcAD8443058467CC6cD89A4f003Bd3813cc99060c",
      "txHash": "0x2e0fd88f31e909f65dac0efb5292ceee8062b359533784a52d477b951ef71d90",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQBorrowing",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)13666",
            "src": "contracts/WQBorrowing.sol:40"
          },
          {
            "contract": "WQBorrowing",
            "label": "fixedRate",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:41"
          },
          {
            "contract": "WQBorrowing",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WQBorrowing.sol:42"
          },
          {
            "contract": "WQBorrowing",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/WQBorrowing.sol:45"
          },
          {
            "contract": "WQBorrowing",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:46"
          },
          {
            "contract": "WQBorrowing",
            "label": "auctionDuration",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:49"
          },
          {
            "contract": "WQBorrowing",
            "label": "upperBoundCost",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:51"
          },
          {
            "contract": "WQBorrowing",
            "label": "lowerBoundCost",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:53"
          },
          {
            "contract": "WQBorrowing",
            "label": "apys",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/WQBorrowing.sol:56"
          },
          {
            "contract": "WQBorrowing",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_contract(IERC20Upgradeable)1861)",
            "src": "contracts/WQBorrowing.sol:58"
          },
          {
            "contract": "WQBorrowing",
            "label": "borrowers",
            "type": "t_mapping(t_address,t_array(t_struct(BorrowInfo)7190_storage)dyn_storage)",
            "src": "contracts/WQBorrowing.sol:61"
          },
          {
            "contract": "WQBorrowing",
            "label": "funds",
            "type": "t_array(t_contract(WQFundInterface)12110)dyn_storage",
            "src": "contracts/WQBorrowing.sol:64"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)13666": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_contract(IERC20Upgradeable)1861)": {
            "label": "mapping(string => contract IERC20Upgradeable)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_array(t_struct(BorrowInfo)7190_storage)dyn_storage)": {
            "label": "mapping(address => struct WQBorrowing.BorrowInfo[])"
          },
          "t_array(t_struct(BorrowInfo)7190_storage)dyn_storage": {
            "label": "struct WQBorrowing.BorrowInfo[]"
          },
          "t_struct(BorrowInfo)7190_storage": {
            "label": "struct WQBorrowing.BorrowInfo",
            "members": [
              {
                "label": "depositor",
                "type": "t_address"
              },
              {
                "label": "collateral",
                "type": "t_uint256"
              },
              {
                "label": "credit",
                "type": "t_uint256"
              },
              {
                "label": "borrowedAt",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "apy",
                "type": "t_uint256"
              },
              {
                "label": "saleAmount",
                "type": "t_uint256"
              },
              {
                "label": "endCost",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "fund",
                "type": "t_contract(WQFundInterface)12110"
              },
              {
                "label": "symbol",
                "type": "t_string_storage"
              }
            ]
          },
          "t_contract(WQFundInterface)12110": {
            "label": "contract WQFundInterface"
          },
          "t_array(t_contract(WQFundInterface)12110)dyn_storage": {
            "label": "contract WQFundInterface[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "73b1b96dd68da7f31657ac4690940dea6b80eb54af71bc7a98fa857277bc5dac": {
      "address": "0xe5F75B3bfB8cFaBF0CF2b71d609Dad46a9398F6E",
      "txHash": "0xb258348224a29d8e32c14044d26bc6e8927be3e408506680b6f80679393e0fd6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQBorrowing",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)13663",
            "src": "contracts/WQBorrowing.sol:40"
          },
          {
            "contract": "WQBorrowing",
            "label": "fixedRate",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:41"
          },
          {
            "contract": "WQBorrowing",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WQBorrowing.sol:42"
          },
          {
            "contract": "WQBorrowing",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/WQBorrowing.sol:45"
          },
          {
            "contract": "WQBorrowing",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:46"
          },
          {
            "contract": "WQBorrowing",
            "label": "auctionDuration",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:49"
          },
          {
            "contract": "WQBorrowing",
            "label": "upperBoundCost",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:51"
          },
          {
            "contract": "WQBorrowing",
            "label": "lowerBoundCost",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:53"
          },
          {
            "contract": "WQBorrowing",
            "label": "apys",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/WQBorrowing.sol:56"
          },
          {
            "contract": "WQBorrowing",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_contract(IERC20Upgradeable)1861)",
            "src": "contracts/WQBorrowing.sol:58"
          },
          {
            "contract": "WQBorrowing",
            "label": "borrowers",
            "type": "t_mapping(t_address,t_array(t_struct(BorrowInfo)7190_storage)dyn_storage)",
            "src": "contracts/WQBorrowing.sol:61"
          },
          {
            "contract": "WQBorrowing",
            "label": "funds",
            "type": "t_array(t_contract(WQFundInterface)12107)dyn_storage",
            "src": "contracts/WQBorrowing.sol:64"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)13663": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_contract(IERC20Upgradeable)1861)": {
            "label": "mapping(string => contract IERC20Upgradeable)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_array(t_struct(BorrowInfo)7190_storage)dyn_storage)": {
            "label": "mapping(address => struct WQBorrowing.BorrowInfo[])"
          },
          "t_array(t_struct(BorrowInfo)7190_storage)dyn_storage": {
            "label": "struct WQBorrowing.BorrowInfo[]"
          },
          "t_struct(BorrowInfo)7190_storage": {
            "label": "struct WQBorrowing.BorrowInfo",
            "members": [
              {
                "label": "depositor",
                "type": "t_address"
              },
              {
                "label": "collateral",
                "type": "t_uint256"
              },
              {
                "label": "credit",
                "type": "t_uint256"
              },
              {
                "label": "borrowedAt",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "apy",
                "type": "t_uint256"
              },
              {
                "label": "saleAmount",
                "type": "t_uint256"
              },
              {
                "label": "endCost",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "fund",
                "type": "t_contract(WQFundInterface)12107"
              },
              {
                "label": "symbol",
                "type": "t_string_storage"
              }
            ]
          },
          "t_contract(WQFundInterface)12107": {
            "label": "contract WQFundInterface"
          },
          "t_array(t_contract(WQFundInterface)12107)dyn_storage": {
            "label": "contract WQFundInterface[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "93418b245f4e60a1d2f6022f267d1bdc0a4d6d56a7bb9708e393ac71039ae097": {
      "address": "0xa7c4Ea4089515aC90013E8d194bd4f36C400Da1d",
      "txHash": "0xd7834c1e5bdd7fbdf526cdbd587d59ff61cf8b12c19e20f370ba050f779850cd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQBorrowing",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)13658",
            "src": "contracts/WQBorrowing.sol:40"
          },
          {
            "contract": "WQBorrowing",
            "label": "fixedRate",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:41"
          },
          {
            "contract": "WQBorrowing",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WQBorrowing.sol:42"
          },
          {
            "contract": "WQBorrowing",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/WQBorrowing.sol:45"
          },
          {
            "contract": "WQBorrowing",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:46"
          },
          {
            "contract": "WQBorrowing",
            "label": "auctionDuration",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:49"
          },
          {
            "contract": "WQBorrowing",
            "label": "upperBoundCost",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:51"
          },
          {
            "contract": "WQBorrowing",
            "label": "lowerBoundCost",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:53"
          },
          {
            "contract": "WQBorrowing",
            "label": "apys",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/WQBorrowing.sol:56"
          },
          {
            "contract": "WQBorrowing",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_contract(IERC20Upgradeable)1861)",
            "src": "contracts/WQBorrowing.sol:58"
          },
          {
            "contract": "WQBorrowing",
            "label": "borrowers",
            "type": "t_mapping(t_address,t_array(t_struct(BorrowInfo)7190_storage)dyn_storage)",
            "src": "contracts/WQBorrowing.sol:61"
          },
          {
            "contract": "WQBorrowing",
            "label": "funds",
            "type": "t_array(t_contract(WQFundInterface)12102)dyn_storage",
            "src": "contracts/WQBorrowing.sol:64"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)13658": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_contract(IERC20Upgradeable)1861)": {
            "label": "mapping(string => contract IERC20Upgradeable)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_array(t_struct(BorrowInfo)7190_storage)dyn_storage)": {
            "label": "mapping(address => struct WQBorrowing.BorrowInfo[])"
          },
          "t_array(t_struct(BorrowInfo)7190_storage)dyn_storage": {
            "label": "struct WQBorrowing.BorrowInfo[]"
          },
          "t_struct(BorrowInfo)7190_storage": {
            "label": "struct WQBorrowing.BorrowInfo",
            "members": [
              {
                "label": "depositor",
                "type": "t_address"
              },
              {
                "label": "collateral",
                "type": "t_uint256"
              },
              {
                "label": "credit",
                "type": "t_uint256"
              },
              {
                "label": "borrowedAt",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "apy",
                "type": "t_uint256"
              },
              {
                "label": "saleAmount",
                "type": "t_uint256"
              },
              {
                "label": "endCost",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "fund",
                "type": "t_contract(WQFundInterface)12102"
              },
              {
                "label": "symbol",
                "type": "t_string_storage"
              }
            ]
          },
          "t_contract(WQFundInterface)12102": {
            "label": "contract WQFundInterface"
          },
          "t_array(t_contract(WQFundInterface)12102)dyn_storage": {
            "label": "contract WQFundInterface[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4250402e39cc51e0dcead859822abaff55530f88f1a5105737d2d108f83053fc": {
      "address": "0x5aa63d0debcB2ff5276a063F915e207d57730221",
      "txHash": "0x8fa98f19d16ff6bbaf849c9e35549c87c1b3384cf178f13eaaef1bacb8f1a4c6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQBorrowing",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)13676",
            "src": "contracts/WQBorrowing.sol:40"
          },
          {
            "contract": "WQBorrowing",
            "label": "fixedRate",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:41"
          },
          {
            "contract": "WQBorrowing",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WQBorrowing.sol:42"
          },
          {
            "contract": "WQBorrowing",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/WQBorrowing.sol:45"
          },
          {
            "contract": "WQBorrowing",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:46"
          },
          {
            "contract": "WQBorrowing",
            "label": "auctionDuration",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:49"
          },
          {
            "contract": "WQBorrowing",
            "label": "upperBoundCost",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:51"
          },
          {
            "contract": "WQBorrowing",
            "label": "lowerBoundCost",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:53"
          },
          {
            "contract": "WQBorrowing",
            "label": "apys",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/WQBorrowing.sol:56"
          },
          {
            "contract": "WQBorrowing",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_contract(IERC20Upgradeable)1861)",
            "src": "contracts/WQBorrowing.sol:58"
          },
          {
            "contract": "WQBorrowing",
            "label": "borrowers",
            "type": "t_mapping(t_address,t_array(t_struct(BorrowInfo)7190_storage)dyn_storage)",
            "src": "contracts/WQBorrowing.sol:61"
          },
          {
            "contract": "WQBorrowing",
            "label": "funds",
            "type": "t_array(t_contract(WQFundInterface)12120)dyn_storage",
            "src": "contracts/WQBorrowing.sol:64"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)13676": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_contract(IERC20Upgradeable)1861)": {
            "label": "mapping(string => contract IERC20Upgradeable)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_array(t_struct(BorrowInfo)7190_storage)dyn_storage)": {
            "label": "mapping(address => struct WQBorrowing.BorrowInfo[])"
          },
          "t_array(t_struct(BorrowInfo)7190_storage)dyn_storage": {
            "label": "struct WQBorrowing.BorrowInfo[]"
          },
          "t_struct(BorrowInfo)7190_storage": {
            "label": "struct WQBorrowing.BorrowInfo",
            "members": [
              {
                "label": "depositor",
                "type": "t_address"
              },
              {
                "label": "collateral",
                "type": "t_uint256"
              },
              {
                "label": "credit",
                "type": "t_uint256"
              },
              {
                "label": "borrowedAt",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "apy",
                "type": "t_uint256"
              },
              {
                "label": "saleAmount",
                "type": "t_uint256"
              },
              {
                "label": "endCost",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "fund",
                "type": "t_contract(WQFundInterface)12120"
              },
              {
                "label": "symbol",
                "type": "t_string_storage"
              }
            ]
          },
          "t_contract(WQFundInterface)12120": {
            "label": "contract WQFundInterface"
          },
          "t_array(t_contract(WQFundInterface)12120)dyn_storage": {
            "label": "contract WQFundInterface[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "661418b72b3b343130c676d4cad0aeaa37368555f8b5885f14c586f88d8eb28e": {
      "address": "0x58BD666cA5d4A9D74Df9F14EB7804e0890Ef9295",
      "txHash": "0x35a8f97449fc0bb5e32708af3dac29b55012b33f8bd13955f4e754f3d202e665",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQBorrowing",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)13685",
            "src": "contracts/WQBorrowing.sol:40"
          },
          {
            "contract": "WQBorrowing",
            "label": "fixedRate",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:41"
          },
          {
            "contract": "WQBorrowing",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WQBorrowing.sol:42"
          },
          {
            "contract": "WQBorrowing",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/WQBorrowing.sol:45"
          },
          {
            "contract": "WQBorrowing",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:46"
          },
          {
            "contract": "WQBorrowing",
            "label": "auctionDuration",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:49"
          },
          {
            "contract": "WQBorrowing",
            "label": "upperBoundCost",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:51"
          },
          {
            "contract": "WQBorrowing",
            "label": "lowerBoundCost",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:53"
          },
          {
            "contract": "WQBorrowing",
            "label": "apys",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/WQBorrowing.sol:56"
          },
          {
            "contract": "WQBorrowing",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_contract(IERC20Upgradeable)1861)",
            "src": "contracts/WQBorrowing.sol:58"
          },
          {
            "contract": "WQBorrowing",
            "label": "borrowers",
            "type": "t_mapping(t_address,t_array(t_struct(BorrowInfo)7190_storage)dyn_storage)",
            "src": "contracts/WQBorrowing.sol:61"
          },
          {
            "contract": "WQBorrowing",
            "label": "funds",
            "type": "t_array(t_contract(WQFundInterface)12129)dyn_storage",
            "src": "contracts/WQBorrowing.sol:64"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)13685": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_contract(IERC20Upgradeable)1861)": {
            "label": "mapping(string => contract IERC20Upgradeable)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_array(t_struct(BorrowInfo)7190_storage)dyn_storage)": {
            "label": "mapping(address => struct WQBorrowing.BorrowInfo[])"
          },
          "t_array(t_struct(BorrowInfo)7190_storage)dyn_storage": {
            "label": "struct WQBorrowing.BorrowInfo[]"
          },
          "t_struct(BorrowInfo)7190_storage": {
            "label": "struct WQBorrowing.BorrowInfo",
            "members": [
              {
                "label": "depositor",
                "type": "t_address"
              },
              {
                "label": "collateral",
                "type": "t_uint256"
              },
              {
                "label": "credit",
                "type": "t_uint256"
              },
              {
                "label": "borrowedAt",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "apy",
                "type": "t_uint256"
              },
              {
                "label": "saleAmount",
                "type": "t_uint256"
              },
              {
                "label": "endCost",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "fund",
                "type": "t_contract(WQFundInterface)12129"
              },
              {
                "label": "symbol",
                "type": "t_string_storage"
              }
            ]
          },
          "t_contract(WQFundInterface)12129": {
            "label": "contract WQFundInterface"
          },
          "t_array(t_contract(WQFundInterface)12129)dyn_storage": {
            "label": "contract WQFundInterface[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f4727aae1916a240fb98b40b37abefb118fbd86197fa2e0fe9d9a82140fdce84": {
      "address": "0xDaEE35754849d4AdDB62Ef8695bed2828846df5D",
      "txHash": "0xbb9505d6bfa6a490229776f3a7d446070e87826608e3502f149192c88a89aa5c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQBorrowing",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)13685",
            "src": "contracts/WQBorrowing.sol:40"
          },
          {
            "contract": "WQBorrowing",
            "label": "fixedRate",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:41"
          },
          {
            "contract": "WQBorrowing",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WQBorrowing.sol:42"
          },
          {
            "contract": "WQBorrowing",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/WQBorrowing.sol:45"
          },
          {
            "contract": "WQBorrowing",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:46"
          },
          {
            "contract": "WQBorrowing",
            "label": "auctionDuration",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:49"
          },
          {
            "contract": "WQBorrowing",
            "label": "upperBoundCost",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:51"
          },
          {
            "contract": "WQBorrowing",
            "label": "lowerBoundCost",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:53"
          },
          {
            "contract": "WQBorrowing",
            "label": "apys",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/WQBorrowing.sol:56"
          },
          {
            "contract": "WQBorrowing",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_contract(IERC20Upgradeable)1861)",
            "src": "contracts/WQBorrowing.sol:58"
          },
          {
            "contract": "WQBorrowing",
            "label": "borrowers",
            "type": "t_mapping(t_address,t_array(t_struct(BorrowInfo)7190_storage)dyn_storage)",
            "src": "contracts/WQBorrowing.sol:61"
          },
          {
            "contract": "WQBorrowing",
            "label": "funds",
            "type": "t_array(t_contract(WQFundInterface)12129)dyn_storage",
            "src": "contracts/WQBorrowing.sol:64"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)13685": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_contract(IERC20Upgradeable)1861)": {
            "label": "mapping(string => contract IERC20Upgradeable)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_array(t_struct(BorrowInfo)7190_storage)dyn_storage)": {
            "label": "mapping(address => struct WQBorrowing.BorrowInfo[])"
          },
          "t_array(t_struct(BorrowInfo)7190_storage)dyn_storage": {
            "label": "struct WQBorrowing.BorrowInfo[]"
          },
          "t_struct(BorrowInfo)7190_storage": {
            "label": "struct WQBorrowing.BorrowInfo",
            "members": [
              {
                "label": "depositor",
                "type": "t_address"
              },
              {
                "label": "collateral",
                "type": "t_uint256"
              },
              {
                "label": "credit",
                "type": "t_uint256"
              },
              {
                "label": "borrowedAt",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "apy",
                "type": "t_uint256"
              },
              {
                "label": "saleAmount",
                "type": "t_uint256"
              },
              {
                "label": "endCost",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "fund",
                "type": "t_contract(WQFundInterface)12129"
              },
              {
                "label": "symbol",
                "type": "t_string_storage"
              }
            ]
          },
          "t_contract(WQFundInterface)12129": {
            "label": "contract WQFundInterface"
          },
          "t_array(t_contract(WQFundInterface)12129)dyn_storage": {
            "label": "contract WQFundInterface[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "6d107e9d444c480d5460323fa4ac3b20706c83c405524cbe9d4d698bbd17358b": {
      "address": "0xb0828E385847804B0A59E3cf2c7Bb1a1E520bC76",
      "txHash": "0x83a68354c3d78a82960ce3a9200f5f3c8b3dd049786c229a6a743a98a6601d1a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQBorrowing",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)13687",
            "src": "contracts/WQBorrowing.sol:40"
          },
          {
            "contract": "WQBorrowing",
            "label": "fixedRate",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:41"
          },
          {
            "contract": "WQBorrowing",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WQBorrowing.sol:42"
          },
          {
            "contract": "WQBorrowing",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/WQBorrowing.sol:45"
          },
          {
            "contract": "WQBorrowing",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:46"
          },
          {
            "contract": "WQBorrowing",
            "label": "auctionDuration",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:49"
          },
          {
            "contract": "WQBorrowing",
            "label": "upperBoundCost",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:51"
          },
          {
            "contract": "WQBorrowing",
            "label": "lowerBoundCost",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:53"
          },
          {
            "contract": "WQBorrowing",
            "label": "apys",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/WQBorrowing.sol:56"
          },
          {
            "contract": "WQBorrowing",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_contract(IERC20Upgradeable)1861)",
            "src": "contracts/WQBorrowing.sol:58"
          },
          {
            "contract": "WQBorrowing",
            "label": "borrowers",
            "type": "t_mapping(t_address,t_array(t_struct(BorrowInfo)7190_storage)dyn_storage)",
            "src": "contracts/WQBorrowing.sol:61"
          },
          {
            "contract": "WQBorrowing",
            "label": "funds",
            "type": "t_array(t_contract(WQFundInterface)12131)dyn_storage",
            "src": "contracts/WQBorrowing.sol:64"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)13687": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_contract(IERC20Upgradeable)1861)": {
            "label": "mapping(string => contract IERC20Upgradeable)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_array(t_struct(BorrowInfo)7190_storage)dyn_storage)": {
            "label": "mapping(address => struct WQBorrowing.BorrowInfo[])"
          },
          "t_array(t_struct(BorrowInfo)7190_storage)dyn_storage": {
            "label": "struct WQBorrowing.BorrowInfo[]"
          },
          "t_struct(BorrowInfo)7190_storage": {
            "label": "struct WQBorrowing.BorrowInfo",
            "members": [
              {
                "label": "depositor",
                "type": "t_address"
              },
              {
                "label": "collateral",
                "type": "t_uint256"
              },
              {
                "label": "credit",
                "type": "t_uint256"
              },
              {
                "label": "borrowedAt",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "apy",
                "type": "t_uint256"
              },
              {
                "label": "saleAmount",
                "type": "t_uint256"
              },
              {
                "label": "endCost",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "fund",
                "type": "t_contract(WQFundInterface)12131"
              },
              {
                "label": "symbol",
                "type": "t_string_storage"
              }
            ]
          },
          "t_contract(WQFundInterface)12131": {
            "label": "contract WQFundInterface"
          },
          "t_array(t_contract(WQFundInterface)12131)dyn_storage": {
            "label": "contract WQFundInterface[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "610fd9073b6d6f83faa89631a16ec01094a69f7cf9d52d4459e4283d4bb39ab0": {
      "address": "0x616c437197F6a717e44510A701BBf79041903991",
      "txHash": "0x898bf7c4c2da9806b4543295b655239fffd06bdcfd8c2ebae69c39821ab8bb36",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQBorrowing",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)13689",
            "src": "contracts/WQBorrowing.sol:40"
          },
          {
            "contract": "WQBorrowing",
            "label": "fixedRate",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:41"
          },
          {
            "contract": "WQBorrowing",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WQBorrowing.sol:42"
          },
          {
            "contract": "WQBorrowing",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/WQBorrowing.sol:45"
          },
          {
            "contract": "WQBorrowing",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:46"
          },
          {
            "contract": "WQBorrowing",
            "label": "auctionDuration",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:49"
          },
          {
            "contract": "WQBorrowing",
            "label": "upperBoundCost",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:51"
          },
          {
            "contract": "WQBorrowing",
            "label": "lowerBoundCost",
            "type": "t_uint256",
            "src": "contracts/WQBorrowing.sol:53"
          },
          {
            "contract": "WQBorrowing",
            "label": "apys",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/WQBorrowing.sol:56"
          },
          {
            "contract": "WQBorrowing",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_contract(IERC20Upgradeable)1861)",
            "src": "contracts/WQBorrowing.sol:58"
          },
          {
            "contract": "WQBorrowing",
            "label": "borrowers",
            "type": "t_mapping(t_address,t_array(t_struct(BorrowInfo)7190_storage)dyn_storage)",
            "src": "contracts/WQBorrowing.sol:61"
          },
          {
            "contract": "WQBorrowing",
            "label": "funds",
            "type": "t_array(t_contract(WQFundInterface)12133)dyn_storage",
            "src": "contracts/WQBorrowing.sol:64"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)13689": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_contract(IERC20Upgradeable)1861)": {
            "label": "mapping(string => contract IERC20Upgradeable)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_array(t_struct(BorrowInfo)7190_storage)dyn_storage)": {
            "label": "mapping(address => struct WQBorrowing.BorrowInfo[])"
          },
          "t_array(t_struct(BorrowInfo)7190_storage)dyn_storage": {
            "label": "struct WQBorrowing.BorrowInfo[]"
          },
          "t_struct(BorrowInfo)7190_storage": {
            "label": "struct WQBorrowing.BorrowInfo",
            "members": [
              {
                "label": "depositor",
                "type": "t_address"
              },
              {
                "label": "collateral",
                "type": "t_uint256"
              },
              {
                "label": "credit",
                "type": "t_uint256"
              },
              {
                "label": "borrowedAt",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "apy",
                "type": "t_uint256"
              },
              {
                "label": "saleAmount",
                "type": "t_uint256"
              },
              {
                "label": "endCost",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "fund",
                "type": "t_contract(WQFundInterface)12133"
              },
              {
                "label": "symbol",
                "type": "t_string_storage"
              }
            ]
          },
          "t_contract(WQFundInterface)12133": {
            "label": "contract WQFundInterface"
          },
          "t_array(t_contract(WQFundInterface)12133)dyn_storage": {
            "label": "contract WQFundInterface[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "6aafbf56bd14e02ceb7ffd662e6be04c34079f8fa4ac353f6864c2a0b144fc7f": {
      "address": "0xF0fD6887d1E205572059E2C1caC06422e3B9368e",
      "txHash": "0xe843d14fedaea65eabdb8ff7c22230f71811b7870f68d00408d42de797cb7929",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQBridgeStable",
            "label": "chainId",
            "type": "t_uint256",
            "src": "contracts/WQBridgeStable.sol:61"
          },
          {
            "contract": "WQBridgeStable",
            "label": "pool",
            "type": "t_address_payable",
            "src": "contracts/WQBridgeStable.sol:63"
          },
          {
            "contract": "WQBridgeStable",
            "label": "chains",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/WQBridgeStable.sol:66"
          },
          {
            "contract": "WQBridgeStable",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)9502_storage)",
            "src": "contracts/WQBridgeStable.sol:69"
          },
          {
            "contract": "WQBridgeStable",
            "label": "swaps",
            "type": "t_mapping(t_bytes32,t_struct(SwapData)9489_storage)",
            "src": "contracts/WQBridgeStable.sol:72"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)9502_storage)": {
            "label": "mapping(string => struct WQBridgeStable.TokenSettings)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(TokenSettings)9502_storage": {
            "label": "struct WQBridgeStable.TokenSettings",
            "members": [
              {
                "label": "minAmount",
                "type": "t_uint256"
              },
              {
                "label": "maxAmount",
                "type": "t_uint256"
              },
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "native",
                "type": "t_bool"
              },
              {
                "label": "lockable",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(SwapData)9489_storage)": {
            "label": "mapping(bytes32 => struct WQBridgeStable.SwapData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(SwapData)9489_storage": {
            "label": "struct WQBridgeStable.SwapData",
            "members": [
              {
                "label": "nonce",
                "type": "t_uint256"
              },
              {
                "label": "state",
                "type": "t_enum(State)9483"
              }
            ]
          },
          "t_enum(State)9483": {
            "label": "enum WQBridgeStable.State",
            "members": [
              "Empty",
              "Initialized",
              "Redeemed"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "8980899a0c46d0e7e5b55b704913219dd44d1e8caf4f5da09635772326300870": {
      "address": "0x3Eb186019fEC9cBDD641e7e21bed58Fdd16CafCb",
      "txHash": "0xe8ed3225b3789b6b78f39ced7f9d0a943ff33c88ddbb837e71c83f9f67b0985b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "feeEmployer",
            "type": "t_uint256",
            "src": "contracts/WorkQuestFactory.sol:29"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "feeWorker",
            "type": "t_uint256",
            "src": "contracts/WorkQuestFactory.sol:30"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "feeTx",
            "type": "t_uint256",
            "src": "contracts/WorkQuestFactory.sol:31"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "feeReceiver",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:34"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "pensionFund",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:37"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "referral",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:40"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WorkQuestFactory.sol:43"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "workquests",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/WorkQuestFactory.sol:46"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "workquestValid",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/WorkQuestFactory.sol:49"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "1372f505234dd07159093d689af3a7fb46082cb496f610a00e940744e5384849": {
      "address": "0x2772Ca9509d73aA311b70E166D023570b6d1dcd0",
      "txHash": "0x500fde757e10801d1fe56648391466e03a521b71ecb217c920a5b96e60d43691",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "feeEmployer",
            "type": "t_uint256",
            "src": "contracts/WorkQuestFactory.sol:29"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "feeWorker",
            "type": "t_uint256",
            "src": "contracts/WorkQuestFactory.sol:30"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "feeTx",
            "type": "t_uint256",
            "src": "contracts/WorkQuestFactory.sol:31"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "feeReceiver",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:34"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "pensionFund",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:37"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "referral",
            "type": "t_address_payable",
            "src": "contracts/WorkQuestFactory.sol:40"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WorkQuestFactory.sol:43"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "workquests",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/WorkQuestFactory.sol:46"
          },
          {
            "contract": "WorkQuestFactory",
            "label": "workquestValid",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/WorkQuestFactory.sol:49"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "7ace36b502b793962b418298b473220da1a6d745c5178673a11f77100a8b852f": {
      "address": "0x9bbc9106A75d7d6AC03e7F85ad8a48e872754B7C",
      "txHash": "0x580a608a2abbf99cc439a35bd288d56b5e528e85248476f7f8d022c421aa4951",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQPromotion",
            "label": "factory",
            "type": "t_contract(WorkQuestFactoryInterface)22650",
            "src": "contracts/WQPromotion.sol:30"
          },
          {
            "contract": "WQPromotion",
            "label": "wusd",
            "type": "t_contract(IERC20Upgradeable)1861",
            "src": "contracts/WQPromotion.sol:31"
          },
          {
            "contract": "WQPromotion",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/WQPromotion.sol:32"
          },
          {
            "contract": "WQPromotion",
            "label": "questTariff",
            "type": "t_mapping(t_enum(PaidTariff)15812,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/WQPromotion.sol:33"
          },
          {
            "contract": "WQPromotion",
            "label": "usersTariff",
            "type": "t_mapping(t_enum(PaidTariff)15812,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/WQPromotion.sol:34"
          }
        ],
        "types": {
          "t_contract(WorkQuestFactoryInterface)22650": {
            "label": "contract WorkQuestFactoryInterface"
          },
          "t_contract(IERC20Upgradeable)1861": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_enum(PaidTariff)15812,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(enum WQPromotion.PaidTariff => mapping(uint256 => uint256))"
          },
          "t_enum(PaidTariff)15812": {
            "label": "enum WQPromotion.PaidTariff",
            "members": [
              "GoldPlus",
              "Gold",
              "Silver",
              "Bronze"
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a516fa491cf4540efb2e302c479dc0d7e260694cd0ab3f7e8099addbee84ee84": {
      "address": "0x81ccD2f79C201310F5832aC3c031036114243b22",
      "txHash": "0x29cc131284179e2d43861ca22c6046ce604c2b390df45c727b4ca3282491cdfb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQRouter",
            "label": "oracle",
            "type": "t_contract(WQPriceOracle)25381",
            "src": "contracts/stablecoin/WQRouter.sol:57"
          },
          {
            "contract": "WQRouter",
            "label": "wusd",
            "type": "t_contract(WQBridgeTokenInterface)10337",
            "src": "contracts/stablecoin/WQRouter.sol:58"
          },
          {
            "contract": "WQRouter",
            "label": "surplusAuction",
            "type": "t_contract(WQSurplusAuction)28409",
            "src": "contracts/stablecoin/WQRouter.sol:59"
          },
          {
            "contract": "WQRouter",
            "label": "debtAuction",
            "type": "t_contract(WQDebtAuction)24934",
            "src": "contracts/stablecoin/WQRouter.sol:60"
          },
          {
            "contract": "WQRouter",
            "label": "fixedRate",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:65"
          },
          {
            "contract": "WQRouter",
            "label": "annualInterestRate",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:66"
          },
          {
            "contract": "WQRouter",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/stablecoin/WQRouter.sol:67"
          },
          {
            "contract": "WQRouter",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)25460_storage)",
            "src": "contracts/stablecoin/WQRouter.sol:69"
          },
          {
            "contract": "WQRouter",
            "label": "collaterals",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(UserCollateral)25446_storage))",
            "src": "contracts/stablecoin/WQRouter.sol:70"
          }
        ],
        "types": {
          "t_contract(WQPriceOracle)25381": {
            "label": "contract WQPriceOracle"
          },
          "t_contract(WQBridgeTokenInterface)10337": {
            "label": "contract WQBridgeTokenInterface"
          },
          "t_contract(WQSurplusAuction)28409": {
            "label": "contract WQSurplusAuction"
          },
          "t_contract(WQDebtAuction)24934": {
            "label": "contract WQDebtAuction"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)25460_storage)": {
            "label": "mapping(string => struct WQRouter.TokenSettings)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(TokenSettings)25460_storage": {
            "label": "struct WQRouter.TokenSettings",
            "members": [
              {
                "label": "totalCollateral",
                "type": "t_uint256"
              },
              {
                "label": "totalDebt",
                "type": "t_uint256"
              },
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "collateralAuction",
                "type": "t_contract(WQCollateralAuction)24156"
              },
              {
                "label": "minRatio",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              }
            ]
          },
          "t_contract(WQCollateralAuction)24156": {
            "label": "contract WQCollateralAuction"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(UserCollateral)25446_storage))": {
            "label": "mapping(string => mapping(address => struct WQRouter.UserCollateral))"
          },
          "t_mapping(t_address,t_struct(UserCollateral)25446_storage)": {
            "label": "mapping(address => struct WQRouter.UserCollateral)"
          },
          "t_struct(UserCollateral)25446_storage": {
            "label": "struct WQRouter.UserCollateral",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "debtAmount",
                "type": "t_uint256"
              },
              {
                "label": "vault",
                "type": "t_contract(WQRouterVault)27600"
              },
              {
                "label": "lotHashIndexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "lots",
                "type": "t_array(t_struct(UserLot)25430_storage)dyn_storage"
              }
            ]
          },
          "t_contract(WQRouterVault)27600": {
            "label": "contract WQRouterVault"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_struct(UserLot)25430_storage)dyn_storage": {
            "label": "struct WQRouter.UserLot[]"
          },
          "t_struct(UserLot)25430_storage": {
            "label": "struct WQRouter.UserLot",
            "members": [
              {
                "label": "priceIndex",
                "type": "t_uint256"
              },
              {
                "label": "index",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "f1e15c4c506b53e755b6702c5322a213471ff7d20961f2c144b8ab6325ca884b": {
      "address": "0xA4Ad3247b29EEb098AEC984FB4406D5712959aDE",
      "txHash": "0xca6bacb0ddc447b4b272e0f2271169e3c63ea8ff8bedd2845a6c9a558dcab6db",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "oracle",
            "type": "t_contract(WQPriceOracle)25382",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:47"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "router",
            "type": "t_contract(WQRouterInterface)27526",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:49"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "token",
            "type": "t_contract(IERC20MetadataUpgradeable)1946",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:51"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "liquidateThreshold",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:54"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "upperBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:56"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "lowerBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:58"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "auctionDuration",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:60"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "priceIndexStep",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:62"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "totalAuctioned",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:65"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "lots",
            "type": "t_mapping(t_uint256,t_array(t_struct(LotInfo)22717_storage)dyn_storage)",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:67"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "priceIndexes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:69"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "prices",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:71"
          }
        ],
        "types": {
          "t_contract(WQPriceOracle)25382": {
            "label": "contract WQPriceOracle"
          },
          "t_contract(WQRouterInterface)27526": {
            "label": "contract WQRouterInterface"
          },
          "t_contract(IERC20MetadataUpgradeable)1946": {
            "label": "contract IERC20MetadataUpgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_array(t_struct(LotInfo)22717_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct WQCollateralAuction.LotInfo[])"
          },
          "t_array(t_struct(LotInfo)22717_storage)dyn_storage": {
            "label": "struct WQCollateralAuction.LotInfo[]"
          },
          "t_struct(LotInfo)22717_storage": {
            "label": "struct WQCollateralAuction.LotInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "ratio",
                "type": "t_uint256"
              },
              {
                "label": "created",
                "type": "t_uint256"
              },
              {
                "label": "buyer",
                "type": "t_address"
              },
              {
                "label": "saleAmount",
                "type": "t_uint256"
              },
              {
                "label": "endCost",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(LotStatus)22695"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LotStatus)22695": {
            "label": "enum WQCollateralAuction.LotStatus",
            "members": [
              "Unknown",
              "New",
              "Auctioned",
              "Liquidated"
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "55e78deec88376457476237e38a38503b0386ceb9c912e4050959b62793bb665": {
      "address": "0x9678b1F8E404CA504520B130C198B9852648c781",
      "txHash": "0x5c57a0b69b37165c67a90ce1a3b2e2e0ab4738b69e7db32626dc2993e7551fa8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQRouter",
            "label": "oracle",
            "type": "t_contract(WQPriceOracle)25382",
            "src": "contracts/stablecoin/WQRouter.sol:58"
          },
          {
            "contract": "WQRouter",
            "label": "wusd",
            "type": "t_contract(WQBridgeTokenInterface)10337",
            "src": "contracts/stablecoin/WQRouter.sol:59"
          },
          {
            "contract": "WQRouter",
            "label": "surplusAuction",
            "type": "t_contract(WQSurplusAuction)28417",
            "src": "contracts/stablecoin/WQRouter.sol:60"
          },
          {
            "contract": "WQRouter",
            "label": "debtAuction",
            "type": "t_contract(WQDebtAuction)24935",
            "src": "contracts/stablecoin/WQRouter.sol:61"
          },
          {
            "contract": "WQRouter",
            "label": "fixedRate",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:66"
          },
          {
            "contract": "WQRouter",
            "label": "annualInterestRate",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:67"
          },
          {
            "contract": "WQRouter",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/stablecoin/WQRouter.sol:68"
          },
          {
            "contract": "WQRouter",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)25461_storage)",
            "src": "contracts/stablecoin/WQRouter.sol:70"
          },
          {
            "contract": "WQRouter",
            "label": "collaterals",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(UserCollateral)25447_storage))",
            "src": "contracts/stablecoin/WQRouter.sol:71"
          }
        ],
        "types": {
          "t_contract(WQPriceOracle)25382": {
            "label": "contract WQPriceOracle"
          },
          "t_contract(WQBridgeTokenInterface)10337": {
            "label": "contract WQBridgeTokenInterface"
          },
          "t_contract(WQSurplusAuction)28417": {
            "label": "contract WQSurplusAuction"
          },
          "t_contract(WQDebtAuction)24935": {
            "label": "contract WQDebtAuction"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)25461_storage)": {
            "label": "mapping(string => struct WQRouter.TokenSettings)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(TokenSettings)25461_storage": {
            "label": "struct WQRouter.TokenSettings",
            "members": [
              {
                "label": "totalCollateral",
                "type": "t_uint256"
              },
              {
                "label": "totalDebt",
                "type": "t_uint256"
              },
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "collateralAuction",
                "type": "t_contract(WQCollateralAuction)24157"
              },
              {
                "label": "minRatio",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              }
            ]
          },
          "t_contract(WQCollateralAuction)24157": {
            "label": "contract WQCollateralAuction"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(UserCollateral)25447_storage))": {
            "label": "mapping(string => mapping(address => struct WQRouter.UserCollateral))"
          },
          "t_mapping(t_address,t_struct(UserCollateral)25447_storage)": {
            "label": "mapping(address => struct WQRouter.UserCollateral)"
          },
          "t_struct(UserCollateral)25447_storage": {
            "label": "struct WQRouter.UserCollateral",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "debtAmount",
                "type": "t_uint256"
              },
              {
                "label": "vault",
                "type": "t_contract(WQRouterVault)27608"
              },
              {
                "label": "lotHashIndexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "lots",
                "type": "t_array(t_struct(UserLot)25431_storage)dyn_storage"
              }
            ]
          },
          "t_contract(WQRouterVault)27608": {
            "label": "contract WQRouterVault"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_struct(UserLot)25431_storage)dyn_storage": {
            "label": "struct WQRouter.UserLot[]"
          },
          "t_struct(UserLot)25431_storage": {
            "label": "struct WQRouter.UserLot",
            "members": [
              {
                "label": "priceIndex",
                "type": "t_uint256"
              },
              {
                "label": "index",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "bfa04c5bb40127552c2509756955f650d7eb8f70725c8986984448ecd890973a": {
      "address": "0xdD74d04B3129ade89fB34EDE62cD71Ef4Bd3b7eb",
      "txHash": "0xcabb5b129cab6e1c3d1081b695049358b2e0d113123f2eba16a5519edc8afd5a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQPriceOracle",
            "label": "validTime",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQPriceOracle.sol:26"
          },
          {
            "contract": "WQPriceOracle",
            "label": "lastNonce",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQPriceOracle.sol:27"
          },
          {
            "contract": "WQPriceOracle",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_struct(TokenInfo)24946_storage)",
            "src": "contracts/stablecoin/WQPriceOracle.sol:28"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_struct(TokenInfo)24946_storage)": {
            "label": "mapping(string => struct WQPriceOracle.TokenInfo)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(TokenInfo)24946_storage": {
            "label": "struct WQPriceOracle.TokenInfo",
            "members": [
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "maxRatio",
                "type": "t_uint256"
              },
              {
                "label": "updatedTime",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "965a57e7708870ce64072e340d6c61d619da67c64e00a0a589e2245252b1b8d0": {
      "address": "0x6aD02B7Af8D728C465bB576B5Cc2EAC8817a6692",
      "txHash": "0x2a74b871bfadd926c86768b13e12a067a27537c0df6143ab134392f1001ec046",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQRouter",
            "label": "oracle",
            "type": "t_contract(WQPriceOracle)25336",
            "src": "contracts/stablecoin/WQRouter.sol:56"
          },
          {
            "contract": "WQRouter",
            "label": "wusd",
            "type": "t_contract(WQBridgeTokenInterface)10351",
            "src": "contracts/stablecoin/WQRouter.sol:57"
          },
          {
            "contract": "WQRouter",
            "label": "surplusAuction",
            "type": "t_contract(WQSurplusAuction)28309",
            "src": "contracts/stablecoin/WQRouter.sol:58"
          },
          {
            "contract": "WQRouter",
            "label": "debtAuction",
            "type": "t_contract(WQDebtAuction)24971",
            "src": "contracts/stablecoin/WQRouter.sol:59"
          },
          {
            "contract": "WQRouter",
            "label": "fixedRate",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:64"
          },
          {
            "contract": "WQRouter",
            "label": "annualInterestRate",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:65"
          },
          {
            "contract": "WQRouter",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/stablecoin/WQRouter.sol:66"
          },
          {
            "contract": "WQRouter",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)25413_storage)",
            "src": "contracts/stablecoin/WQRouter.sol:68"
          },
          {
            "contract": "WQRouter",
            "label": "collaterals",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(UserCollateral)25399_storage))",
            "src": "contracts/stablecoin/WQRouter.sol:69"
          }
        ],
        "types": {
          "t_contract(WQPriceOracle)25336": {
            "label": "contract WQPriceOracle"
          },
          "t_contract(WQBridgeTokenInterface)10351": {
            "label": "contract WQBridgeTokenInterface"
          },
          "t_contract(WQSurplusAuction)28309": {
            "label": "contract WQSurplusAuction"
          },
          "t_contract(WQDebtAuction)24971": {
            "label": "contract WQDebtAuction"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)25413_storage)": {
            "label": "mapping(string => struct WQRouter.TokenSettings)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(TokenSettings)25413_storage": {
            "label": "struct WQRouter.TokenSettings",
            "members": [
              {
                "label": "totalCollateral",
                "type": "t_uint256"
              },
              {
                "label": "totalDebt",
                "type": "t_uint256"
              },
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "collateralAuction",
                "type": "t_contract(WQCollateralAuction)24185"
              },
              {
                "label": "minRatio",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              }
            ]
          },
          "t_contract(WQCollateralAuction)24185": {
            "label": "contract WQCollateralAuction"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(UserCollateral)25399_storage))": {
            "label": "mapping(string => mapping(address => struct WQRouter.UserCollateral))"
          },
          "t_mapping(t_address,t_struct(UserCollateral)25399_storage)": {
            "label": "mapping(address => struct WQRouter.UserCollateral)"
          },
          "t_struct(UserCollateral)25399_storage": {
            "label": "struct WQRouter.UserCollateral",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "vault",
                "type": "t_contract(WQRouterVault)27492"
              },
              {
                "label": "lotHashIndexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "lots",
                "type": "t_array(t_struct(UserLot)25385_storage)dyn_storage"
              }
            ]
          },
          "t_contract(WQRouterVault)27492": {
            "label": "contract WQRouterVault"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_struct(UserLot)25385_storage)dyn_storage": {
            "label": "struct WQRouter.UserLot[]"
          },
          "t_struct(UserLot)25385_storage": {
            "label": "struct WQRouter.UserLot",
            "members": [
              {
                "label": "priceIndex",
                "type": "t_uint256"
              },
              {
                "label": "index",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "c331008e74a4c1da388c7469a5353cc1cd2d79835b8ff1a8f261c2f0a22cd7fa": {
      "address": "0xB9E0E9fB14D8891ee1Cbe3C107107B352a3F2fe7",
      "txHash": "0xae53fab3f0f2945f5b515ca1c85db32ca73ee6ba7cbd8c9254b759a2ac77612e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQRouter",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)26188",
            "src": "contracts/stablecoin/WQRouter.sol:52"
          },
          {
            "contract": "WQRouter",
            "label": "wusd",
            "type": "t_contract(WQBridgeTokenInterface)10996",
            "src": "contracts/stablecoin/WQRouter.sol:53"
          },
          {
            "contract": "WQRouter",
            "label": "surplusAuction",
            "type": "t_contract(WQSurplusAuction)28910",
            "src": "contracts/stablecoin/WQRouter.sol:54"
          },
          {
            "contract": "WQRouter",
            "label": "debtAuction",
            "type": "t_contract(WQDebtAuction)25750",
            "src": "contracts/stablecoin/WQRouter.sol:55"
          },
          {
            "contract": "WQRouter",
            "label": "fixedRate",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:60"
          },
          {
            "contract": "WQRouter",
            "label": "annualInterestRate",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:61"
          },
          {
            "contract": "WQRouter",
            "label": "buyerRewards",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:62"
          },
          {
            "contract": "WQRouter",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/stablecoin/WQRouter.sol:63"
          },
          {
            "contract": "WQRouter",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)26260_storage)",
            "src": "contracts/stablecoin/WQRouter.sol:65"
          },
          {
            "contract": "WQRouter",
            "label": "collaterals",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(UserCollateral)26246_storage))",
            "src": "contracts/stablecoin/WQRouter.sol:66"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)26188": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_contract(WQBridgeTokenInterface)10996": {
            "label": "contract WQBridgeTokenInterface"
          },
          "t_contract(WQSurplusAuction)28910": {
            "label": "contract WQSurplusAuction"
          },
          "t_contract(WQDebtAuction)25750": {
            "label": "contract WQDebtAuction"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)26260_storage)": {
            "label": "mapping(string => struct WQRouter.TokenSettings)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(TokenSettings)26260_storage": {
            "label": "struct WQRouter.TokenSettings",
            "members": [
              {
                "label": "totalCollateral",
                "type": "t_uint256"
              },
              {
                "label": "totalDebt",
                "type": "t_uint256"
              },
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "collateralAuction",
                "type": "t_contract(WQCollateralAuction)24949"
              },
              {
                "label": "minRatio",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              }
            ]
          },
          "t_contract(WQCollateralAuction)24949": {
            "label": "contract WQCollateralAuction"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(UserCollateral)26246_storage))": {
            "label": "mapping(string => mapping(address => struct WQRouter.UserCollateral))"
          },
          "t_mapping(t_address,t_struct(UserCollateral)26246_storage)": {
            "label": "mapping(address => struct WQRouter.UserCollateral)"
          },
          "t_struct(UserCollateral)26246_storage": {
            "label": "struct WQRouter.UserCollateral",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "vault",
                "type": "t_contract(WQRouterVault)28078"
              },
              {
                "label": "lots",
                "type": "t_struct(UintSet)4255_storage"
              }
            ]
          },
          "t_contract(WQRouterVault)28078": {
            "label": "contract WQRouterVault"
          },
          "t_struct(UintSet)4255_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3797_storage"
              }
            ]
          },
          "t_struct(Set)3797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "206178f4983c4116a451f235dcbeb7ba1150f63167c8ada5e1bff7a8cdd78fce": {
      "address": "0xe89508D74579A06A65B907c91F697CF4F8D9Fac7",
      "txHash": "0x43d65055b139ac38f8f33865e1e354f72091a9682f09a101e5e4f4c74c2096cd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)26188",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:46"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "router",
            "type": "t_contract(WQRouterInterface)27985",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:48"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "token",
            "type": "t_contract(IERC20MetadataUpgradeable)2070",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:50"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "liquidateThreshold",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:53"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "upperBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:55"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "lowerBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:57"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "auctionDuration",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:59"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "totalAuctioned",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:62"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "lots",
            "type": "t_array(t_struct(LotInfo)23825_storage)dyn_storage",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:64"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)26188": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_contract(WQRouterInterface)27985": {
            "label": "contract WQRouterInterface"
          },
          "t_contract(IERC20MetadataUpgradeable)2070": {
            "label": "contract IERC20MetadataUpgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(LotInfo)23825_storage)dyn_storage": {
            "label": "struct WQCollateralAuction.LotInfo[]"
          },
          "t_struct(LotInfo)23825_storage": {
            "label": "struct WQCollateralAuction.LotInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "ratio",
                "type": "t_uint256"
              },
              {
                "label": "created",
                "type": "t_uint256"
              },
              {
                "label": "saleAmount",
                "type": "t_uint256"
              },
              {
                "label": "endPrice",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(LotStatus)23805"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LotStatus)23805": {
            "label": "enum WQCollateralAuction.LotStatus",
            "members": [
              "Unknown",
              "New",
              "Auctioned",
              "Liquidated"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5700d973f3da76c0745b1bffd1a9c50b76893c145d3fe610ed02e087ed791463": {
      "address": "0x8732B34e7c8A0504BA99cBC5ea1D5D340a636Ec6",
      "txHash": "0xb7aa62691e363a6fbfc605fc1d5cbee2eae53f632710063fb43031c0fab9c34a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQLock",
            "label": "epochLength",
            "type": "t_uint256",
            "src": "contracts/WQLock.sol:23"
          },
          {
            "contract": "WQLock",
            "label": "beneficiary",
            "type": "t_address_payable",
            "src": "contracts/WQLock.sol:25"
          },
          {
            "contract": "WQLock",
            "label": "paymentSize",
            "type": "t_uint256",
            "src": "contracts/WQLock.sol:27"
          },
          {
            "contract": "WQLock",
            "label": "paymentsRemaining",
            "type": "t_uint256",
            "src": "contracts/WQLock.sol:28"
          },
          {
            "contract": "WQLock",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/WQLock.sol:29"
          },
          {
            "contract": "WQLock",
            "label": "beneficiaryBalance",
            "type": "t_uint256",
            "src": "contracts/WQLock.sol:30"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "43ce8920ea9c796d75f01164aaada5d3c7493bee836b5aeae51d3bd154dc1ff2": {
      "address": "0x7D130E68F4E9AB1f806Ef8551B00441Dc94Cb6BB",
      "txHash": "0xd0b8de1bd50e01d954a0ef5a2efb54a17415175c13b2cb1855e50861cc0234a7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQLock",
            "label": "epochLength",
            "type": "t_uint256",
            "src": "contracts/WQLock.sol:21"
          },
          {
            "contract": "WQLock",
            "label": "beneficiary",
            "type": "t_address_payable",
            "src": "contracts/WQLock.sol:23"
          },
          {
            "contract": "WQLock",
            "label": "paymentSize",
            "type": "t_uint256",
            "src": "contracts/WQLock.sol:25"
          },
          {
            "contract": "WQLock",
            "label": "paymentsRemaining",
            "type": "t_uint256",
            "src": "contracts/WQLock.sol:26"
          },
          {
            "contract": "WQLock",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/WQLock.sol:27"
          },
          {
            "contract": "WQLock",
            "label": "beneficiaryBalance",
            "type": "t_uint256",
            "src": "contracts/WQLock.sol:28"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a9fb398a86be4dd7726d23658479240e6c6222b7fbbd61426885f11dae1f0837": {
      "address": "0x19cD6eB8e15583338a87c80c4743F7A17539e73d",
      "txHash": "0xef5a40612ffda1055a7927d9a926b7d0e9b2ad92525e32415f31126de1d4e908",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQRouter",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)24439",
            "src": "contracts/stablecoin/WQRouter.sol:52"
          },
          {
            "contract": "WQRouter",
            "label": "wusd",
            "type": "t_contract(WQBridgeTokenInterface)9417",
            "src": "contracts/stablecoin/WQRouter.sol:53"
          },
          {
            "contract": "WQRouter",
            "label": "surplusAuction",
            "type": "t_contract(WQSurplusAuction)27046",
            "src": "contracts/stablecoin/WQRouter.sol:54"
          },
          {
            "contract": "WQRouter",
            "label": "debtAuction",
            "type": "t_contract(WQDebtAuction)24001",
            "src": "contracts/stablecoin/WQRouter.sol:55"
          },
          {
            "contract": "WQRouter",
            "label": "fixedRate",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:60"
          },
          {
            "contract": "WQRouter",
            "label": "annualInterestRate",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:61"
          },
          {
            "contract": "WQRouter",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:62"
          },
          {
            "contract": "WQRouter",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/stablecoin/WQRouter.sol:63"
          },
          {
            "contract": "WQRouter",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)24511_storage)",
            "src": "contracts/stablecoin/WQRouter.sol:65"
          },
          {
            "contract": "WQRouter",
            "label": "collaterals",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(UserCollateral)24497_storage))",
            "src": "contracts/stablecoin/WQRouter.sol:66"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)24439": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_contract(WQBridgeTokenInterface)9417": {
            "label": "contract WQBridgeTokenInterface"
          },
          "t_contract(WQSurplusAuction)27046": {
            "label": "contract WQSurplusAuction"
          },
          "t_contract(WQDebtAuction)24001": {
            "label": "contract WQDebtAuction"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)24511_storage)": {
            "label": "mapping(string => struct WQRouter.TokenSettings)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(TokenSettings)24511_storage": {
            "label": "struct WQRouter.TokenSettings",
            "members": [
              {
                "label": "totalCollateral",
                "type": "t_uint256"
              },
              {
                "label": "totalDebt",
                "type": "t_uint256"
              },
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "collateralAuction",
                "type": "t_contract(WQCollateralAuction)23200"
              },
              {
                "label": "minRatio",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              }
            ]
          },
          "t_contract(WQCollateralAuction)23200": {
            "label": "contract WQCollateralAuction"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(UserCollateral)24497_storage))": {
            "label": "mapping(string => mapping(address => struct WQRouter.UserCollateral))"
          },
          "t_mapping(t_address,t_struct(UserCollateral)24497_storage)": {
            "label": "mapping(address => struct WQRouter.UserCollateral)"
          },
          "t_struct(UserCollateral)24497_storage": {
            "label": "struct WQRouter.UserCollateral",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "vault",
                "type": "t_contract(WQRouterVault)26214"
              },
              {
                "label": "lots",
                "type": "t_struct(UintSet)4255_storage"
              }
            ]
          },
          "t_contract(WQRouterVault)26214": {
            "label": "contract WQRouterVault"
          },
          "t_struct(UintSet)4255_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3797_storage"
              }
            ]
          },
          "t_struct(Set)3797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "6bd7990a29bbffb5fa3bdc7dd4e772a310e103e4907145f52ace966a7e19da12": {
      "address": "0x152f397e605Db323e0fA4f81338Ae80Cea9ba1fd",
      "txHash": "0x17af285ee072930b751afb7f258387023de94ca66ba5a012268392c3982a5d0c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)24439",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:46"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "router",
            "type": "t_contract(WQRouterInterface)26121",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:48"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "token",
            "type": "t_contract(IERC20MetadataUpgradeable)2070",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:50"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "liquidateThreshold",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:53"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "upperBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:55"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "lowerBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:57"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "auctionDuration",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:59"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "totalAuctioned",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:61"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "reservesEnabled",
            "type": "t_bool",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:63"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "lots",
            "type": "t_array(t_struct(LotInfo)22064_storage)dyn_storage",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:65"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)24439": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_contract(WQRouterInterface)26121": {
            "label": "contract WQRouterInterface"
          },
          "t_contract(IERC20MetadataUpgradeable)2070": {
            "label": "contract IERC20MetadataUpgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_struct(LotInfo)22064_storage)dyn_storage": {
            "label": "struct WQCollateralAuction.LotInfo[]"
          },
          "t_struct(LotInfo)22064_storage": {
            "label": "struct WQCollateralAuction.LotInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "ratio",
                "type": "t_uint256"
              },
              {
                "label": "created",
                "type": "t_uint256"
              },
              {
                "label": "saleAmount",
                "type": "t_uint256"
              },
              {
                "label": "endPrice",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(LotStatus)22044"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LotStatus)22044": {
            "label": "enum WQCollateralAuction.LotStatus",
            "members": [
              "Unknown",
              "New",
              "Auctioned",
              "Liquidated"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "9a088ab8bd0461f356d2e6433365898fe8ff805529db5c4623d37890d1dd6487": {
      "address": "0x1E70C9253fA910D595af18BbcBA3925354b3f3e9",
      "txHash": "0xf8766ffaf00f2a7b137de1706465d99fefbe37027e407c4b59d33db0d46f2455",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQRouter",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)24453",
            "src": "contracts/stablecoin/WQRouter.sol:52"
          },
          {
            "contract": "WQRouter",
            "label": "wusd",
            "type": "t_contract(WQBridgeTokenInterface)9417",
            "src": "contracts/stablecoin/WQRouter.sol:53"
          },
          {
            "contract": "WQRouter",
            "label": "surplusAuction",
            "type": "t_contract(WQSurplusAuction)27110",
            "src": "contracts/stablecoin/WQRouter.sol:54"
          },
          {
            "contract": "WQRouter",
            "label": "debtAuction",
            "type": "t_contract(WQDebtAuction)24015",
            "src": "contracts/stablecoin/WQRouter.sol:55"
          },
          {
            "contract": "WQRouter",
            "label": "fixedRate",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:60"
          },
          {
            "contract": "WQRouter",
            "label": "annualInterestRate",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:61"
          },
          {
            "contract": "WQRouter",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:62"
          },
          {
            "contract": "WQRouter",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/stablecoin/WQRouter.sol:63"
          },
          {
            "contract": "WQRouter",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)24525_storage)",
            "src": "contracts/stablecoin/WQRouter.sol:65"
          },
          {
            "contract": "WQRouter",
            "label": "collaterals",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(UserCollateral)24511_storage))",
            "src": "contracts/stablecoin/WQRouter.sol:66"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)24453": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_contract(WQBridgeTokenInterface)9417": {
            "label": "contract WQBridgeTokenInterface"
          },
          "t_contract(WQSurplusAuction)27110": {
            "label": "contract WQSurplusAuction"
          },
          "t_contract(WQDebtAuction)24015": {
            "label": "contract WQDebtAuction"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)24525_storage)": {
            "label": "mapping(string => struct WQRouter.TokenSettings)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(TokenSettings)24525_storage": {
            "label": "struct WQRouter.TokenSettings",
            "members": [
              {
                "label": "totalCollateral",
                "type": "t_uint256"
              },
              {
                "label": "totalDebt",
                "type": "t_uint256"
              },
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "collateralAuction",
                "type": "t_contract(WQCollateralAuction)23214"
              },
              {
                "label": "minRatio",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              }
            ]
          },
          "t_contract(WQCollateralAuction)23214": {
            "label": "contract WQCollateralAuction"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(UserCollateral)24511_storage))": {
            "label": "mapping(string => mapping(address => struct WQRouter.UserCollateral))"
          },
          "t_mapping(t_address,t_struct(UserCollateral)24511_storage)": {
            "label": "mapping(address => struct WQRouter.UserCollateral)"
          },
          "t_struct(UserCollateral)24511_storage": {
            "label": "struct WQRouter.UserCollateral",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "vault",
                "type": "t_contract(WQRouterVault)26278"
              },
              {
                "label": "lots",
                "type": "t_struct(UintSet)4255_storage"
              }
            ]
          },
          "t_contract(WQRouterVault)26278": {
            "label": "contract WQRouterVault"
          },
          "t_struct(UintSet)4255_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3797_storage"
              }
            ]
          },
          "t_struct(Set)3797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "e7d660c857d7d7e2537a17d1bacc8c962794f37365b089dd191983e823c99bb6": {
      "address": "0x21aa5a3B3A49D5Ea9b724509Ca04c9B13B44597e",
      "txHash": "0xedc0e26aa6f987fb3d697352749b7ecb57ba5011875b1602787929562f6b9547",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)24453",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:46"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "router",
            "type": "t_contract(WQRouterInterface)26185",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:48"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "token",
            "type": "t_contract(IERC20MetadataUpgradeable)2070",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:50"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "liquidateThreshold",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:53"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "upperBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:55"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "lowerBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:57"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "auctionDuration",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:59"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "totalAuctioned",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:61"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "reservesEnabled",
            "type": "t_bool",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:63"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "lots",
            "type": "t_array(t_struct(LotInfo)22064_storage)dyn_storage",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:65"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)24453": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_contract(WQRouterInterface)26185": {
            "label": "contract WQRouterInterface"
          },
          "t_contract(IERC20MetadataUpgradeable)2070": {
            "label": "contract IERC20MetadataUpgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_struct(LotInfo)22064_storage)dyn_storage": {
            "label": "struct WQCollateralAuction.LotInfo[]"
          },
          "t_struct(LotInfo)22064_storage": {
            "label": "struct WQCollateralAuction.LotInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "ratio",
                "type": "t_uint256"
              },
              {
                "label": "created",
                "type": "t_uint256"
              },
              {
                "label": "saleAmount",
                "type": "t_uint256"
              },
              {
                "label": "endPrice",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(LotStatus)22044"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LotStatus)22044": {
            "label": "enum WQCollateralAuction.LotStatus",
            "members": [
              "Unknown",
              "New",
              "Auctioned",
              "Liquidated"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "b78bfda0593eb60b0c8be7a499ec3e9291f83685add78d442fe07637b515cd22": {
      "address": "0x47E3685A353C24108D9608626c3364a0db3257D7",
      "txHash": "0xa0da8d2816b06c74bec83885b169345374b39d58dcb7c02208eba2f4d0d2550a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQPriceOracle",
            "label": "validTime",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQPriceOracle.sol:26"
          },
          {
            "contract": "WQPriceOracle",
            "label": "lastNonce",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQPriceOracle.sol:27"
          },
          {
            "contract": "WQPriceOracle",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_struct(TokenInfo)24079_storage)",
            "src": "contracts/stablecoin/WQPriceOracle.sol:28"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_struct(TokenInfo)24079_storage)": {
            "label": "mapping(string => struct WQPriceOracle.TokenInfo)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(TokenInfo)24079_storage": {
            "label": "struct WQPriceOracle.TokenInfo",
            "members": [
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "maxRatio",
                "type": "t_uint256"
              },
              {
                "label": "updatedTime",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "c0b3215d5cbd9c84f5a762a80afe98fa9bfdced12d053d2ff13bf6d5e70203a3": {
      "address": "0x1da3d973Dd29CcBDf631613C721fF78B65051882",
      "txHash": "0x3b89182ffc35fb0d65aa99dec8bd6ec519e7cbaf9bb56a7744def7e1c791aa5a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQRouter",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)24500",
            "src": "contracts/stablecoin/WQRouter.sol:52"
          },
          {
            "contract": "WQRouter",
            "label": "wusd",
            "type": "t_contract(WQBridgeTokenInterface)9417",
            "src": "contracts/stablecoin/WQRouter.sol:53"
          },
          {
            "contract": "WQRouter",
            "label": "surplusAuction",
            "type": "t_contract(WQSurplusAuction)27206",
            "src": "contracts/stablecoin/WQRouter.sol:54"
          },
          {
            "contract": "WQRouter",
            "label": "debtAuction",
            "type": "t_contract(WQDebtAuction)24062",
            "src": "contracts/stablecoin/WQRouter.sol:55"
          },
          {
            "contract": "WQRouter",
            "label": "fixedRate",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:60"
          },
          {
            "contract": "WQRouter",
            "label": "annualInterestRate",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:61"
          },
          {
            "contract": "WQRouter",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:62"
          },
          {
            "contract": "WQRouter",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/stablecoin/WQRouter.sol:63"
          },
          {
            "contract": "WQRouter",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)24572_storage)",
            "src": "contracts/stablecoin/WQRouter.sol:65"
          },
          {
            "contract": "WQRouter",
            "label": "collaterals",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(UserCollateral)24558_storage))",
            "src": "contracts/stablecoin/WQRouter.sol:66"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)24500": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_contract(WQBridgeTokenInterface)9417": {
            "label": "contract WQBridgeTokenInterface"
          },
          "t_contract(WQSurplusAuction)27206": {
            "label": "contract WQSurplusAuction"
          },
          "t_contract(WQDebtAuction)24062": {
            "label": "contract WQDebtAuction"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)24572_storage)": {
            "label": "mapping(string => struct WQRouter.TokenSettings)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(TokenSettings)24572_storage": {
            "label": "struct WQRouter.TokenSettings",
            "members": [
              {
                "label": "totalCollateral",
                "type": "t_uint256"
              },
              {
                "label": "totalDebt",
                "type": "t_uint256"
              },
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "collateralAuction",
                "type": "t_contract(WQCollateralAuction)23261"
              },
              {
                "label": "minRatio",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              }
            ]
          },
          "t_contract(WQCollateralAuction)23261": {
            "label": "contract WQCollateralAuction"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(UserCollateral)24558_storage))": {
            "label": "mapping(string => mapping(address => struct WQRouter.UserCollateral))"
          },
          "t_mapping(t_address,t_struct(UserCollateral)24558_storage)": {
            "label": "mapping(address => struct WQRouter.UserCollateral)"
          },
          "t_struct(UserCollateral)24558_storage": {
            "label": "struct WQRouter.UserCollateral",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "vault",
                "type": "t_contract(WQRouterVault)26374"
              },
              {
                "label": "lots",
                "type": "t_struct(UintSet)4255_storage"
              }
            ]
          },
          "t_contract(WQRouterVault)26374": {
            "label": "contract WQRouterVault"
          },
          "t_struct(UintSet)4255_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3797_storage"
              }
            ]
          },
          "t_struct(Set)3797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "1e0da1feb313807533625e537c2bc1cf3a59e237874373c0bfdd311a3e8a35e2": {
      "address": "0x1A4F0db0D29e28f6097082e296E13b9de254619a",
      "txHash": "0x0826f3438ba996f0054ff1c2d95c9147dd7c5a6d2b651bddeca2d23f7ad1d74a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)24472",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:46"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "router",
            "type": "t_contract(WQRouterInterface)26253",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:48"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "token",
            "type": "t_contract(IERC20MetadataUpgradeable)2070",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:50"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "liquidateThreshold",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:53"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "upperBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:55"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "lowerBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:57"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "auctionDuration",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:59"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "totalAuctioned",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:61"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "reservesEnabled",
            "type": "t_bool",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:63"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "lots",
            "type": "t_array(t_struct(LotInfo)22064_storage)dyn_storage",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:65"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)24472": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_contract(WQRouterInterface)26253": {
            "label": "contract WQRouterInterface"
          },
          "t_contract(IERC20MetadataUpgradeable)2070": {
            "label": "contract IERC20MetadataUpgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_struct(LotInfo)22064_storage)dyn_storage": {
            "label": "struct WQCollateralAuction.LotInfo[]"
          },
          "t_struct(LotInfo)22064_storage": {
            "label": "struct WQCollateralAuction.LotInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "ratio",
                "type": "t_uint256"
              },
              {
                "label": "created",
                "type": "t_uint256"
              },
              {
                "label": "saleAmount",
                "type": "t_uint256"
              },
              {
                "label": "endPrice",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(LotStatus)22044"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LotStatus)22044": {
            "label": "enum WQCollateralAuction.LotStatus",
            "members": [
              "Unknown",
              "New",
              "Auctioned",
              "Liquidated"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "c999b6cf6d4cbfe4bfb9c60e268806f99e127eb34114ea84d741c021371a1a62": {
      "address": "0x2c3C0f9c886122A64E81285923fCB7d8fbC6168C",
      "txHash": "0xdc55a0ba9bbf1967389c9ac9943b059f8e01141c000b38b9fd2c0371c182dec5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)24465",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:46"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "router",
            "type": "t_contract(WQRouterInterface)26246",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:48"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "token",
            "type": "t_contract(IERC20MetadataUpgradeable)2070",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:50"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "liquidateThreshold",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:53"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "upperBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:55"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "lowerBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:57"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "auctionDuration",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:59"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "totalAuctioned",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:61"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "reservesEnabled",
            "type": "t_bool",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:63"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "lots",
            "type": "t_array(t_struct(LotInfo)22064_storage)dyn_storage",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:65"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)24465": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_contract(WQRouterInterface)26246": {
            "label": "contract WQRouterInterface"
          },
          "t_contract(IERC20MetadataUpgradeable)2070": {
            "label": "contract IERC20MetadataUpgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_struct(LotInfo)22064_storage)dyn_storage": {
            "label": "struct WQCollateralAuction.LotInfo[]"
          },
          "t_struct(LotInfo)22064_storage": {
            "label": "struct WQCollateralAuction.LotInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "ratio",
                "type": "t_uint256"
              },
              {
                "label": "created",
                "type": "t_uint256"
              },
              {
                "label": "saleAmount",
                "type": "t_uint256"
              },
              {
                "label": "endPrice",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(LotStatus)22044"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LotStatus)22044": {
            "label": "enum WQCollateralAuction.LotStatus",
            "members": [
              "Unknown",
              "New",
              "Auctioned",
              "Liquidated"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "fcde379b16555e5a8b6e8a71b03d981b86f2f12bc1e8c1aa6d8d148a3c79f781": {
      "address": "0x3d022785d0E8f6aeBE1aB4181bA380Ec897aA663",
      "txHash": "0xfe981930da660dabcd387c66409fe549879eceb37710014e7640b94197dc09cb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)24469",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:46"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "router",
            "type": "t_contract(WQRouterInterface)26250",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:48"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "token",
            "type": "t_contract(IERC20MetadataUpgradeable)2070",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:50"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "liquidateThreshold",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:53"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "upperBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:55"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "lowerBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:57"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "auctionDuration",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:59"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "totalAuctioned",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:61"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "reservesEnabled",
            "type": "t_bool",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:63"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "lots",
            "type": "t_array(t_struct(LotInfo)22064_storage)dyn_storage",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:65"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)24469": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_contract(WQRouterInterface)26250": {
            "label": "contract WQRouterInterface"
          },
          "t_contract(IERC20MetadataUpgradeable)2070": {
            "label": "contract IERC20MetadataUpgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_struct(LotInfo)22064_storage)dyn_storage": {
            "label": "struct WQCollateralAuction.LotInfo[]"
          },
          "t_struct(LotInfo)22064_storage": {
            "label": "struct WQCollateralAuction.LotInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "ratio",
                "type": "t_uint256"
              },
              {
                "label": "created",
                "type": "t_uint256"
              },
              {
                "label": "saleAmount",
                "type": "t_uint256"
              },
              {
                "label": "endPrice",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(LotStatus)22044"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LotStatus)22044": {
            "label": "enum WQCollateralAuction.LotStatus",
            "members": [
              "Unknown",
              "New",
              "Auctioned",
              "Liquidated"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "d38b410f29bf450a134630244b2e83a5cd4ff3474f5af747be7fb83cae9b47a9": {
      "address": "0x345f52d911d59D60F5C026E21FA70bF64b8a4fb2",
      "txHash": "0x72bb46ab726211f97287ee7b8e08a9e1340a2631881daa5bbc810d9b02dd4d6c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)24475",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:46"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "router",
            "type": "t_contract(WQRouterInterface)26256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:48"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "token",
            "type": "t_contract(IERC20MetadataUpgradeable)2070",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:50"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "liquidateThreshold",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:53"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "upperBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:55"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "lowerBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:57"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "auctionDuration",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:59"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "totalAuctioned",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:61"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "reservesEnabled",
            "type": "t_bool",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:63"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "lots",
            "type": "t_array(t_struct(LotInfo)22064_storage)dyn_storage",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:65"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)24475": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_contract(WQRouterInterface)26256": {
            "label": "contract WQRouterInterface"
          },
          "t_contract(IERC20MetadataUpgradeable)2070": {
            "label": "contract IERC20MetadataUpgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_struct(LotInfo)22064_storage)dyn_storage": {
            "label": "struct WQCollateralAuction.LotInfo[]"
          },
          "t_struct(LotInfo)22064_storage": {
            "label": "struct WQCollateralAuction.LotInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "ratio",
                "type": "t_uint256"
              },
              {
                "label": "created",
                "type": "t_uint256"
              },
              {
                "label": "saleAmount",
                "type": "t_uint256"
              },
              {
                "label": "endPrice",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(LotStatus)22044"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LotStatus)22044": {
            "label": "enum WQCollateralAuction.LotStatus",
            "members": [
              "Unknown",
              "New",
              "Auctioned",
              "Liquidated"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "8fa00cae44a28f2c85fa39410b2bce9b22c35907fb8bf31b18b0c9bb7b00f0df": {
      "address": "0xe53a8465A51231E84af7D12d1485d502a23407d3",
      "txHash": "0xa5912fd91b134ad26ccc7f57ade56517875e86affb2b9b4add129d0b2c34ac50",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)24491",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:46"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "router",
            "type": "t_contract(WQRouterInterface)26272",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:48"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "token",
            "type": "t_contract(IERC20MetadataUpgradeable)2070",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:50"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "liquidateThreshold",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:53"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "upperBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:55"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "lowerBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:57"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "auctionDuration",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:59"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "totalAuctioned",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:61"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "reservesEnabled",
            "type": "t_bool",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:63"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "lots",
            "type": "t_array(t_struct(LotInfo)22064_storage)dyn_storage",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:65"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)24491": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_contract(WQRouterInterface)26272": {
            "label": "contract WQRouterInterface"
          },
          "t_contract(IERC20MetadataUpgradeable)2070": {
            "label": "contract IERC20MetadataUpgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_struct(LotInfo)22064_storage)dyn_storage": {
            "label": "struct WQCollateralAuction.LotInfo[]"
          },
          "t_struct(LotInfo)22064_storage": {
            "label": "struct WQCollateralAuction.LotInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "ratio",
                "type": "t_uint256"
              },
              {
                "label": "created",
                "type": "t_uint256"
              },
              {
                "label": "saleAmount",
                "type": "t_uint256"
              },
              {
                "label": "endPrice",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(LotStatus)22044"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LotStatus)22044": {
            "label": "enum WQCollateralAuction.LotStatus",
            "members": [
              "Unknown",
              "New",
              "Auctioned",
              "Liquidated"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "2121964e1984d2b85b574cfb8bdd7f2d9137005e5ebeaa7a6b22f81cb006471b": {
      "address": "0x9cC902C3a2EA6943e3611bE7209b0D191D031ebd",
      "txHash": "0x02cd9d9d528c5eed81b02c22fcbef71f47e8ffe97ef546bc25e17d1b15bfe9fe",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)24499",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:46"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "router",
            "type": "t_contract(WQRouterInterface)26280",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:48"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "token",
            "type": "t_contract(IERC20MetadataUpgradeable)2070",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:50"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "liquidateThreshold",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:53"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "upperBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:55"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "lowerBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:57"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "auctionDuration",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:59"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "totalAuctioned",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:61"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "reservesEnabled",
            "type": "t_bool",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:63"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "lots",
            "type": "t_array(t_struct(LotInfo)22064_storage)dyn_storage",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:65"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)24499": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_contract(WQRouterInterface)26280": {
            "label": "contract WQRouterInterface"
          },
          "t_contract(IERC20MetadataUpgradeable)2070": {
            "label": "contract IERC20MetadataUpgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_struct(LotInfo)22064_storage)dyn_storage": {
            "label": "struct WQCollateralAuction.LotInfo[]"
          },
          "t_struct(LotInfo)22064_storage": {
            "label": "struct WQCollateralAuction.LotInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "ratio",
                "type": "t_uint256"
              },
              {
                "label": "created",
                "type": "t_uint256"
              },
              {
                "label": "saleAmount",
                "type": "t_uint256"
              },
              {
                "label": "endPrice",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(LotStatus)22044"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LotStatus)22044": {
            "label": "enum WQCollateralAuction.LotStatus",
            "members": [
              "Unknown",
              "New",
              "Auctioned",
              "Liquidated"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "ed26187847d9f7d4e6fbb04cea423e49d74dd1d4ed024b4d0aa9c78b875ef4ad": {
      "address": "0xF8994e04A78021466eFeA90aFBf72840848cD48A",
      "txHash": "0x06edf1402a101bc49fd274def392c3a27678db0990c185d751eeb0d8059f8764",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)24500",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:46"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "router",
            "type": "t_contract(WQRouterInterface)26281",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:48"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "token",
            "type": "t_contract(IERC20MetadataUpgradeable)2070",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:50"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "liquidateThreshold",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:53"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "upperBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:55"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "lowerBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:57"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "auctionDuration",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:59"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "totalAuctioned",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:61"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "reservesEnabled",
            "type": "t_bool",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:63"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "lots",
            "type": "t_array(t_struct(LotInfo)22064_storage)dyn_storage",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:65"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)24500": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_contract(WQRouterInterface)26281": {
            "label": "contract WQRouterInterface"
          },
          "t_contract(IERC20MetadataUpgradeable)2070": {
            "label": "contract IERC20MetadataUpgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_struct(LotInfo)22064_storage)dyn_storage": {
            "label": "struct WQCollateralAuction.LotInfo[]"
          },
          "t_struct(LotInfo)22064_storage": {
            "label": "struct WQCollateralAuction.LotInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "ratio",
                "type": "t_uint256"
              },
              {
                "label": "created",
                "type": "t_uint256"
              },
              {
                "label": "saleAmount",
                "type": "t_uint256"
              },
              {
                "label": "endPrice",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(LotStatus)22044"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LotStatus)22044": {
            "label": "enum WQCollateralAuction.LotStatus",
            "members": [
              "Unknown",
              "New",
              "Auctioned",
              "Liquidated"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "c0111f1c6c5d510d8211570a55f0289a70182196796a1f8650ccfaae6696d2c7": {
      "address": "0xa5DA6f9e6620596630c5Fc06c08446f2C0236E99",
      "txHash": "0xbb8aa361c409d68ea29d08e9a0701a3ab5fc1dfd963671ddc6af7eab4ce3417c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)24494",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:46"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "router",
            "type": "t_contract(WQRouterInterface)26273",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:48"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "token",
            "type": "t_contract(IERC20MetadataUpgradeable)2070",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:50"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "liquidateThreshold",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:53"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "upperBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:55"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "lowerBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:57"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "auctionDuration",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:59"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "totalAuctioned",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:61"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "reservesEnabled",
            "type": "t_bool",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:63"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "lots",
            "type": "t_array(t_struct(LotInfo)22064_storage)dyn_storage",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:65"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)24494": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_contract(WQRouterInterface)26273": {
            "label": "contract WQRouterInterface"
          },
          "t_contract(IERC20MetadataUpgradeable)2070": {
            "label": "contract IERC20MetadataUpgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_struct(LotInfo)22064_storage)dyn_storage": {
            "label": "struct WQCollateralAuction.LotInfo[]"
          },
          "t_struct(LotInfo)22064_storage": {
            "label": "struct WQCollateralAuction.LotInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "ratio",
                "type": "t_uint256"
              },
              {
                "label": "created",
                "type": "t_uint256"
              },
              {
                "label": "saleAmount",
                "type": "t_uint256"
              },
              {
                "label": "endPrice",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(LotStatus)22044"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LotStatus)22044": {
            "label": "enum WQCollateralAuction.LotStatus",
            "members": [
              "Unknown",
              "New",
              "Auctioned",
              "Liquidated"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "a305b722e746e6e8c670d8a57de59657af49339ad3bc8013e5b508f046706edc": {
      "address": "0x1713220aA9dC86c70ee0171133f8b7cb5D1289aC",
      "txHash": "0x45ea009703b2311e17be9c90fb190e3126a6752502fc7873f16dcd7cdd601e71",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQRouter",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)24484",
            "src": "contracts/stablecoin/WQRouter.sol:52"
          },
          {
            "contract": "WQRouter",
            "label": "wusd",
            "type": "t_contract(WQBridgeTokenInterface)9417",
            "src": "contracts/stablecoin/WQRouter.sol:53"
          },
          {
            "contract": "WQRouter",
            "label": "surplusAuction",
            "type": "t_contract(WQSurplusAuction)27188",
            "src": "contracts/stablecoin/WQRouter.sol:54"
          },
          {
            "contract": "WQRouter",
            "label": "debtAuction",
            "type": "t_contract(WQDebtAuction)24046",
            "src": "contracts/stablecoin/WQRouter.sol:55"
          },
          {
            "contract": "WQRouter",
            "label": "fixedRate",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:60"
          },
          {
            "contract": "WQRouter",
            "label": "annualInterestRate",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:61"
          },
          {
            "contract": "WQRouter",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:62"
          },
          {
            "contract": "WQRouter",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/stablecoin/WQRouter.sol:63"
          },
          {
            "contract": "WQRouter",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)24556_storage)",
            "src": "contracts/stablecoin/WQRouter.sol:65"
          },
          {
            "contract": "WQRouter",
            "label": "collaterals",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(UserCollateral)24542_storage))",
            "src": "contracts/stablecoin/WQRouter.sol:66"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)24484": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_contract(WQBridgeTokenInterface)9417": {
            "label": "contract WQBridgeTokenInterface"
          },
          "t_contract(WQSurplusAuction)27188": {
            "label": "contract WQSurplusAuction"
          },
          "t_contract(WQDebtAuction)24046": {
            "label": "contract WQDebtAuction"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)24556_storage)": {
            "label": "mapping(string => struct WQRouter.TokenSettings)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(TokenSettings)24556_storage": {
            "label": "struct WQRouter.TokenSettings",
            "members": [
              {
                "label": "totalCollateral",
                "type": "t_uint256"
              },
              {
                "label": "totalDebt",
                "type": "t_uint256"
              },
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "collateralAuction",
                "type": "t_contract(WQCollateralAuction)23245"
              },
              {
                "label": "minRatio",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              }
            ]
          },
          "t_contract(WQCollateralAuction)23245": {
            "label": "contract WQCollateralAuction"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(UserCollateral)24542_storage))": {
            "label": "mapping(string => mapping(address => struct WQRouter.UserCollateral))"
          },
          "t_mapping(t_address,t_struct(UserCollateral)24542_storage)": {
            "label": "mapping(address => struct WQRouter.UserCollateral)"
          },
          "t_struct(UserCollateral)24542_storage": {
            "label": "struct WQRouter.UserCollateral",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "vault",
                "type": "t_contract(WQRouterVault)26356"
              },
              {
                "label": "lots",
                "type": "t_struct(UintSet)4255_storage"
              }
            ]
          },
          "t_contract(WQRouterVault)26356": {
            "label": "contract WQRouterVault"
          },
          "t_struct(UintSet)4255_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3797_storage"
              }
            ]
          },
          "t_struct(Set)3797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "e7ab979353338d4710e2b6de39686ad910fbdf25eb8837c655c780d4d3bdd916": {
      "address": "0x6d6033E9310eA84a7B0A9750E45c9Ba13e8487B7",
      "txHash": "0x87941f6844e8ee9bcbdcb9700a2a27d037df48df44cf53ec5167256a2cba5f05",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)24484",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:46"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "router",
            "type": "t_contract(WQRouterInterface)26298",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:48"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "token",
            "type": "t_contract(IERC20MetadataUpgradeable)2070",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:50"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "liquidateThreshold",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:53"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "upperBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:55"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "lowerBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:57"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "auctionDuration",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:59"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "totalAuctioned",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:61"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "reservesEnabled",
            "type": "t_bool",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:63"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "lots",
            "type": "t_array(t_struct(LotInfo)22064_storage)dyn_storage",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:65"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)24484": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_contract(WQRouterInterface)26298": {
            "label": "contract WQRouterInterface"
          },
          "t_contract(IERC20MetadataUpgradeable)2070": {
            "label": "contract IERC20MetadataUpgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_struct(LotInfo)22064_storage)dyn_storage": {
            "label": "struct WQCollateralAuction.LotInfo[]"
          },
          "t_struct(LotInfo)22064_storage": {
            "label": "struct WQCollateralAuction.LotInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "ratio",
                "type": "t_uint256"
              },
              {
                "label": "created",
                "type": "t_uint256"
              },
              {
                "label": "saleAmount",
                "type": "t_uint256"
              },
              {
                "label": "endPrice",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(LotStatus)22044"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LotStatus)22044": {
            "label": "enum WQCollateralAuction.LotStatus",
            "members": [
              "Unknown",
              "New",
              "Auctioned",
              "Liquidated"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "778ad881d7d8ebac176b74adad8a0f98227f4b454646147f19bbe953a2b7c147": {
      "address": "0x454fD9ecC645561a89E6dc2f859Fd57BCa64C22f",
      "txHash": "0xb021efb9e649a64c3a7d1c2211f169cbf4b929a6378bbc1490c67745aa1e44bf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQRouter",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)24484",
            "src": "contracts/stablecoin/WQRouter.sol:52"
          },
          {
            "contract": "WQRouter",
            "label": "wusd",
            "type": "t_contract(WQBridgeTokenInterface)9417",
            "src": "contracts/stablecoin/WQRouter.sol:53"
          },
          {
            "contract": "WQRouter",
            "label": "surplusAuction",
            "type": "t_contract(WQSurplusAuction)27182",
            "src": "contracts/stablecoin/WQRouter.sol:54"
          },
          {
            "contract": "WQRouter",
            "label": "debtAuction",
            "type": "t_contract(WQDebtAuction)24046",
            "src": "contracts/stablecoin/WQRouter.sol:55"
          },
          {
            "contract": "WQRouter",
            "label": "fixedRate",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:60"
          },
          {
            "contract": "WQRouter",
            "label": "annualInterestRate",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:61"
          },
          {
            "contract": "WQRouter",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:62"
          },
          {
            "contract": "WQRouter",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/stablecoin/WQRouter.sol:63"
          },
          {
            "contract": "WQRouter",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)24556_storage)",
            "src": "contracts/stablecoin/WQRouter.sol:65"
          },
          {
            "contract": "WQRouter",
            "label": "collaterals",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(UserCollateral)24542_storage))",
            "src": "contracts/stablecoin/WQRouter.sol:66"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)24484": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_contract(WQBridgeTokenInterface)9417": {
            "label": "contract WQBridgeTokenInterface"
          },
          "t_contract(WQSurplusAuction)27182": {
            "label": "contract WQSurplusAuction"
          },
          "t_contract(WQDebtAuction)24046": {
            "label": "contract WQDebtAuction"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)24556_storage)": {
            "label": "mapping(string => struct WQRouter.TokenSettings)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(TokenSettings)24556_storage": {
            "label": "struct WQRouter.TokenSettings",
            "members": [
              {
                "label": "totalCollateral",
                "type": "t_uint256"
              },
              {
                "label": "totalDebt",
                "type": "t_uint256"
              },
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "collateralAuction",
                "type": "t_contract(WQCollateralAuction)23245"
              },
              {
                "label": "minRatio",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              }
            ]
          },
          "t_contract(WQCollateralAuction)23245": {
            "label": "contract WQCollateralAuction"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(UserCollateral)24542_storage))": {
            "label": "mapping(string => mapping(address => struct WQRouter.UserCollateral))"
          },
          "t_mapping(t_address,t_struct(UserCollateral)24542_storage)": {
            "label": "mapping(address => struct WQRouter.UserCollateral)"
          },
          "t_struct(UserCollateral)24542_storage": {
            "label": "struct WQRouter.UserCollateral",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "vault",
                "type": "t_contract(WQRouterVault)26350"
              },
              {
                "label": "lots",
                "type": "t_struct(UintSet)4255_storage"
              }
            ]
          },
          "t_contract(WQRouterVault)26350": {
            "label": "contract WQRouterVault"
          },
          "t_struct(UintSet)4255_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3797_storage"
              }
            ]
          },
          "t_struct(Set)3797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "8ff1739d222747fe6375f7c51fd3e899f8553fbcc53eda274ddcd0d40d8aceb4": {
      "address": "0xF92275D4b0B33fA1BC3Db6B0F4DeFD1930f27Eb3",
      "txHash": "0x04efbd2ddffe84a22159eb644e5ad2f2d91a2e7e6a64902dc606df84a0872f6e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQRouter",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)24484",
            "src": "contracts/stablecoin/WQRouter.sol:52"
          },
          {
            "contract": "WQRouter",
            "label": "wusd",
            "type": "t_contract(WQBridgeTokenInterface)9417",
            "src": "contracts/stablecoin/WQRouter.sol:53"
          },
          {
            "contract": "WQRouter",
            "label": "surplusAuction",
            "type": "t_contract(WQSurplusAuction)27206",
            "src": "contracts/stablecoin/WQRouter.sol:54"
          },
          {
            "contract": "WQRouter",
            "label": "debtAuction",
            "type": "t_contract(WQDebtAuction)24046",
            "src": "contracts/stablecoin/WQRouter.sol:55"
          },
          {
            "contract": "WQRouter",
            "label": "fixedRate",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:60"
          },
          {
            "contract": "WQRouter",
            "label": "annualInterestRate",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:61"
          },
          {
            "contract": "WQRouter",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:62"
          },
          {
            "contract": "WQRouter",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/stablecoin/WQRouter.sol:63"
          },
          {
            "contract": "WQRouter",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)24556_storage)",
            "src": "contracts/stablecoin/WQRouter.sol:65"
          },
          {
            "contract": "WQRouter",
            "label": "collaterals",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(UserCollateral)24542_storage))",
            "src": "contracts/stablecoin/WQRouter.sol:66"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)24484": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_contract(WQBridgeTokenInterface)9417": {
            "label": "contract WQBridgeTokenInterface"
          },
          "t_contract(WQSurplusAuction)27206": {
            "label": "contract WQSurplusAuction"
          },
          "t_contract(WQDebtAuction)24046": {
            "label": "contract WQDebtAuction"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)24556_storage)": {
            "label": "mapping(string => struct WQRouter.TokenSettings)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(TokenSettings)24556_storage": {
            "label": "struct WQRouter.TokenSettings",
            "members": [
              {
                "label": "totalCollateral",
                "type": "t_uint256"
              },
              {
                "label": "totalDebt",
                "type": "t_uint256"
              },
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "collateralAuction",
                "type": "t_contract(WQCollateralAuction)23245"
              },
              {
                "label": "minRatio",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              }
            ]
          },
          "t_contract(WQCollateralAuction)23245": {
            "label": "contract WQCollateralAuction"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(UserCollateral)24542_storage))": {
            "label": "mapping(string => mapping(address => struct WQRouter.UserCollateral))"
          },
          "t_mapping(t_address,t_struct(UserCollateral)24542_storage)": {
            "label": "mapping(address => struct WQRouter.UserCollateral)"
          },
          "t_struct(UserCollateral)24542_storage": {
            "label": "struct WQRouter.UserCollateral",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "vault",
                "type": "t_contract(WQRouterVault)26374"
              },
              {
                "label": "lots",
                "type": "t_struct(UintSet)4255_storage"
              }
            ]
          },
          "t_contract(WQRouterVault)26374": {
            "label": "contract WQRouterVault"
          },
          "t_struct(UintSet)4255_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3797_storage"
              }
            ]
          },
          "t_struct(Set)3797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "fa5f680950b514d37f6be86482a3f1c9e09260ad6526524e286ea486888c52aa": {
      "address": "0x3Ed08A326863b0Cf3488FA1E3c43543D1a970855",
      "txHash": "0x18e2abfd01b1b00bb0966517a35838508fb011649d3f54c4b35c7b24935ca4b1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQRouter",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)24484",
            "src": "contracts/stablecoin/WQRouter.sol:52"
          },
          {
            "contract": "WQRouter",
            "label": "wusd",
            "type": "t_contract(WQBridgeTokenInterface)9417",
            "src": "contracts/stablecoin/WQRouter.sol:53"
          },
          {
            "contract": "WQRouter",
            "label": "surplusAuction",
            "type": "t_contract(WQSurplusAuction)27194",
            "src": "contracts/stablecoin/WQRouter.sol:54"
          },
          {
            "contract": "WQRouter",
            "label": "debtAuction",
            "type": "t_contract(WQDebtAuction)24046",
            "src": "contracts/stablecoin/WQRouter.sol:55"
          },
          {
            "contract": "WQRouter",
            "label": "fixedRate",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:60"
          },
          {
            "contract": "WQRouter",
            "label": "annualInterestRate",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:61"
          },
          {
            "contract": "WQRouter",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:62"
          },
          {
            "contract": "WQRouter",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/stablecoin/WQRouter.sol:63"
          },
          {
            "contract": "WQRouter",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)24556_storage)",
            "src": "contracts/stablecoin/WQRouter.sol:65"
          },
          {
            "contract": "WQRouter",
            "label": "collaterals",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(UserCollateral)24542_storage))",
            "src": "contracts/stablecoin/WQRouter.sol:66"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)24484": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_contract(WQBridgeTokenInterface)9417": {
            "label": "contract WQBridgeTokenInterface"
          },
          "t_contract(WQSurplusAuction)27194": {
            "label": "contract WQSurplusAuction"
          },
          "t_contract(WQDebtAuction)24046": {
            "label": "contract WQDebtAuction"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)24556_storage)": {
            "label": "mapping(string => struct WQRouter.TokenSettings)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(TokenSettings)24556_storage": {
            "label": "struct WQRouter.TokenSettings",
            "members": [
              {
                "label": "totalCollateral",
                "type": "t_uint256"
              },
              {
                "label": "totalDebt",
                "type": "t_uint256"
              },
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "collateralAuction",
                "type": "t_contract(WQCollateralAuction)23245"
              },
              {
                "label": "minRatio",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              }
            ]
          },
          "t_contract(WQCollateralAuction)23245": {
            "label": "contract WQCollateralAuction"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(UserCollateral)24542_storage))": {
            "label": "mapping(string => mapping(address => struct WQRouter.UserCollateral))"
          },
          "t_mapping(t_address,t_struct(UserCollateral)24542_storage)": {
            "label": "mapping(address => struct WQRouter.UserCollateral)"
          },
          "t_struct(UserCollateral)24542_storage": {
            "label": "struct WQRouter.UserCollateral",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "vault",
                "type": "t_contract(WQRouterVault)26362"
              },
              {
                "label": "lots",
                "type": "t_struct(UintSet)4255_storage"
              }
            ]
          },
          "t_contract(WQRouterVault)26362": {
            "label": "contract WQRouterVault"
          },
          "t_struct(UintSet)4255_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3797_storage"
              }
            ]
          },
          "t_struct(Set)3797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "76592b3ea86045d19f049786bddea70be061cb264c8888447606cf3d9d3b712f": {
      "address": "0xf0Fd1C4b56764Cb62F9E9e524dd201b4f3386117",
      "txHash": "0x9685b4d5e03b9c732f6701d47c5fa2bdedbcf26059911220034d4fa08c341d48",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQRouter",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)24657",
            "src": "contracts/stablecoin/WQRouter.sol:52"
          },
          {
            "contract": "WQRouter",
            "label": "wusd",
            "type": "t_contract(WQBridgeTokenInterface)9417",
            "src": "contracts/stablecoin/WQRouter.sol:53"
          },
          {
            "contract": "WQRouter",
            "label": "surplusAuction",
            "type": "t_contract(WQSurplusAuction)27396",
            "src": "contracts/stablecoin/WQRouter.sol:54"
          },
          {
            "contract": "WQRouter",
            "label": "debtAuction",
            "type": "t_contract(WQDebtAuction)24219",
            "src": "contracts/stablecoin/WQRouter.sol:55"
          },
          {
            "contract": "WQRouter",
            "label": "fixedRate",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:60"
          },
          {
            "contract": "WQRouter",
            "label": "annualInterestRate",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:61"
          },
          {
            "contract": "WQRouter",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:62"
          },
          {
            "contract": "WQRouter",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/stablecoin/WQRouter.sol:63"
          },
          {
            "contract": "WQRouter",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)24729_storage)",
            "src": "contracts/stablecoin/WQRouter.sol:65"
          },
          {
            "contract": "WQRouter",
            "label": "collaterals",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(UserCollateral)24715_storage))",
            "src": "contracts/stablecoin/WQRouter.sol:66"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)24657": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_contract(WQBridgeTokenInterface)9417": {
            "label": "contract WQBridgeTokenInterface"
          },
          "t_contract(WQSurplusAuction)27396": {
            "label": "contract WQSurplusAuction"
          },
          "t_contract(WQDebtAuction)24219": {
            "label": "contract WQDebtAuction"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)24729_storage)": {
            "label": "mapping(string => struct WQRouter.TokenSettings)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(TokenSettings)24729_storage": {
            "label": "struct WQRouter.TokenSettings",
            "members": [
              {
                "label": "totalCollateral",
                "type": "t_uint256"
              },
              {
                "label": "totalDebt",
                "type": "t_uint256"
              },
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "collateralAuction",
                "type": "t_contract(WQCollateralAuction)23418"
              },
              {
                "label": "minRatio",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              }
            ]
          },
          "t_contract(WQCollateralAuction)23418": {
            "label": "contract WQCollateralAuction"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(UserCollateral)24715_storage))": {
            "label": "mapping(string => mapping(address => struct WQRouter.UserCollateral))"
          },
          "t_mapping(t_address,t_struct(UserCollateral)24715_storage)": {
            "label": "mapping(address => struct WQRouter.UserCollateral)"
          },
          "t_struct(UserCollateral)24715_storage": {
            "label": "struct WQRouter.UserCollateral",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "vault",
                "type": "t_contract(WQRouterVault)26564"
              },
              {
                "label": "lots",
                "type": "t_struct(UintSet)4255_storage"
              }
            ]
          },
          "t_contract(WQRouterVault)26564": {
            "label": "contract WQRouterVault"
          },
          "t_struct(UintSet)4255_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3797_storage"
              }
            ]
          },
          "t_struct(Set)3797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "63d8b5e607f56ee92ae2c86af785345d75773cc4b333f08de13b09d215d15512": {
      "address": "0x57F06E1d2c8FC82C6d9Fb524D382E7410525d50d",
      "txHash": "0x52dc4e82ec3b45ad2ea37a5569eca5b537334c351e58b00ff59ff331836f8187",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)24657",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:46"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "router",
            "type": "t_contract(WQRouterInterface)26471",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:48"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "token",
            "type": "t_contract(IERC20MetadataUpgradeable)2070",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:50"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "liquidateThreshold",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:53"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "upperBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:55"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "lowerBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:57"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "auctionDuration",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:59"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "totalAuctioned",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:61"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "reservesEnabled",
            "type": "t_bool",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:63"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "lots",
            "type": "t_array(t_struct(LotInfo)22064_storage)dyn_storage",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:65"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)24657": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_contract(WQRouterInterface)26471": {
            "label": "contract WQRouterInterface"
          },
          "t_contract(IERC20MetadataUpgradeable)2070": {
            "label": "contract IERC20MetadataUpgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_struct(LotInfo)22064_storage)dyn_storage": {
            "label": "struct WQCollateralAuction.LotInfo[]"
          },
          "t_struct(LotInfo)22064_storage": {
            "label": "struct WQCollateralAuction.LotInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "ratio",
                "type": "t_uint256"
              },
              {
                "label": "created",
                "type": "t_uint256"
              },
              {
                "label": "saleAmount",
                "type": "t_uint256"
              },
              {
                "label": "endPrice",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(LotStatus)22044"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LotStatus)22044": {
            "label": "enum WQCollateralAuction.LotStatus",
            "members": [
              "Unknown",
              "New",
              "Auctioned",
              "Liquidated"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "2920988fadac40920e78175644f6748e6cf6e184fe7c1ff95f182d8cdef61ce3": {
      "address": "0x4000424faCeB1Ced41173417c27FC57be00fd3fD",
      "txHash": "0x042e986ff9cf79a4d55b7ed6fab5ad7c05d30d1f273255a7a9626ca7c21577e0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQRouter",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)24447",
            "src": "contracts/stablecoin/WQRouter.sol:52"
          },
          {
            "contract": "WQRouter",
            "label": "wusd",
            "type": "t_contract(WQBridgeTokenInterface)9417",
            "src": "contracts/stablecoin/WQRouter.sol:53"
          },
          {
            "contract": "WQRouter",
            "label": "surplusAuction",
            "type": "t_contract(WQSurplusAuction)27187",
            "src": "contracts/stablecoin/WQRouter.sol:54"
          },
          {
            "contract": "WQRouter",
            "label": "debtAuction",
            "type": "t_contract(WQDebtAuction)24009",
            "src": "contracts/stablecoin/WQRouter.sol:55"
          },
          {
            "contract": "WQRouter",
            "label": "fixedRate",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:60"
          },
          {
            "contract": "WQRouter",
            "label": "annualInterestRate",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:61"
          },
          {
            "contract": "WQRouter",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:62"
          },
          {
            "contract": "WQRouter",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/stablecoin/WQRouter.sol:63"
          },
          {
            "contract": "WQRouter",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)24519_storage)",
            "src": "contracts/stablecoin/WQRouter.sol:65"
          },
          {
            "contract": "WQRouter",
            "label": "collaterals",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(UserCollateral)24505_storage))",
            "src": "contracts/stablecoin/WQRouter.sol:66"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)24447": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_contract(WQBridgeTokenInterface)9417": {
            "label": "contract WQBridgeTokenInterface"
          },
          "t_contract(WQSurplusAuction)27187": {
            "label": "contract WQSurplusAuction"
          },
          "t_contract(WQDebtAuction)24009": {
            "label": "contract WQDebtAuction"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)24519_storage)": {
            "label": "mapping(string => struct WQRouter.TokenSettings)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(TokenSettings)24519_storage": {
            "label": "struct WQRouter.TokenSettings",
            "members": [
              {
                "label": "totalCollateral",
                "type": "t_uint256"
              },
              {
                "label": "totalDebt",
                "type": "t_uint256"
              },
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "collateralAuction",
                "type": "t_contract(WQCollateralAuction)23208"
              },
              {
                "label": "minRatio",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              }
            ]
          },
          "t_contract(WQCollateralAuction)23208": {
            "label": "contract WQCollateralAuction"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(UserCollateral)24505_storage))": {
            "label": "mapping(string => mapping(address => struct WQRouter.UserCollateral))"
          },
          "t_mapping(t_address,t_struct(UserCollateral)24505_storage)": {
            "label": "mapping(address => struct WQRouter.UserCollateral)"
          },
          "t_struct(UserCollateral)24505_storage": {
            "label": "struct WQRouter.UserCollateral",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "vault",
                "type": "t_contract(WQRouterVault)26355"
              },
              {
                "label": "lots",
                "type": "t_struct(UintSet)4255_storage"
              }
            ]
          },
          "t_contract(WQRouterVault)26355": {
            "label": "contract WQRouterVault"
          },
          "t_struct(UintSet)4255_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3797_storage"
              }
            ]
          },
          "t_struct(Set)3797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "a193a13002c5a9b5c532390e369760fbc3a08d06ea8e133aa87383508ea5faf5": {
      "address": "0x8C05b6ABa12C95c1F5E8C1194E9c4B71e8b22Dd7",
      "txHash": "0xde06a1ac1fdf2a7cfeb9987e2933f776ec9656091bbd2506f2fa04f045c213a9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)24660",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:46"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "router",
            "type": "t_contract(WQRouterInterface)26475",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:48"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "token",
            "type": "t_contract(IERC20MetadataUpgradeable)2070",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:50"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "liquidateThreshold",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:53"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "upperBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:55"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "lowerBoundCost",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:57"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "auctionDuration",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:59"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "totalAuctioned",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:61"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "reservesEnabled",
            "type": "t_bool",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:63"
          },
          {
            "contract": "WQCollateralAuction",
            "label": "lots",
            "type": "t_array(t_struct(LotInfo)22064_storage)dyn_storage",
            "src": "contracts/stablecoin/WQCollateralAuction.sol:65"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)24660": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_contract(WQRouterInterface)26475": {
            "label": "contract WQRouterInterface"
          },
          "t_contract(IERC20MetadataUpgradeable)2070": {
            "label": "contract IERC20MetadataUpgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_struct(LotInfo)22064_storage)dyn_storage": {
            "label": "struct WQCollateralAuction.LotInfo[]"
          },
          "t_struct(LotInfo)22064_storage": {
            "label": "struct WQCollateralAuction.LotInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "ratio",
                "type": "t_uint256"
              },
              {
                "label": "created",
                "type": "t_uint256"
              },
              {
                "label": "saleAmount",
                "type": "t_uint256"
              },
              {
                "label": "endPrice",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(LotStatus)22044"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LotStatus)22044": {
            "label": "enum WQCollateralAuction.LotStatus",
            "members": [
              "Unknown",
              "New",
              "Auctioned",
              "Liquidated"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "359ccf44b6b78c6f5288bfc1b40af1e9ad7e67e0c41ee58fbf8b8c3d4f35aea1": {
      "address": "0x08F103163dcAc77dbE6057769Eae3B8fb9986A0a",
      "txHash": "0xe61624b7c05ccf9816dd48cc1d69e5182b3b285c16525b6cb8e7531a8e9f2a8d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQRouter",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)24447",
            "src": "contracts/stablecoin/WQRouter.sol:52"
          },
          {
            "contract": "WQRouter",
            "label": "wusd",
            "type": "t_contract(WQBridgeTokenInterface)9417",
            "src": "contracts/stablecoin/WQRouter.sol:53"
          },
          {
            "contract": "WQRouter",
            "label": "surplusAuction",
            "type": "t_contract(WQSurplusAuction)27162",
            "src": "contracts/stablecoin/WQRouter.sol:54"
          },
          {
            "contract": "WQRouter",
            "label": "debtAuction",
            "type": "t_contract(WQDebtAuction)24009",
            "src": "contracts/stablecoin/WQRouter.sol:55"
          },
          {
            "contract": "WQRouter",
            "label": "fixedRate",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:60"
          },
          {
            "contract": "WQRouter",
            "label": "annualInterestRate",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:61"
          },
          {
            "contract": "WQRouter",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)24519_storage)",
            "src": "contracts/stablecoin/WQRouter.sol:63"
          },
          {
            "contract": "WQRouter",
            "label": "collaterals",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(UserCollateral)24505_storage))",
            "src": "contracts/stablecoin/WQRouter.sol:64"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)24447": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_contract(WQBridgeTokenInterface)9417": {
            "label": "contract WQBridgeTokenInterface"
          },
          "t_contract(WQSurplusAuction)27162": {
            "label": "contract WQSurplusAuction"
          },
          "t_contract(WQDebtAuction)24009": {
            "label": "contract WQDebtAuction"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)24519_storage)": {
            "label": "mapping(string => struct WQRouter.TokenSettings)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(TokenSettings)24519_storage": {
            "label": "struct WQRouter.TokenSettings",
            "members": [
              {
                "label": "totalCollateral",
                "type": "t_uint256"
              },
              {
                "label": "totalDebt",
                "type": "t_uint256"
              },
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "collateralAuction",
                "type": "t_contract(WQCollateralAuction)23208"
              },
              {
                "label": "minRatio",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(WQCollateralAuction)23208": {
            "label": "contract WQCollateralAuction"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(UserCollateral)24505_storage))": {
            "label": "mapping(string => mapping(address => struct WQRouter.UserCollateral))"
          },
          "t_mapping(t_address,t_struct(UserCollateral)24505_storage)": {
            "label": "mapping(address => struct WQRouter.UserCollateral)"
          },
          "t_struct(UserCollateral)24505_storage": {
            "label": "struct WQRouter.UserCollateral",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "vault",
                "type": "t_contract(WQRouterVault)26330"
              },
              {
                "label": "lots",
                "type": "t_struct(UintSet)4255_storage"
              }
            ]
          },
          "t_contract(WQRouterVault)26330": {
            "label": "contract WQRouterVault"
          },
          "t_struct(UintSet)4255_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3797_storage"
              }
            ]
          },
          "t_struct(Set)3797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "b00200c0dc1003e1f96f8aa327657e6eb76572a5b5cb797dd79ba411b827f42f": {
      "address": "0xB23dc595F4855736d262A2914B8d6b53461f1386",
      "txHash": "0x80ef84bc8d76ab167aab9987656966f7ba7b77fd5ab620dc37409cd9477cc243",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "WQRouter",
            "label": "oracle",
            "type": "t_contract(WQPriceOracleInterface)24447",
            "src": "contracts/stablecoin/WQRouter.sol:52"
          },
          {
            "contract": "WQRouter",
            "label": "wusd",
            "type": "t_contract(WQBridgeTokenInterface)9417",
            "src": "contracts/stablecoin/WQRouter.sol:53"
          },
          {
            "contract": "WQRouter",
            "label": "surplusAuction",
            "type": "t_contract(WQSurplusAuction)27186",
            "src": "contracts/stablecoin/WQRouter.sol:54"
          },
          {
            "contract": "WQRouter",
            "label": "debtAuction",
            "type": "t_contract(WQDebtAuction)24009",
            "src": "contracts/stablecoin/WQRouter.sol:55"
          },
          {
            "contract": "WQRouter",
            "label": "fixedRate",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:60"
          },
          {
            "contract": "WQRouter",
            "label": "annualInterestRate",
            "type": "t_uint256",
            "src": "contracts/stablecoin/WQRouter.sol:61"
          },
          {
            "contract": "WQRouter",
            "label": "tokens",
            "type": "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)24519_storage)",
            "src": "contracts/stablecoin/WQRouter.sol:63"
          },
          {
            "contract": "WQRouter",
            "label": "collaterals",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(UserCollateral)24505_storage))",
            "src": "contracts/stablecoin/WQRouter.sol:64"
          }
        ],
        "types": {
          "t_contract(WQPriceOracleInterface)24447": {
            "label": "contract WQPriceOracleInterface"
          },
          "t_contract(WQBridgeTokenInterface)9417": {
            "label": "contract WQBridgeTokenInterface"
          },
          "t_contract(WQSurplusAuction)27186": {
            "label": "contract WQSurplusAuction"
          },
          "t_contract(WQDebtAuction)24009": {
            "label": "contract WQDebtAuction"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_struct(TokenSettings)24519_storage)": {
            "label": "mapping(string => struct WQRouter.TokenSettings)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(TokenSettings)24519_storage": {
            "label": "struct WQRouter.TokenSettings",
            "members": [
              {
                "label": "totalCollateral",
                "type": "t_uint256"
              },
              {
                "label": "totalDebt",
                "type": "t_uint256"
              },
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "collateralAuction",
                "type": "t_contract(WQCollateralAuction)23208"
              },
              {
                "label": "minRatio",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(WQCollateralAuction)23208": {
            "label": "contract WQCollateralAuction"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(UserCollateral)24505_storage))": {
            "label": "mapping(string => mapping(address => struct WQRouter.UserCollateral))"
          },
          "t_mapping(t_address,t_struct(UserCollateral)24505_storage)": {
            "label": "mapping(address => struct WQRouter.UserCollateral)"
          },
          "t_struct(UserCollateral)24505_storage": {
            "label": "struct WQRouter.UserCollateral",
            "members": [
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "vault",
                "type": "t_contract(WQRouterVault)26354"
              },
              {
                "label": "lots",
                "type": "t_struct(UintSet)4255_storage"
              }
            ]
          },
          "t_contract(WQRouterVault)26354": {
            "label": "contract WQRouterVault"
          },
          "t_struct(UintSet)4255_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3797_storage"
              }
            ]
          },
          "t_struct(Set)3797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    }
  }
}
